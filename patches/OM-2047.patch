--- /dev/null
+++ ../library/Zend/Cloud/DocumentService/Adapter/WindowsAzure.php
@@ -525,7 +525,7 @@
      */
     protected function _validateKey($key)
     {
-        if (preg_match('@[/#?' . preg_quote('\\') . ']@', $key)) {
+        if (preg_match('@[/#?' . preg_quote('\\', '@') . ']@', $key)) {
             throw new Zend_Cloud_DocumentService_Exception('Invalid partition or row key provided; must not contain /, \\,  #, or ? characters');
         }
     }

--- /dev/null
+++ ../library/Zend/Db/Statement.php
@@ -185,11 +185,11 @@
         // e.g. \' or ''
         $qe = $this->_adapter->quote($q);
         $qe = substr($qe, 1, 2);
-        $qe = preg_quote($qe);
+        $qe = preg_quote($qe, '/');
         $escapeChar = substr($qe,0,1);
         // remove 'foo\'bar'
         if (!empty($q)) {
-            $escapeChar = preg_quote($escapeChar);
+            $escapeChar = preg_quote($escapeChar, '/');
             // this segfaults only after 65,000 characters instead of 9,000
             $sql = preg_replace("/$q([^$q{$escapeChar}]*|($qe)*)*$q/s", '', $sql);
         }
@@ -207,7 +207,7 @@
         // e.g. \" or "" or \`
         $de = $this->_adapter->quoteIdentifier($d);
         $de = substr($de, 1, 2);
-        $de = preg_quote($de);
+        $de = preg_quote($de, '/');
         // Note: $de and $d where never used..., now they are:
         $sql = preg_replace("/$d($de|\\\\{2}|[^$d])*$d/Us", '', $sql);
         return $sql;

--- /dev/null
+++ ../library/Zend/Http/Cookie.php
@@ -396,7 +396,7 @@

         // Check for either exact match or suffix match
         return ($cookieDomain == $host ||
-                preg_match('/\.' . preg_quote($cookieDomain) . '$/', $host));
+            preg_match('/\.' . preg_quote($cookieDomain, '/') . '$/', $host));
     }

     /**
