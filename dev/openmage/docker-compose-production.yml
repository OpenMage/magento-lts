version: "3.7"

services:
  php-fpm:
    image: ghcr.io/colinmollenhour/docker-openmage:8.2-fpm
    volumes:
      - ${SRC_DIR:-../..}:/var/www/html
    environment:
      - ENABLE_SENDMAIL=${ENABLE_SENDMAIL:-false}
      - PM_MAX_CHILDREN=${PM_MAX_CHILDREN:-40}
      - PM_START_SERVERS=${PM_START_SERVERS:-10}
      - PM_MIN_SPARE_SERVERS=${PM_MIN_SPARE_SERVERS:-6}
      - PM_MAX_SPARE_SERVERS=${PM_MAX_SPARE_SERVERS:-8}
    links:
      - mysql

  frontend:
    image: library/nginx:1.25
    environment:
      - NGINX_MAGE_RUN_CODE=default
      - NGINX_MAGE_RUN_TYPE=store
    links:
      - php-fpm
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/templates/default.conf.template:ro
      - ${SRC_DIR:-../..}:/var/www/html
      - ${STATIC_DIR:-../../pub}:/pub

  admin:
    image: library/nginx:1.25
    links:
      - php-fpm
    volumes:
      - ./nginx-admin.conf:/etc/nginx/templates/default.conf.template:ro
      - ${SRC_DIR:-../..}:/var/www/html
      - ${STATIC_DIR:-../../pub}:/pub

  cron:
    image: ghcr.io/colinmollenhour/docker-openmage:8.2-cli
    working_dir: /var/www/html
    command: /run-cron.sh
    user: www-data
    volumes:
      - ${SRC_DIR:-../..}:/var/www/html
    environment:
      - ENABLE_SENDMAIL=true
    links:
      - mysql

  cli:
    image: ghcr.io/colinmollenhour/docker-openmage:8.2-cli
    working_dir: /var/www/html
    volumes:
      - ${SRC_DIR:-../..}:/var/www/html
    environment:
      - COMPOSER_HOME=${COMPOSER_HOME:-/var/www/html/var/.composer}
    links:
      - mysql

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-}
      - MYSQL_USER=${MYSQL_USER:-openmage}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-openmage}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-openmage}
    volumes:
      - mysql:/var/lib/mysql

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 10m
    volumes:
      - redis:/data

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

volumes:
  mysql:
  caddy_data:
  caddy_config: