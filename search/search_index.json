{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Magento - Long Term Support","text":"<p>This repository is the home of an unofficial community-driven project. It\u2019s goal is to be a dependable alternative to the Magento CE official releases which integrates improvements directly from the community while maintaining a high level of backwards compatibility to the official releases.</p> <p>Pull requests with bug fixes and security patches from the community are encouraged and welcome!</p>"},{"location":"#magento-1-compatibility","title":"Magento 1 Compatibility","text":"<p>OpenMage LTS 19.4.0 is the first tagged version using the OpenMage LTS version naming system and all 19.x versions are mostly backward-compatible with Magento 1.9.4.x.</p> <p>OpenMage LTS 20.x and later have more changes that may not be 100% backward-compatible, but minimizing migration and upgrade hassle for users is always considered an important goal and factors heavily into the changes that are accepted even when accepting changes for <code>MAJOR</code> releases, described in Releases and Versioning.</p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#tag:cms-blocks","title":"CMS blocks","text":"<ul> <li>            Dynamic block content          </li> </ul>"},{"location":"tags/#tag:coding-style","title":"Coding style","text":"<ul> <li>            PER-2.0          </li> </ul>"},{"location":"tags/#tag:column","title":"Column","text":"<ul> <li>            Brief Guide on Grid Column          </li> </ul>"},{"location":"tags/#tag:composer","title":"Composer","text":"<ul> <li>            Customize Your OpenMage          </li> </ul>"},{"location":"tags/#tag:configurable-swatches","title":"Configurable Swatches","text":"<ul> <li>            Release v20.7.0          </li> </ul>"},{"location":"tags/#tag:configuration","title":"Configuration","text":"<ul> <li>            New Configuration Options          </li> </ul>"},{"location":"tags/#tag:contribute","title":"Contribute","text":"<ul> <li>            Git (for contributors)          </li> </ul>"},{"location":"tags/#tag:ddev","title":"DDEV","text":"<ul> <li>            Test Environment for OpenMage in Windows 10 Based on DDEV          </li> </ul>"},{"location":"tags/#tag:debug","title":"Debug","text":"<ul> <li>            Events &amp; Observer          </li> </ul>"},{"location":"tags/#tag:development","title":"Development","text":"<ul> <li>            DDEV          </li> <li>            Docker Compose          </li> <li>            Events &amp; Observer          </li> <li>            PhpStorm          </li> <li>            n98-magerun          </li> </ul>"},{"location":"tags/#tag:documentation","title":"Documentation","text":"<ul> <li>            MkDocs          </li> </ul>"},{"location":"tags/#tag:environment-variables","title":"Environment variables","text":"<ul> <li>            Release v20.7.0          </li> </ul>"},{"location":"tags/#tag:events","title":"Events","text":"<ul> <li>            Events &amp; Observer          </li> <li>            Events list          </li> <li>            New Events          </li> <li>            Release v20.2.0          </li> </ul>"},{"location":"tags/#tag:grid","title":"Grid","text":"<ul> <li>            Brief Guide on Grid Column          </li> </ul>"},{"location":"tags/#tag:install","title":"Install","text":"<ul> <li>            Composer Install          </li> <li>            Git (for contributors)          </li> <li>            Manual Install          </li> <li>            Requirements          </li> <li>            Secure installation          </li> </ul>"},{"location":"tags/#tag:modules","title":"Modules","text":"<ul> <li>            Analytics          </li> <li>            Back-end          </li> <li>            Cache          </li> <li>            Captcha          </li> <li>            Cron          </li> <li>            Email          </li> <li>            Front-end          </li> <li>            Front-end          </li> <li>            Images          </li> <li>            Log &amp; Debug          </li> <li>            Payment          </li> <li>            Swatches          </li> </ul>"},{"location":"tags/#tag:php-83","title":"PHP-8.3","text":"<ul> <li>            Release v20.2.0          </li> </ul>"},{"location":"tags/#tag:php-84","title":"PHP-8.4","text":"<ul> <li>            Release v20.10.0          </li> </ul>"},{"location":"tags/#tag:patches","title":"Patches","text":"<ul> <li>            Customize Your OpenMage          </li> </ul>"},{"location":"tags/#tag:scss","title":"SCSS","text":"<ul> <li>            PhpStorm          </li> </ul>"},{"location":"tags/#tag:security","title":"Security","text":"<ul> <li>            Release v19.4.10 and v20.0.6          </li> <li>            Release v19.4.13 and v20.0.10          </li> <li>            Release v19.4.15 and v20.0.13          </li> <li>            Release v19.4.22 and v20.0.19          </li> <li>            Release v19.4.23 and v20.0.20          </li> <li>            Release v19.4.6 and v20.0.2          </li> <li>            Release v19.4.8 and v20.0.4          </li> <li>            Release v20.10.1          </li> <li>            Release v20.5.0          </li> </ul>"},{"location":"tags/#tag:tinymce","title":"TinyMCE","text":"<ul> <li>            Release v20.2.0          </li> <li>            Release v20.3.0          </li> <li>            Release v20.4.0          </li> </ul>"},{"location":"tags/#tag:ups-rest-api","title":"UPS REST API","text":"<ul> <li>            Release v20.7.0          </li> <li>            Release v20.8.0          </li> <li>            Release v20.9.0          </li> </ul>"},{"location":"tags/#tag:vendor","title":"Vendor","text":"<ul> <li>            Customize Your OpenMage          </li> </ul>"},{"location":"tags/#tag:wsdl","title":"WSDL","text":"<ul> <li>            Release v19.4.17 and v20.0.15          </li> <li>            SOAP/WSDL          </li> </ul>"},{"location":"tags/#tag:windows-10","title":"Windows 10","text":"<ul> <li>            Test Environment for OpenMage in Windows 10 Based on DDEV          </li> </ul>"},{"location":"tags/#tag:zf1-future","title":"ZF1-Future","text":"<ul> <li>            Release v20.1.0          </li> <li>            Release v20.1.1          </li> </ul>"},{"location":"api/jsonrpc/","title":"OpenMage JSON-RPC API Overview","text":""},{"location":"api/jsonrpc/#introduction","title":"Introduction","text":"<p>The OpenMage API provides a standardized interface for third-party applications to interact with your OpenMage store. Using the API, developers can create applications that can:</p> <ul> <li>Manage products, categories, and inventory</li> <li>Process orders and shipments</li> <li>Handle customer data</li> <li>Access sales and catalog information</li> <li>And much more</li> </ul> <p>This document focuses on the JSON-RPC implementation of the OpenMage API, which provides a lightweight, language-agnostic way to interact with your OpenMage store programmatically.</p>"},{"location":"api/jsonrpc/#api-architecture-overview","title":"API Architecture Overview","text":"<p>The OpenMage API is built on a modular architecture that supports multiple protocols:</p> <ul> <li>JSON-RPC: A lightweight protocol that uses JSON for data encoding</li> <li>XML-RPC: Similar to JSON-RPC but uses XML for data encoding</li> <li>SOAP: A comprehensive web service protocol with formal WSDL definitions</li> <li>REST: See OpenMage REST API for more information</li> </ul> <p>The JSON-RPC adapter is implemented in <code>Mage_Api_Model_Server_Adapter_Jsonrpc</code> and uses the <code>Zend_Json_Server</code> component to handle requests and responses. The API follows a resource-based architecture where functionality is organized into logical resources (like catalog, customer, sales) with methods that operate on those resources.</p>"},{"location":"api/jsonrpc/#key-components","title":"Key Components","text":"<ol> <li>API Entry Point: The <code>api.php</code> file serves as the entry point for all API requests, routed to by the web server using the <code>/api/jsonrpc</code> URL</li> <li>Server Adapter: Handles protocol-specific details (JSON-RPC, XML-RPC, SOAP)</li> <li>Handler: Processes API requests and maps them to the appropriate resource models</li> <li>Resource Models: Implement the actual business logic for API operations</li> <li>ACL (Access Control List): Controls access to resources based on user permissions</li> </ol>"},{"location":"api/jsonrpc/#authentication","title":"Authentication","text":"<p>To use the OpenMage API, you must either authenticate with the login method to obtain a session ID and include this session ID with all subsequent API calls, or use the HTTP Basic Authentication method. The HTTP Basic Authentication method allows you to skip the login step and use your API credentials directly in the request which is simpler for many use cases, but does expose your credentials in each request whereas the session ID expires and needs to be refreshed periodically.</p>"},{"location":"api/jsonrpc/#login-authentication-process","title":"Login Authentication Process","text":"<ol> <li>Create an API User: In the OpenMage admin panel, go to System &gt; Web Services &gt; SOAP/XML-RPC - Users to create a user with appropriate role permissions</li> <li>Login Request: Send a login request with your username and API key</li> <li>Session ID: Receive a session ID that will be used for all subsequent requests</li> <li>Session Expiration: Sessions expire after a period of inactivity (configurable in OpenMage settings)</li> </ol>"},{"location":"api/jsonrpc/#login-authentication-example","title":"Login Authentication Example","text":"<pre><code>// Login Request\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"login\",\n  \"params\": [\"apiuser\", \"apikey123\"],\n  \"id\": 1\n}\n\n// Login Response\n{\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"8b98a77a37f50d3d472302981e86aab2\",\n  \"id\": 1\n}\n</code></pre>"},{"location":"api/jsonrpc/#http-basic-authentication","title":"HTTP Basic Authentication","text":"<p>As an alternative to session-based authentication, OpenMage also supports HTTP Basic Authentication for API requests. This method simplifies the authentication process by eliminating the need for a separate login step.</p>"},{"location":"api/jsonrpc/#how-http-basic-authorization-works","title":"How HTTP Basic Authorization Works","text":"<ol> <li>Use API Credentials: The API username and API key (created in admin panel) are used as the username and password for HTTP Basic Authorization</li> <li>Skip Login Call: When using HTTP Basic Authorization, the \u201clogin\u201d call is not required</li> <li>Null Session ID: The session ID parameter in the \u201ccall\u201d method can be set to \u201cnull\u201d</li> <li>Include Authorization Header: Include the Authorization header with each request</li> </ol>"},{"location":"api/jsonrpc/#http-basic-authorization-example","title":"HTTP Basic Authorization Example","text":"<pre><code>&lt;?php\n// PHP example using HTTP Basic Authorization\n$jsonRpcUrl = 'https://your-magento-store.com/api/jsonrpc';\n$apiUser = 'apiuser';\n$apiKey = 'apikey123';\n\n// Request data with null session ID\n$requestData = array(\n    'jsonrpc' =&gt; '2.0',\n    'method' =&gt; 'call',\n    'params' =&gt; [\n        null, // Null session ID when using HTTP Basic Authorization\n        'catalog_product.info',\n        'product_sku_123'\n    ],\n    'id' =&gt; 1\n);\n\n$ch = curl_init($jsonRpcUrl);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\ncurl_setopt($ch, CURLOPT_USERPWD, \"$apiUser:$apiKey\"); // HTTP Basic Authorization\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($requestData));\n\n$response = curl_exec($ch);\ncurl_close($ch);\n\n$result = json_decode($response, true);\nprint_r($result['result']);\n?&gt;\n</code></pre>"},{"location":"api/jsonrpc/#json-rpc-20-requestresponse-format","title":"JSON-RPC 2.0 Request/Response Format","text":"<p>The OpenMage API implements the JSON-RPC 2.0 specification, which defines a stateless (aside from the session id), light-weight remote procedure call (RPC) protocol using JSON as the data format.</p>"},{"location":"api/jsonrpc/#request-format","title":"Request Format","text":"<pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"resource.method\",\n    [param1, param2, ...]\n  ],\n  \"id\": request_id\n}\n</code></pre> <ul> <li><code>jsonrpc</code>: Must be exactly \u201c2.0\u201d</li> <li><code>method</code>: For most API calls, this will be \u201ccall\u201d</li> <li><code>params</code>: An array containing:</li> <li>The session ID obtained from login or <code>null</code> for HTTP Basic Authorization</li> <li>The resource and method name in the format \u201cresource.method\u201d</li> <li>An array of parameters for the method</li> <li><code>id</code>: A unique identifier for the request (can be a string or number)</li> </ul>"},{"location":"api/jsonrpc/#response-format","title":"Response Format","text":"<pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": response_data,\n  \"id\": request_id\n}\n</code></pre> <ul> <li><code>jsonrpc</code>: Always \u201c2.0\u201d</li> <li><code>result</code>: The data returned by the method call</li> <li><code>id</code>: The same ID that was sent in the request</li> </ul>"},{"location":"api/jsonrpc/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"error\": {\n    \"code\": error_code,\n    \"message\": \"Error message\"\n  },\n  \"id\": request_id\n}\n</code></pre>"},{"location":"api/jsonrpc/#error-handling","title":"Error Handling","text":"<p>The OpenMage API uses standardized error codes and messages to communicate issues with API requests.</p>"},{"location":"api/jsonrpc/#common-error-codes","title":"Common Error Codes","text":"Code Message Description 0 Unknown Error A general error occurred 1 Internal Error An internal server error occurred 2 Access denied Authentication failed or insufficient permissions 3 Invalid API path The requested resource or method doesn\u2019t exist 4 Resource path is not callable The requested method cannot be called 5 Session expired The session has expired, need to login again 6 Invalid request parameter A required parameter is missing or invalid"},{"location":"api/jsonrpc/#http-status-codes","title":"HTTP Status Codes","text":"<p>The API also uses HTTP status codes to indicate the status of requests:</p> <ul> <li>200 OK: Request successful</li> <li>400 Bad Request: Invalid request parameters</li> <li>401 Unauthorized: Authentication required</li> <li>403 Forbidden: Access denied</li> <li>404 Not Found: Resource not found</li> <li>500 Internal Server Error: Server-side error</li> </ul>"},{"location":"api/jsonrpc/#common-usage-patterns","title":"Common Usage Patterns","text":""},{"location":"api/jsonrpc/#basic-workflow","title":"Basic Workflow","text":"<ol> <li>Authentication: Login to obtain a session ID</li> <li>API Calls: Make one or more API calls using the session ID</li> <li>End Session: Optionally end the session when finished</li> </ol>"},{"location":"api/jsonrpc/#batch-operations-with-multicall","title":"Batch Operations with <code>multiCall</code>","text":"<p>For improved performance when making multiple API calls, use the <code>multiCall</code> method to batch requests:</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"multiCall\",\n  \"params\": [\n    \"session_id\",\n    [\n      [\"catalog_product.list\", [filter_parameters]],\n      [\"catalog_product.info\", [product_id]]\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre>"},{"location":"api/jsonrpc/#error-handling-best-practices","title":"Error Handling Best Practices","text":"<ol> <li>Always check for errors in API responses</li> <li>Implement retry logic for transient errors</li> <li>Handle session expiration by re-authenticating</li> <li>Log detailed error information for troubleshooting</li> </ol>"},{"location":"api/jsonrpc/#code-examples","title":"Code Examples","text":""},{"location":"api/jsonrpc/#authentication_1","title":"Authentication","text":"<pre><code>&lt;?php\n// PHP example of authentication\n$jsonRpcUrl = 'https://your-magento-store.com/api/jsonrpc';\n$userData = array(\n    'jsonrpc' =&gt; '2.0',\n    'method' =&gt; 'login',\n    'params' =&gt; ['apiuser', 'apikey123'],\n    'id' =&gt; 1\n);\n\n$ch = curl_init($jsonRpcUrl);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($userData));\n\n$response = curl_exec($ch);\ncurl_close($ch);\n\n$result = json_decode($response, true);\n$sessionId = $result['result'];\necho \"Session ID: \" . $sessionId;\n?&gt;\n</code></pre>"},{"location":"api/jsonrpc/#retrieving-product-information","title":"Retrieving Product Information","text":"<pre><code>&lt;?php\n// PHP example of retrieving product information\n$sessionId = '8b98a77a37f50d3d472302981e86aab2'; // From login response\n$jsonRpcUrl = 'https://your-magento-store.com/api/jsonrpc';\n\n$requestData = array(\n    'jsonrpc' =&gt; '2.0',\n    'method' =&gt; 'call',\n    'params' =&gt; [\n        $sessionId,\n        'catalog_product.info',\n        'product_sku_123'\n    ],\n    'id' =&gt; 2\n);\n\n$ch = curl_init($jsonRpcUrl);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($requestData));\n\n$response = curl_exec($ch);\ncurl_close($ch);\n\n$result = json_decode($response, true);\nprint_r($result['result']);\n?&gt;\n</code></pre>"},{"location":"api/jsonrpc/#creating-a-new-product","title":"Creating a New Product","text":"<pre><code>&lt;?php\n// PHP example of creating a new product\n$sessionId = '8b98a77a37f50d3d472302981e86aab2'; // From login response\n$jsonRpcUrl = 'https://your-magento-store.com/api/jsonrpc';\n\n$productData = array(\n    'type_id' =&gt; 'simple',\n    'attribute_set_id' =&gt; 4,\n    'sku' =&gt; 'new_product_123',\n    'name' =&gt; 'New Test Product',\n    'price' =&gt; 99.99,\n    'status' =&gt; 1,\n    'weight' =&gt; 1.0,\n    'visibility' =&gt; 4,\n    'description' =&gt; 'Product description here',\n    'short_description' =&gt; 'Short description',\n    'stock_data' =&gt; array(\n        'qty' =&gt; 100,\n        'is_in_stock' =&gt; 1\n    )\n);\n\n$requestData = array(\n    'jsonrpc' =&gt; '2.0',\n    'method' =&gt; 'call',\n    'params' =&gt; [\n        $sessionId,\n        'catalog_product.create',\n        ['simple', 4, 'new_product_123', $productData]\n    ],\n    'id' =&gt; 3\n);\n\n$ch = curl_init($jsonRpcUrl);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($requestData));\n\n$response = curl_exec($ch);\ncurl_close($ch);\n\n$result = json_decode($response, true);\necho \"Product ID: \" . $result['result'];\n?&gt;\n</code></pre>"},{"location":"api/jsonrpc/#available-resources","title":"Available Resources","text":"<p>The OpenMage API provides access to numerous resources and third-party extensions may also provide additional resources. Please refer to the individual resource documentation pages in the left sidebar for more information on available methods and parameters.</p>"},{"location":"api/jsonrpc/#best-practices","title":"Best Practices","text":"<ol> <li>Use HTTPS: Always use HTTPS for API calls to ensure secure communication</li> <li>Implement Rate Limiting: Avoid overwhelming the server with too many requests</li> <li>Cache Responses: Cache responses when appropriate to reduce API calls</li> <li>Handle Errors Gracefully: Implement proper error handling in your applications</li> <li>Use Batch Operations: Use <code>multiCall</code> for better performance when making multiple requests</li> <li>Validate Input: Always validate input data before sending it to the API</li> <li>Monitor API Usage: Keep track of API usage to identify potential issues</li> <li>Keep API Keys Secure: Never expose API keys in client-side code</li> </ol>"},{"location":"api/jsonrpc/resources/catalog_category/","title":"Catalog Category API","text":""},{"location":"api/jsonrpc/resources/catalog_category/#introduction","title":"Introduction","text":"<p>The Catalog Category API allows you to manage product categories in your OpenMage store. You can retrieve category information, create new categories, update existing ones, move categories within the category tree, and manage product assignments to categories.</p>"},{"location":"api/jsonrpc/resources/catalog_category/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/catalog_category/#currentstore","title":"<code>currentStore</code>","text":"<p>Sets the current store for category operations.</p> <p>Method Name: <code>catalog_category.currentStore</code></p> <p>Parameters:</p> <ul> <li><code>store</code> (string|int, required) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(int) - Current store ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.currentStore\",\n    \"default\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 1,\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_category/#tree","title":"tree","text":"<p>Retrieve category tree.</p> <p>Method Name: <code>catalog_category.tree</code></p> <p>Parameters:</p> <ul> <li><code>parentId</code> (int, optional) - Parent category ID (default: 1 - root category)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Category tree with the following structure:</li> <li><code>category_id</code> (int) - Category ID</li> <li><code>parent_id</code> (int) - Parent category ID</li> <li><code>name</code> (string) - Category name</li> <li><code>is_active</code> (boolean) - Whether the category is active</li> <li><code>position</code> (int) - Position</li> <li><code>level</code> (int) - Level in the category tree</li> <li><code>children</code> (array) - Array of child categories with the same structure</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.tree\",\n    [1, \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"category_id\": 1,\n    \"parent_id\": 0,\n    \"name\": \"Root\",\n    \"is_active\": true,\n    \"position\": 0,\n    \"level\": 0,\n    \"children\": [\n      {\n        \"category_id\": 2,\n        \"parent_id\": 1,\n        \"name\": \"Default Category\",\n        \"is_active\": true,\n        \"position\": 1,\n        \"level\": 1,\n        \"children\": []\n      }\n    ]\n  },\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_category/#level","title":"level","text":"<p>Retrieve level of categories for category/store view/website.</p> <p>Method Name: <code>catalog_category.level</code></p> <p>Parameters:</p> <ul> <li><code>website</code> (string|int, optional) - Website ID or code</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>categoryId</code> (int, optional) - Category ID</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of categories with the following structure:</li> <li><code>category_id</code> (int) - Category ID</li> <li><code>parent_id</code> (int) - Parent category ID</li> <li><code>name</code> (string) - Category name</li> <li><code>is_active</code> (boolean) - Whether the category is active</li> <li><code>position</code> (int) - Position</li> <li><code>level</code> (int) - Level in the category tree</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.level\",\n    [null, \"default\", 2]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"category_id\": 3,\n      \"parent_id\": 2,\n      \"name\": \"Furniture\",\n      \"is_active\": true,\n      \"position\": 1,\n      \"level\": 2\n    },\n    {\n      \"category_id\": 4,\n      \"parent_id\": 2,\n      \"name\": \"Electronics\",\n      \"is_active\": true,\n      \"position\": 2,\n      \"level\": 2\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_category/#info","title":"info","text":"<p>Retrieve category data.</p> <p>Method Name: <code>catalog_category.info</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>attributes</code> (array, optional) - Array of attributes to return</li> </ul> <p>Return:</p> <ul> <li>(array) - Category data with the following structure:</li> <li><code>category_id</code> (int) - Category ID</li> <li><code>is_active</code> (boolean) - Whether the category is active</li> <li><code>position</code> (int) - Position</li> <li><code>level</code> (int) - Level in the category tree</li> <li>Additional attributes as requested</li> <li><code>parent_id</code> (int) - Parent category ID</li> <li><code>children</code> (string) - Comma-separated list of child category IDs</li> <li><code>all_children</code> (string) - Comma-separated list of all child category IDs</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.info\",\n    [3, \"default\", [\"name\", \"description\", \"url_key\"]]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"category_id\": 3,\n    \"is_active\": true,\n    \"position\": 1,\n    \"level\": 2,\n    \"name\": \"Furniture\",\n    \"description\": \"Furniture category description\",\n    \"url_key\": \"furniture\",\n    \"parent_id\": 2,\n    \"children\": \"5,6,7\",\n    \"all_children\": \"5,6,7,8,9\"\n  },\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_category/#create","title":"create","text":"<p>Create new category.</p> <p>Method Name: <code>catalog_category.create</code></p> <p>Parameters:</p> <ul> <li><code>parentId</code> (int, required) - Parent category ID</li> <li><code>categoryData</code> (array, required) - Category data:</li> <li><code>name</code> (string, required) - Category name</li> <li><code>is_active</code> (boolean, optional) - Whether the category is active</li> <li><code>position</code> (int, optional) - Position</li> <li><code>available_sort_by</code> (array, optional) - Available sort by options</li> <li><code>default_sort_by</code> (string, optional) - Default sort by option</li> <li><code>include_in_menu</code> (boolean, optional) - Include in navigation menu</li> <li><code>url_key</code> (string, optional) - URL key</li> <li><code>description</code> (string, optional) - Description</li> <li><code>meta_title</code> (string, optional) - Meta title</li> <li><code>meta_keywords</code> (string, optional) - Meta keywords</li> <li><code>meta_description</code> (string, optional) - Meta description</li> <li><code>display_mode</code> (string, optional) - Display mode</li> <li>Other custom attributes</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created category</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.create\",\n    [\n      2,\n      {\n        \"name\": \"New Category\",\n        \"is_active\": true,\n        \"position\": 3,\n        \"description\": \"New category description\",\n        \"url_key\": \"new-category\"\n      },\n      \"default\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 10,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_exists</code> - Parent category does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_category/#update","title":"update","text":"<p>Update category data.</p> <p>Method Name: <code>catalog_category.update</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID</li> <li><code>categoryData</code> (array, required) - Category data to update (same structure as in create method)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.update\",\n    [\n      3,\n      {\n        \"name\": \"Updated Category Name\",\n        \"description\": \"Updated description\"\n      },\n      \"default\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_exists</code> - Category does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_category/#move","title":"move","text":"<p>Move category in tree.</p> <p>Method Name: <code>catalog_category.move</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID to move</li> <li><code>parentId</code> (int, required) - New parent category ID</li> <li><code>afterId</code> (int, optional) - Category ID to place the moved category after (if null, the category will be placed at the end)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.move\",\n    [3, 4, null]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>not_moved</code> - Category could not be moved</li> <li><code>not_exists</code> - Category does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_category/#delete","title":"delete","text":"<p>Delete category.</p> <p>Method Name: <code>catalog_category.delete</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID to delete</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.delete\",\n    3\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>not_deleted</code> - Category could not be deleted</li> <li><code>not_exists</code> - Category does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_category/#assignedproducts","title":"<code>assignedProducts</code>","text":"<p>Retrieve list of assigned products to category.</p> <p>Method Name: <code>catalog_category.assignedProducts</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of products with the following structure:</li> <li><code>product_id</code> (int) - Product ID</li> <li><code>type</code> (string) - Product type</li> <li><code>set</code> (int) - Attribute set ID</li> <li><code>sku</code> (string) - Product SKU</li> <li><code>position</code> (int) - Position in category</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.assignedProducts\",\n    [3, \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"product_id\": 14,\n      \"type\": \"simple\",\n      \"set\": 4,\n      \"sku\": \"product1\",\n      \"position\": 1\n    },\n    {\n      \"product_id\": 15,\n      \"type\": \"simple\",\n      \"set\": 4,\n      \"sku\": \"product2\",\n      \"position\": 2\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_category/#assignproduct","title":"<code>assignProduct</code>","text":"<p>Assign product to category.</p> <p>Method Name: <code>catalog_category.assignProduct</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID</li> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>position</code> (int, optional) - Position in category</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.assignProduct\",\n    [3, \"product3\", 3, \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_exists</code> - Category does not exist</li> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_category/#updateproduct","title":"<code>updateProduct</code>","text":"<p>Update product assignment.</p> <p>Method Name: <code>catalog_category.updateProduct</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID</li> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>position</code> (int, optional) - New position in category</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.updateProduct\",\n    [3, \"product1\", 5, \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_exists</code> - Category does not exist</li> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>product_not_assigned</code> - Product is not assigned to the category</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_category/#removeproduct","title":"<code>removeProduct</code>","text":"<p>Remove product assignment from category.</p> <p>Method Name: <code>catalog_category.removeProduct</code></p> <p>Parameters:</p> <ul> <li><code>categoryId</code> (int, required) - Category ID</li> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_category.removeProduct\",\n    [3, \"product1\", \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>not_exists</code> - Category does not exist</li> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/","title":"Catalog Product API","text":""},{"location":"api/jsonrpc/resources/catalog_product/#introduction","title":"Introduction","text":"<p>The Catalog Product API allows you to manage products in your OpenMage store. You can retrieve product information, create new products, update existing ones, delete products, and manage product special prices.</p>"},{"location":"api/jsonrpc/resources/catalog_product/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/catalog_product/#currentstore","title":"<code>currentStore</code>","text":"<p>Sets the current store for product operations.</p> <p>Method Name: <code>catalog_product.currentStore</code></p> <p>Parameters:</p> <ul> <li><code>store</code> (string|int, required) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(int) - Current store ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.currentStore\",\n    \"default\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 1,\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product/#list","title":"<code>list</code>","text":"<p>Retrieve list of products with basic info.</p> <p>Method Name: <code>catalog_product.list</code></p> <p>Parameters:</p> <ul> <li><code>filters</code> (object|array, optional) - Filters to apply to the list:</li> <li><code>product_id</code> (int|array) - Filter by product ID(s)</li> <li><code>set</code> (int|array) - Filter by attribute set ID(s)</li> <li><code>type</code> (string|array) - Filter by product type(s)</li> <li><code>sku</code> (string|array) - Filter by SKU(s)</li> <li><code>name</code> (string|array) - Filter by name(s)</li> <li><code>status</code> (int|array) - Filter by status(es)</li> <li>Other attributes can also be used as filters</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of products with the following structure:</li> <li><code>product_id</code> (int) - Product ID</li> <li><code>sku</code> (string) - Product SKU</li> <li><code>name</code> (string) - Product name</li> <li><code>set</code> (int) - Attribute set ID</li> <li><code>type</code> (string) - Product type</li> <li><code>category_ids</code> (array) - Array of category IDs</li> <li><code>website_ids</code> (array) - Array of website IDs</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.list\",\n    [{\"type\": \"simple\"}, \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"product_id\": 1,\n      \"sku\": \"product1\",\n      \"name\": \"Product 1\",\n      \"set\": 4,\n      \"type\": \"simple\",\n      \"category_ids\": [2, 3, 4],\n      \"website_ids\": [1]\n    },\n    {\n      \"product_id\": 2,\n      \"sku\": \"product2\",\n      \"name\": \"Product 2\",\n      \"set\": 4,\n      \"type\": \"simple\",\n      \"category_ids\": [2, 3],\n      \"website_ids\": [1]\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>filters_invalid</code> - Invalid filters provided</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#info","title":"<code>info</code>","text":"<p>Retrieve product info.</p> <p>Method Name: <code>catalog_product.info</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>attributes</code> (array, optional) - Array of attributes to return</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(array) - Product data with the following structure:</li> <li><code>product_id</code> (int) - Product ID</li> <li><code>sku</code> (string) - Product SKU</li> <li><code>set</code> (int) - Attribute set ID</li> <li><code>type</code> (string) - Product type</li> <li><code>categories</code> (array) - Array of category IDs</li> <li><code>websites</code> (array) - Array of website IDs</li> <li>Additional attributes as requested</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.info\",\n    [\"product1\", \"default\", [\"name\", \"description\", \"price\"], \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"product_id\": 1,\n    \"sku\": \"product1\",\n    \"set\": 4,\n    \"type\": \"simple\",\n    \"categories\": [2, 3, 4],\n    \"websites\": [1],\n    \"name\": \"Product 1\",\n    \"description\": \"Product 1 description\",\n    \"price\": 19.99\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#create","title":"<code>create</code>","text":"<p>Create new product.</p> <p>Method Name: <code>catalog_product.create</code></p> <p>Parameters:</p> <ul> <li><code>type</code> (string, required) - Product type (simple, configurable, grouped, virtual, bundle, downloadable)</li> <li><code>set</code> (int, required) - Attribute set ID</li> <li><code>sku</code> (string, required) - Product SKU</li> <li><code>productData</code> (array, required) - Product data:</li> <li><code>name</code> (string, required) - Product name</li> <li><code>description</code> (string, optional) - Product description</li> <li><code>short_description</code> (string, optional) - Product short description</li> <li><code>weight</code> (float, optional) - Product weight</li> <li><code>status</code> (int, optional) - Product status (1 - enabled, 2 - disabled)</li> <li><code>url_key</code> (string, optional) - URL key</li> <li><code>visibility</code> (int, optional) - Visibility (1 - Not Visible, 2 - Catalog, 3 - Search, 4 - Catalog, Search)</li> <li><code>price</code> (float, optional) - Product price</li> <li><code>tax_class_id</code> (int, optional) - Tax class ID</li> <li><code>meta_title</code> (string, optional) - Meta title</li> <li><code>meta_keyword</code> (string, optional) - Meta keywords</li> <li><code>meta_description</code> (string, optional) - Meta description</li> <li><code>stock_data</code> (array, optional) - Stock data:<ul> <li><code>qty</code> (float) - Quantity</li> <li><code>is_in_stock</code> (int) - Is in stock (1 - yes, 0 - no)</li> <li><code>manage_stock</code> (int) - Manage stock (1 - yes, 0 - no)</li> <li><code>use_config_manage_stock</code> (int) - Use config settings for managing stock (1 - yes, 0 - no)</li> </ul> </li> <li><code>website_ids</code> (array, optional) - Array of website IDs</li> <li><code>category_ids</code> (array, optional) - Array of category IDs</li> <li>Other custom attributes</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created product</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.create\",\n    [\n      \"simple\",\n      4,\n      \"new-product\",\n      {\n        \"name\": \"New Product\",\n        \"description\": \"New product description\",\n        \"short_description\": \"Short description\",\n        \"weight\": 1.0,\n        \"status\": 1,\n        \"visibility\": 4,\n        \"price\": 29.99,\n        \"tax_class_id\": 2,\n        \"stock_data\": {\n          \"qty\": 100,\n          \"is_in_stock\": 1\n        },\n        \"website_ids\": [1],\n        \"category_ids\": [2, 3]\n      },\n      \"default\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 10,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>product_type_not_exists</code> - Product type does not exist</li> <li><code>product_attribute_set_not_exists</code> - Attribute set does not exist</li> <li><code>product_attribute_set_not_valid</code> - Attribute set is not valid for the product</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#update","title":"<code>update</code>","text":"<p>Update product data.</p> <p>Method Name: <code>catalog_product.update</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>productData</code> (array, required) - Product data to update (same structure as in create method)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.update\",\n    [\n      \"product1\",\n      {\n        \"name\": \"Updated Product Name\",\n        \"description\": \"Updated description\",\n        \"price\": 24.99\n      },\n      \"default\",\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#multiupdate","title":"<code>multiUpdate</code>","text":"<p>Update multiple products in a single call.</p> <p>Method Name: <code>catalog_product.multiUpdate</code></p> <p>Parameters:</p> <ul> <li><code>productIds</code> (array, required) - Array of product IDs or SKUs</li> <li><code>productData</code> (array, required) - Product data to update (same structure as in update method)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.multiUpdate\",\n    [\n      [\"product1\", \"product2\"],\n      {\n        \"status\": 1,\n        \"price\": 24.99\n      },\n      \"default\",\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>product_not_exists</code> - One or more products do not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#delete","title":"<code>delete</code>","text":"<p>Delete product.</p> <p>Method Name: <code>catalog_product.delete</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.delete\",\n    [\"product1\", \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>not_deleted</code> - Product could not be deleted</li> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#getspecialprice","title":"<code>getSpecialPrice</code>","text":"<p>Retrieve product special price.</p> <p>Method Name: <code>catalog_product.getSpecialPrice</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Special price data with the following structure:</li> <li><code>special_price</code> (float) - Special price</li> <li><code>special_from_date</code> (string) - Special price from date</li> <li><code>special_to_date</code> (string) - Special price to date</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.getSpecialPrice\",\n    [\"product1\", \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"special_price\": 19.99,\n    \"special_from_date\": \"2023-01-01 00:00:00\",\n    \"special_to_date\": \"2023-12-31 23:59:59\"\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#setspecialprice","title":"<code>setSpecialPrice</code>","text":"<p>Update product special price.</p> <p>Method Name: <code>catalog_product.setSpecialPrice</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>specialPrice</code> (float, optional) - Special price</li> <li><code>fromDate</code> (string, optional) - Special price from date (format: <code>YYYY-MM-DD</code>)</li> <li><code>toDate</code> (string, optional) - Special price to date (format: <code>YYYY-MM-DD</code>)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.setSpecialPrice\",\n    [\"product1\", 19.99, \"2023-01-01\", \"2023-12-31\", \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product/#listofadditionalattributes","title":"<code>listOfAdditionalAttributes</code>","text":"<p>Get list of additional attributes which are not in default create/update list.</p> <p>Method Name: <code>catalog_product.listOfAdditionalAttributes</code></p> <p>Parameters:</p> <ul> <li><code>productType</code> (string, required) - Product type</li> <li><code>attributeSetId</code> (int, required) - Attribute set ID</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of attributes with the following structure:</li> <li><code>attribute_id</code> (int) - Attribute ID</li> <li><code>code</code> (string) - Attribute code</li> <li><code>type</code> (string) - Attribute type</li> <li><code>required</code> (boolean) - Whether the attribute is required</li> <li><code>scope</code> (string) - Attribute scope (global, website, store)</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product.listOfAdditionalAttributes\",\n    [\"simple\", 4]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"attribute_id\": 142,\n      \"code\": \"manufacturer\",\n      \"type\": \"select\",\n      \"required\": false,\n      \"scope\": \"global\"\n    },\n    {\n      \"attribute_id\": 143,\n      \"code\": \"color\",\n      \"type\": \"select\",\n      \"required\": false,\n      \"scope\": \"global\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_type_not_exists</code> - Product type does not exist</li> <li><code>product_attribute_set_not_exists</code> - Attribute set does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/","title":"Catalog Product Attribute API","text":""},{"location":"api/jsonrpc/resources/catalog_product_attribute/#introduction","title":"Introduction","text":"<p>The Catalog Product Attribute API allows you to manage product attributes, attribute sets, attribute options, product types, media, and tier prices in your OpenMage store.</p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#catalog-product-attribute","title":"Catalog Product Attribute","text":""},{"location":"api/jsonrpc/resources/catalog_product_attribute/#items","title":"items","text":"<p>Retrieve attributes from specified attribute set.</p> <p>Method Name: <code>catalog_product_attribute.items</code></p> <p>Parameters:</p> <ul> <li><code>setId</code> (int, required) - Attribute set ID</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of attributes with the following structure:</li> <li><code>attribute_id</code> (int) - Attribute ID</li> <li><code>code</code> (string) - Attribute code</li> <li><code>type</code> (string) - Attribute type</li> <li><code>required</code> (boolean) - Whether the attribute is required</li> <li><code>scope</code> (string) - Attribute scope (global, website, store)</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.items\",\n    4\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"attribute_id\": 73,\n      \"code\": \"name\",\n      \"type\": \"text\",\n      \"required\": true,\n      \"scope\": \"store\"\n    },\n    {\n      \"attribute_id\": 74,\n      \"code\": \"description\",\n      \"type\": \"textarea\",\n      \"required\": false,\n      \"scope\": \"store\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#options","title":"options","text":"<p>Retrieve attribute options.</p> <p>Method Name: <code>catalog_product_attribute.options</code></p> <p>Parameters:</p> <ul> <li><code>attributeId</code> (int, required) - Attribute ID</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of attribute options with the following structure:</li> <li><code>value</code> (string) - Option value</li> <li><code>label</code> (string) - Option label</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.options\",\n    [142, \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"value\": \"\",\n      \"label\": \"\"\n    },\n    {\n      \"value\": \"1\",\n      \"label\": \"Option 1\"\n    },\n    {\n      \"value\": \"2\",\n      \"label\": \"Option 2\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>not_exists</code> - Attribute does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#types","title":"types","text":"<p>Retrieve list of possible attribute types.</p> <p>Method Name: <code>catalog_product_attribute.types</code></p> <p>Parameters: None</p> <p>Return:</p> <ul> <li>(array) - Array of attribute types with the following structure:</li> <li><code>value</code> (string) - Type value</li> <li><code>label</code> (string) - Type label</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.types\",\n    []\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"value\": \"text\",\n      \"label\": \"Text Field\"\n    },\n    {\n      \"value\": \"textarea\",\n      \"label\": \"Text Area\"\n    },\n    {\n      \"value\": \"select\",\n      \"label\": \"Dropdown\"\n    },\n    {\n      \"value\": \"multiselect\",\n      \"label\": \"Multiple Select\"\n    },\n    {\n      \"value\": \"boolean\",\n      \"label\": \"Yes/No\"\n    },\n    {\n      \"value\": \"date\",\n      \"label\": \"Date\"\n    },\n    {\n      \"value\": \"price\",\n      \"label\": \"Price\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#create","title":"create","text":"<p>Create new product attribute.</p> <p>Method Name: <code>catalog_product_attribute.create</code></p> <p>Parameters:</p> <ul> <li><code>data</code> (array, required) - Attribute data:</li> <li><code>attribute_code</code> (string, required) - Attribute code</li> <li><code>frontend_input</code> (string, required) - Frontend input type</li> <li><code>scope</code> (string, required) - Attribute scope (global, website, store)</li> <li><code>default_value</code> (string, optional) - Default value</li> <li><code>is_unique</code> (boolean, optional) - Whether the attribute is unique</li> <li><code>is_required</code> (boolean, optional) - Whether the attribute is required</li> <li><code>apply_to</code> (array, optional) - Product types to apply to</li> <li><code>is_configurable</code> (boolean, optional) - Whether the attribute is configurable</li> <li><code>is_searchable</code> (boolean, optional) - Whether the attribute is searchable</li> <li><code>is_visible_in_advanced_search</code> (boolean, optional) - Whether the attribute is visible in advanced search</li> <li><code>is_comparable</code> (boolean, optional) - Whether the attribute is comparable</li> <li><code>is_used_for_promo_rules</code> (boolean, optional) - Whether the attribute is used for promo rules</li> <li><code>is_visible_on_front</code> (boolean, optional) - Whether the attribute is visible on front</li> <li><code>used_in_product_listing</code> (boolean, optional) - Whether the attribute is used in product listing</li> <li><code>frontend_label</code> (array, required) - Array of frontend labels with the following structure:<ul> <li><code>store_id</code> (int) - Store ID</li> <li><code>label</code> (string) - Label</li> </ul> </li> <li><code>additional_fields</code> (array, optional) - Additional fields based on frontend input type</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created attribute</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.create\",\n    {\n      \"attribute_code\": \"custom_attribute\",\n      \"frontend_input\": \"select\",\n      \"scope\": \"global\",\n      \"is_required\": false,\n      \"frontend_label\": [\n        {\n          \"store_id\": 0,\n          \"label\": \"Custom Attribute\"\n        }\n      ],\n      \"is_searchable\": true,\n      \"is_visible_in_advanced_search\": true,\n      \"is_comparable\": true,\n      \"is_visible_on_front\": true\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 145,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_parameters</code> - Invalid parameters provided</li> <li><code>invalid_code</code> - Invalid attribute code</li> <li><code>invalid_frontend_input</code> - Invalid frontend input type</li> <li><code>unable_to_save</code> - Unable to save attribute</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#update","title":"update","text":"<p>Update product attribute.</p> <p>Method Name: <code>catalog_product_attribute.update</code></p> <p>Parameters:</p> <ul> <li><code>attribute</code> (int|string, required) - Attribute ID or code</li> <li><code>data</code> (array, required) - Attribute data to update (same structure as in create method)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.update\",\n    [\n      \"custom_attribute\",\n      {\n        \"frontend_label\": [\n          {\n            \"store_id\": 0,\n            \"label\": \"Updated Custom Attribute\"\n          }\n        ],\n        \"is_searchable\": false\n      }\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>can_not_edit</code> - Attribute cannot be edited</li> <li><code>unable_to_save</code> - Unable to save attribute</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#remove","title":"remove","text":"<p>Remove attribute.</p> <p>Method Name: <code>catalog_product_attribute.remove</code></p> <p>Parameters:</p> <ul> <li><code>attribute</code> (int|string, required) - Attribute ID or code</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.remove\",\n    \"custom_attribute\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>can_not_delete</code> - Attribute cannot be deleted</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#info","title":"info","text":"<p>Get full information about attribute with list of options.</p> <p>Method Name: <code>catalog_product_attribute.info</code></p> <p>Parameters:</p> <ul> <li><code>attribute</code> (int|string, required) - Attribute ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Attribute data with the following structure:</li> <li><code>attribute_id</code> (int) - Attribute ID</li> <li><code>attribute_code</code> (string) - Attribute code</li> <li><code>frontend_input</code> (string) - Frontend input type</li> <li><code>default_value</code> (string) - Default value</li> <li><code>is_unique</code> (boolean) - Whether the attribute is unique</li> <li><code>is_required</code> (boolean) - Whether the attribute is required</li> <li><code>apply_to</code> (array) - Product types to apply to</li> <li><code>is_configurable</code> (boolean) - Whether the attribute is configurable</li> <li><code>is_searchable</code> (boolean) - Whether the attribute is searchable</li> <li><code>is_visible_in_advanced_search</code> (boolean) - Whether the attribute is visible in advanced search</li> <li><code>is_comparable</code> (boolean) - Whether the attribute is comparable</li> <li><code>is_used_for_promo_rules</code> (boolean) - Whether the attribute is used for promo rules</li> <li><code>is_visible_on_front</code> (boolean) - Whether the attribute is visible on front</li> <li><code>used_in_product_listing</code> (boolean) - Whether the attribute is used in product listing</li> <li><code>frontend_label</code> (array) - Array of frontend labels</li> <li><code>scope</code> (string) - Attribute scope (global, website, store)</li> <li><code>additional_fields</code> (array) - Additional fields based on frontend input type</li> <li><code>options</code> (array) - Array of attribute options</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.info\",\n    \"color\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"attribute_id\": 143,\n    \"attribute_code\": \"color\",\n    \"frontend_input\": \"select\",\n    \"default_value\": \"\",\n    \"is_unique\": false,\n    \"is_required\": false,\n    \"apply_to\": [],\n    \"is_configurable\": true,\n    \"is_searchable\": true,\n    \"is_visible_in_advanced_search\": true,\n    \"is_comparable\": true,\n    \"is_used_for_promo_rules\": false,\n    \"is_visible_on_front\": true,\n    \"used_in_product_listing\": false,\n    \"frontend_label\": [\n      {\n        \"store_id\": 0,\n        \"label\": \"Color\"\n      }\n    ],\n    \"scope\": \"global\",\n    \"additional_fields\": {\n      \"is_filterable\": 1,\n      \"is_filterable_in_search\": 1,\n      \"position\": 0,\n      \"used_for_sort_by\": 0\n    },\n    \"options\": [\n      {\n        \"value\": \"1\",\n        \"label\": \"Red\"\n      },\n      {\n        \"value\": \"2\",\n        \"label\": \"Blue\"\n      },\n      {\n        \"value\": \"3\",\n        \"label\": \"Green\"\n      }\n    ]\n  },\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#addoption","title":"<code>addOption</code>","text":"<p>Add option to select or multi-select attribute.</p> <p>Method Name: <code>catalog_product_attribute.addOption</code></p> <p>Parameters:</p> <ul> <li><code>attribute</code> (int|string, required) - Attribute ID or code</li> <li><code>data</code> (array, required) - Option data:</li> <li><code>label</code> (array, required) - Array of option labels with the following structure:<ul> <li><code>store_id</code> (int|array) - Store ID or array of store IDs</li> <li><code>value</code> (string) - Option label</li> </ul> </li> <li><code>order</code> (int, optional) - Option order</li> <li><code>is_default</code> (boolean, optional) - Whether the option is default</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.addOption\",\n    [\n      \"color\",\n      {\n        \"label\": [\n          {\n            \"store_id\": 0,\n            \"value\": \"Yellow\"\n          }\n        ],\n        \"order\": 4,\n        \"is_default\": false\n      }\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_frontend_input</code> - Invalid frontend input type</li> <li><code>unable_to_add_option</code> - Unable to add option</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#removeoption","title":"<code>removeOption</code>","text":"<p>Remove option from select or multi-select attribute.</p> <p>Method Name: <code>catalog_product_attribute.removeOption</code></p> <p>Parameters:</p> <ul> <li><code>attribute</code> (int|string, required) - Attribute ID or code</li> <li><code>optionId</code> (int, required) - Option ID to remove</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute.removeOption\",\n    [\"color\", 4]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_frontend_input</code> - Invalid frontend input type</li> <li><code>unable_to_remove_option</code> - Unable to remove option</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#catalog-product-attribute-set","title":"Catalog Product Attribute Set","text":""},{"location":"api/jsonrpc/resources/catalog_product_attribute/#items_1","title":"items","text":"<p>Retrieve attribute set list.</p> <p>Method Name: <code>catalog_product_attribute_set.items</code></p> <p>Parameters: None</p> <p>Return:</p> <ul> <li>(array) - Array of attribute sets with the following structure:</li> <li><code>set_id</code> (int) - Attribute set ID</li> <li><code>name</code> (string) - Attribute set name</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.items\",\n    []\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"set_id\": 4,\n      \"name\": \"Default\"\n    },\n    {\n      \"set_id\": 5,\n      \"name\": \"Custom\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#create_1","title":"create","text":"<p>Create new attribute set based on another set.</p> <p>Method Name: <code>catalog_product_attribute_set.create</code></p> <p>Parameters:</p> <ul> <li><code>attributeSetName</code> (string, required) - Attribute set name</li> <li><code>skeletonSetId</code> (int, required) - Skeleton attribute set ID</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created attribute set</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.create\",\n    [\"New Attribute Set\", 4]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 6,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_skeleton_set_id</code> - Invalid skeleton attribute set ID</li> <li><code>invalid_data</code> - Invalid data provided</li> <li><code>create_attribute_set_error</code> - Error creating attribute set</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#remove_1","title":"remove","text":"<p>Remove attribute set.</p> <p>Method Name: <code>catalog_product_attribute_set.remove</code></p> <p>Parameters:</p> <ul> <li><code>attributeSetId</code> (int, required) - Attribute set ID</li> <li><code>forceProductsRemove</code> (boolean, optional) - Force removal of products with this attribute set</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.remove\",\n    [6, false]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_attribute_set_id</code> - Invalid attribute set ID</li> <li><code>attribute_set_has_related_products</code> - Attribute set has related products</li> <li><code>remove_attribute_set_error</code> - Error removing attribute set</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#attributeadd","title":"<code>attributeAdd</code>","text":"<p>Add attribute to attribute set.</p> <p>Method Name: <code>catalog_product_attribute_set.attributeAdd</code></p> <p>Parameters:</p> <ul> <li><code>attributeId</code> (int, required) - Attribute ID</li> <li><code>attributeSetId</code> (int, required) - Attribute set ID</li> <li><code>attributeGroupId</code> (int, optional) - Attribute group ID</li> <li><code>sortOrder</code> (int, optional) - Sort order</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.attributeAdd\",\n    [145, 5, null, 0]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_attribute_id</code> - Invalid attribute ID</li> <li><code>invalid_attribute_set_id</code> - Invalid attribute set ID</li> <li><code>invalid_attribute_group_id</code> - Invalid attribute group ID</li> <li><code>attribute_is_already_in_set</code> - Attribute is already in set</li> <li><code>add_attribute_error</code> - Error adding attribute</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#attributeremove","title":"<code>attributeRemove</code>","text":"<p>Remove attribute from attribute set.</p> <p>Method Name: <code>catalog_product_attribute_set.attributeRemove</code></p> <p>Parameters:</p> <ul> <li><code>attributeId</code> (int, required) - Attribute ID</li> <li><code>attributeSetId</code> (int, required) - Attribute set ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.attributeRemove\",\n    [145, 5]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_attribute_id</code> - Invalid attribute ID</li> <li><code>invalid_attribute_set_id</code> - Invalid attribute set ID</li> <li><code>attribute_is_not_in_set</code> - Attribute is not in set</li> <li><code>remove_attribute_error</code> - Error removing attribute</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#groupadd","title":"<code>groupAdd</code>","text":"<p>Create group within existing attribute set.</p> <p>Method Name: <code>catalog_product_attribute_set.groupAdd</code></p> <p>Parameters:</p> <ul> <li><code>attributeSetId</code> (int, required) - Attribute set ID</li> <li><code>groupName</code> (string, required) - Group name</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created group</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.groupAdd\",\n    [5, \"New Group\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 15,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>group_already_exists</code> - Group already exists</li> <li><code>group_add_error</code> - Error adding group</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#grouprename","title":"<code>groupRename</code>","text":"<p>Rename existing group.</p> <p>Method Name: <code>catalog_product_attribute_set.groupRename</code></p> <p>Parameters:</p> <ul> <li><code>groupId</code> (int, required) - Group ID</li> <li><code>groupName</code> (string, required) - New group name</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.groupRename\",\n    [15, \"Renamed Group\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_attribute_group_id</code> - Invalid attribute group ID</li> <li><code>group_rename_error</code> - Error renaming group</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#groupremove","title":"<code>groupRemove</code>","text":"<p>Remove group from existing attribute set.</p> <p>Method Name: <code>catalog_product_attribute_set.groupRemove</code></p> <p>Parameters:</p> <ul> <li><code>attributeGroupId</code> (int, required) - Attribute group ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_set.groupRemove\",\n    15\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invalid_attribute_group_id</code> - Invalid attribute group ID</li> <li><code>group_has_configurable_attributes</code> - Group has configurable attributes</li> <li><code>group_has_system_attributes</code> - Group has system attributes</li> <li><code>group_remove_error</code> - Error removing group</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#catalog-product-type","title":"Catalog Product Type","text":""},{"location":"api/jsonrpc/resources/catalog_product_attribute/#items_2","title":"items","text":"<p>Retrieve product type list.</p> <p>Method Name: <code>catalog_product_type.items</code></p> <p>Parameters: None</p> <p>Return:</p> <ul> <li>(array) - Array of product types with the following structure:</li> <li><code>type</code> (string) - Product type code</li> <li><code>label</code> (string) - Product type label</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_type.items\",\n    []\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"type\": \"simple\",\n      \"label\": \"Simple Product\"\n    },\n    {\n      \"type\": \"configurable\",\n      \"label\": \"Configurable Product\"\n    },\n    {\n      \"type\": \"grouped\",\n      \"label\": \"Grouped Product\"\n    },\n    {\n      \"type\": \"virtual\",\n      \"label\": \"Virtual Product\"\n    },\n    {\n      \"type\": \"bundle\",\n      \"label\": \"Bundle Product\"\n    },\n    {\n      \"type\": \"downloadable\",\n      \"label\": \"Downloadable Product\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#catalog-product-attribute-media","title":"Catalog Product Attribute Media","text":""},{"location":"api/jsonrpc/resources/catalog_product_attribute/#items_3","title":"items","text":"<p>Retrieve images for product.</p> <p>Method Name: <code>catalog_product_attribute_media.items</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of product images with the following structure:</li> <li><code>file</code> (string) - Image file path</li> <li><code>label</code> (string) - Image label</li> <li><code>position</code> (int) - Image position</li> <li><code>exclude</code> (boolean) - Whether the image is excluded</li> <li><code>url</code> (string) - Image URL</li> <li><code>types</code> (array) - Array of image types (image, small_image, thumbnail)</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_media.items\",\n    [\"product1\", \"default\", \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"file\": \"/p/r/product1.jpg\",\n      \"label\": \"Product 1\",\n      \"position\": 1,\n      \"exclude\": false,\n      \"url\": \"http://example.com/media/catalog/product/p/r/product1.jpg\",\n      \"types\": [\"image\", \"small_image\", \"thumbnail\"]\n    },\n    {\n      \"file\": \"/p/r/product1_2.jpg\",\n      \"label\": \"Product 1 - 2\",\n      \"position\": 2,\n      \"exclude\": false,\n      \"url\": \"http://example.com/media/catalog/product/p/r/product1_2.jpg\",\n      \"types\": []\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#info_1","title":"info","text":"<p>Retrieve image data.</p> <p>Method Name: <code>catalog_product_attribute_media.info</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>file</code> (string, required) - Image file path</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(array) - Image data with the same structure as in items method</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_media.info\",\n    [\"product1\", \"/p/r/product1.jpg\", \"default\", \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"file\": \"/p/r/product1.jpg\",\n    \"label\": \"Product 1\",\n    \"position\": 1,\n    \"exclude\": false,\n    \"url\": \"http://example.com/media/catalog/product/p/r/product1.jpg\",\n    \"types\": [\"image\", \"small_image\", \"thumbnail\"]\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>not_exists</code> - Image does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#create_2","title":"create","text":"<p>Create new image for product and return image filename.</p> <p>Method Name: <code>catalog_product_attribute_media.create</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>data</code> (array, required) - Image data:</li> <li><code>file</code> (array, required) - Image file data:<ul> <li><code>content</code> (string, required) - Base64-encoded image content</li> <li><code>mime</code> (string, required) - Image MIME type</li> <li><code>name</code> (string, optional) - Image name</li> </ul> </li> <li><code>label</code> (string, optional) - Image label</li> <li><code>position</code> (int, optional) - Image position</li> <li><code>exclude</code> (boolean, optional) - Whether the image is excluded</li> <li><code>types</code> (array, optional) - Array of image types (image, small_image, thumbnail)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(string) - Image file path</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_media.create\",\n    [\n      \"product1\",\n      {\n        \"file\": {\n          \"content\": \"base64-encoded-image-content\",\n          \"mime\": \"image/jpeg\",\n          \"name\": \"product1_3.jpg\"\n        },\n        \"label\": \"Product 1 - 3\",\n        \"position\": 3,\n        \"types\": [\"image\"]\n      },\n      \"default\",\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"/p/r/product1_3.jpg\",\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_created</code> - Image could not be created</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#update_1","title":"update","text":"<p>Update image data.</p> <p>Method Name: <code>catalog_product_attribute_media.update</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>file</code> (string, required) - Image file path</li> <li><code>data</code> (array, required) - Image data to update (same structure as in create method)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_media.update\",\n    [\n      \"product1\",\n      \"/p/r/product1_3.jpg\",\n      {\n        \"label\": \"Updated Product 1 - 3\",\n        \"position\": 4,\n        \"types\": [\"small_image\"]\n      },\n      \"default\",\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>not_exists</code> - Image does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_updated</code> - Image could not be updated</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#remove_2","title":"remove","text":"<p>Remove image from product.</p> <p>Method Name: <code>catalog_product_attribute_media.remove</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>file</code> (string, required) - Image file path</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_media.remove\",\n    [\"product1\", \"/p/r/product1_3.jpg\", \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>not_exists</code> - Image does not exist</li> <li><code>not_removed</code> - Image could not be removed</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#types_1","title":"types","text":"<p>Retrieve image types (image, small_image, thumbnail, etc\u2026).</p> <p>Method Name: <code>catalog_product_attribute_media.types</code></p> <p>Parameters:</p> <ul> <li><code>setId</code> (int, required) - Attribute set ID</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of image types with the following structure:</li> <li><code>code</code> (string) - Image type code</li> <li><code>scope</code> (string) - Image type scope (global, website, store)</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_media.types\",\n    4\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"code\": \"image\",\n      \"scope\": \"store\"\n    },\n    {\n      \"code\": \"small_image\",\n      \"scope\": \"store\"\n    },\n    {\n      \"code\": \"thumbnail\",\n      \"scope\": \"store\"\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#catalog-product-attribute-tier-price","title":"Catalog Product Attribute Tier Price","text":""},{"location":"api/jsonrpc/resources/catalog_product_attribute/#info_2","title":"info","text":"<p>Retrieve tier prices for a product.</p> <p>Method Name: <code>catalog_product_attribute_tier_price.info</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of tier prices with the following structure:</li> <li><code>customer_group_id</code> (string) - Customer group ID or \u2018all\u2019 for all groups</li> <li><code>website</code> (string) - Website code or \u2018all\u2019 for all websites</li> <li><code>qty</code> (float) - Quantity</li> <li><code>price</code> (float) - Price</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_tier_price.info\",\n    [\"product1\", \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"customer_group_id\": \"all\",\n      \"website\": \"all\",\n      \"qty\": 2,\n      \"price\": 19.99\n    },\n    {\n      \"customer_group_id\": \"1\",\n      \"website\": \"base\",\n      \"qty\": 5,\n      \"price\": 17.99\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/catalog_product_attribute/#update_2","title":"update","text":"<p>Update tier prices of product.</p> <p>Method Name: <code>catalog_product_attribute_tier_price.update</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>tierPrices</code> (array, required) - Array of tier prices with the following structure:</li> <li><code>customer_group_id</code> (string, optional) - Customer group ID or \u2018all\u2019 for all groups (default: \u2018all\u2019)</li> <li><code>website</code> (string, optional) - Website code or \u2018all\u2019 for all websites (default: \u2018all\u2019)</li> <li><code>qty</code> (float, required) - Quantity</li> <li><code>price</code> (float, required) - Price</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"catalog_product_attribute_tier_price.update\",\n    [\n      \"product1\",\n      [\n        {\n          \"customer_group_id\": \"all\",\n          \"website\": \"all\",\n          \"qty\": 2,\n          \"price\": 19.99\n        },\n        {\n          \"customer_group_id\": \"1\",\n          \"website\": \"base\",\n          \"qty\": 5,\n          \"price\": 17.99\n        }\n      ],\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>not_updated</code> - Tier prices could not be updated</li> </ul>"},{"location":"api/jsonrpc/resources/cataloginventory_stock_item/","title":"Catalog Inventory Stock Item API","text":""},{"location":"api/jsonrpc/resources/cataloginventory_stock_item/#introduction","title":"Introduction","text":"<p>The Catalog Inventory Stock Item API allows you to manage product inventory in your OpenMage store. You can retrieve stock information for products and update stock data for individual or multiple products. This API is also sometimes referred to as the product_stock API.</p>"},{"location":"api/jsonrpc/resources/cataloginventory_stock_item/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/cataloginventory_stock_item/#list","title":"list","text":"<p>Retrieve stock information for products.</p> <p>Method Name: <code>cataloginventory_stock_item.list</code></p> <p>Parameters:</p> <ul> <li><code>productIds</code> (array, required) - Array of product IDs or SKUs</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of stock items with the following structure:</li> <li><code>product_id</code> (int) - Product ID</li> <li><code>sku</code> (string) - Product SKU</li> <li><code>qty</code> (float) - Quantity</li> <li><code>is_in_stock</code> (int) - Is in stock (1 - yes, 0 - no)</li> <li><code>manage_stock</code> (int) - Manage stock (1 - yes, 0 - no)</li> <li><code>use_config_manage_stock</code> (int) - Use config settings for managing stock (1 - yes, 0 - no)</li> <li><code>min_qty</code> (float) - Minimum quantity</li> <li><code>use_config_min_qty</code> (int) - Use config settings for minimum quantity (1 - yes, 0 - no)</li> <li><code>min_sale_qty</code> (float) - Minimum sale quantity</li> <li><code>use_config_min_sale_qty</code> (int) - Use config settings for minimum sale quantity (1 - yes, 0 - no)</li> <li><code>max_sale_qty</code> (float) - Maximum sale quantity</li> <li><code>use_config_max_sale_qty</code> (int) - Use config settings for maximum sale quantity (1 - yes, 0 - no)</li> <li><code>is_qty_decimal</code> (int) - Is quantity decimal (1 - yes, 0 - no)</li> <li><code>backorders</code> (int) - Backorders status (0 - No Backorders, 1 - Allow Qty Below 0, 2 - Allow Qty Below 0 and Notify Customer)</li> <li><code>use_config_backorders</code> (int) - Use config settings for backorders (1 - yes, 0 - no)</li> <li><code>notify_stock_qty</code> (float) - Notify quantity below</li> <li><code>use_config_notify_stock_qty</code> (int) - Use config settings for notify quantity below (1 - yes, 0 - no)</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"cataloginventory_stock_item.list\",\n    [[\"product1\", \"product2\"], \"sku\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"product_id\": 1,\n      \"sku\": \"product1\",\n      \"qty\": 100.0000,\n      \"is_in_stock\": 1,\n      \"manage_stock\": 1,\n      \"use_config_manage_stock\": 0,\n      \"min_qty\": 0.0000,\n      \"use_config_min_qty\": 1,\n      \"min_sale_qty\": 1.0000,\n      \"use_config_min_sale_qty\": 1,\n      \"max_sale_qty\": 10000.0000,\n      \"use_config_max_sale_qty\": 1,\n      \"is_qty_decimal\": 0,\n      \"backorders\": 0,\n      \"use_config_backorders\": 1,\n      \"notify_stock_qty\": 1.0000,\n      \"use_config_notify_stock_qty\": 1\n    },\n    {\n      \"product_id\": 2,\n      \"sku\": \"product2\",\n      \"qty\": 50.0000,\n      \"is_in_stock\": 1,\n      \"manage_stock\": 1,\n      \"use_config_manage_stock\": 0,\n      \"min_qty\": 0.0000,\n      \"use_config_min_qty\": 1,\n      \"min_sale_qty\": 1.0000,\n      \"use_config_min_sale_qty\": 1,\n      \"max_sale_qty\": 10000.0000,\n      \"use_config_max_sale_qty\": 1,\n      \"is_qty_decimal\": 0,\n      \"backorders\": 0,\n      \"use_config_backorders\": 1,\n      \"notify_stock_qty\": 1.0000,\n      \"use_config_notify_stock_qty\": 1\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - One or more products do not exist</li> </ul>"},{"location":"api/jsonrpc/resources/cataloginventory_stock_item/#update","title":"update","text":"<p>Update stock information for a product.</p> <p>Method Name: <code>cataloginventory_stock_item.update</code></p> <p>Parameters:</p> <ul> <li><code>productId</code> (int|string, required) - Product ID or SKU</li> <li><code>stockData</code> (array, required) - Stock data:</li> <li><code>qty</code> (float, optional) - Quantity</li> <li><code>is_in_stock</code> (int, optional) - Is in stock (1 - yes, 0 - no)</li> <li><code>manage_stock</code> (int, optional) - Manage stock (1 - yes, 0 - no)</li> <li><code>use_config_manage_stock</code> (int, optional) - Use config settings for managing stock (1 - yes, 0 - no)</li> <li><code>min_qty</code> (float, optional) - Minimum quantity</li> <li><code>use_config_min_qty</code> (int, optional) - Use config settings for minimum quantity (1 - yes, 0 - no)</li> <li><code>min_sale_qty</code> (float, optional) - Minimum sale quantity</li> <li><code>use_config_min_sale_qty</code> (int, optional) - Use config settings for minimum sale quantity (1 - yes, 0 - no)</li> <li><code>max_sale_qty</code> (float, optional) - Maximum sale quantity</li> <li><code>use_config_max_sale_qty</code> (int, optional) - Use config settings for maximum sale quantity (1 - yes, 0 - no)</li> <li><code>is_qty_decimal</code> (int, optional) - Is quantity decimal (1 - yes, 0 - no)</li> <li><code>backorders</code> (int, optional) - Backorders status (0 - No Backorders, 1 - Allow Qty Below 0, 2 - Allow Qty Below 0 and Notify Customer)</li> <li><code>use_config_backorders</code> (int, optional) - Use config settings for backorders (1 - yes, 0 - no)</li> <li><code>notify_stock_qty</code> (float, optional) - Notify quantity below</li> <li><code>use_config_notify_stock_qty</code> (int, optional) - Use config settings for notify quantity below (1 - yes, 0 - no)</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"cataloginventory_stock_item.update\",\n    [\n      \"product1\",\n      {\n        \"qty\": 75.0000,\n        \"is_in_stock\": 1,\n        \"manage_stock\": 1\n      },\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - Product does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/cataloginventory_stock_item/#multiupdate","title":"<code>multiUpdate</code>","text":"<p>Update stock information for multiple products in a single call.</p> <p>Method Name: <code>cataloginventory_stock_item.multiUpdate</code></p> <p>Parameters:</p> <ul> <li><code>productIds</code> (array, required) - Array of product IDs or SKUs</li> <li><code>stockData</code> (array, required) - Stock data (same structure as in update method)</li> <li><code>identifierType</code> (string, optional) - Type of product identifier (\u2018sku\u2019 or null for ID)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"cataloginventory_stock_item.multiUpdate\",\n    [\n      [\"product1\", \"product2\"],\n      {\n        \"qty\": 100.0000,\n        \"is_in_stock\": 1\n      },\n      \"sku\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>product_not_exists</code> - One or more products do not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul> <p>Notes:</p> <ul> <li>When updating stock information, you only need to include the fields you want to change. Other fields will retain their current values.</li> <li>The <code>use_config_*</code> fields determine whether to use the system configuration value for the corresponding setting. When set to 1, the system configuration value is used regardless of the value specified for the setting.</li> <li>When managing inventory for configurable, grouped, or bundle products, you should update the stock for the associated simple products, as the parent product\u2019s stock is calculated based on its child products.</li> </ul>"},{"location":"api/jsonrpc/resources/customer/","title":"Customer API","text":""},{"location":"api/jsonrpc/resources/customer/#introduction","title":"Introduction","text":"<p>The Customer API allows you to manage customers in your OpenMage store. You can retrieve customer information, create new customers, update existing ones, and delete customers.</p>"},{"location":"api/jsonrpc/resources/customer/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/customer/#list","title":"list","text":"<p>Retrieve list of customers with basic info.</p> <p>Method Name: <code>customer.list</code></p> <p>Parameters:</p> <ul> <li><code>filters</code> (object|array, optional) - Filters to apply to the list:</li> <li><code>customer_id</code> (int|array) - Filter by customer ID(s)</li> <li><code>email</code> (string|array) - Filter by email(s)</li> <li><code>firstname</code> (string|array) - Filter by first name(s)</li> <li><code>lastname</code> (string|array) - Filter by last name(s)</li> <li><code>created_at</code> (string|array) - Filter by creation date</li> <li><code>updated_at</code> (string|array) - Filter by update date</li> <li><code>website_id</code> (int|array) - Filter by website ID(s)</li> <li><code>group_id</code> (int|array) - Filter by customer group ID(s)</li> <li>Other attributes can also be used as filters</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of customers with the following structure:</li> <li><code>customer_id</code> (int) - Customer ID</li> <li><code>email</code> (string) - Customer email</li> <li><code>firstname</code> (string) - Customer first name</li> <li><code>lastname</code> (string) - Customer last name</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>updated_at</code> (string) - Update date</li> <li><code>website_id</code> (int) - Website ID</li> <li><code>group_id</code> (int) - Customer group ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer.list\",\n    [{\"group_id\": 1}]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"customer_id\": 1,\n      \"email\": \"john.doe@example.com\",\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"created_at\": \"2023-01-15 14:30:12\",\n      \"updated_at\": \"2023-01-15 14:30:12\",\n      \"website_id\": 1,\n      \"group_id\": 1\n    },\n    {\n      \"customer_id\": 2,\n      \"email\": \"jane.smith@example.com\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Smith\",\n      \"created_at\": \"2023-01-16 09:45:23\",\n      \"updated_at\": \"2023-01-16 09:45:23\",\n      \"website_id\": 1,\n      \"group_id\": 1\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>filters_invalid</code> - Invalid filters provided</li> <li><code>store_not_exists</code> - Requested store does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/customer/#info","title":"info","text":"<p>Retrieve detailed customer information.</p> <p>Method Name: <code>customer.info</code></p> <p>Parameters:</p> <ul> <li><code>customerId</code> (int, required) - Customer ID</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(object) - Customer information with the following structure:</li> <li><code>customer_id</code> (int) - Customer ID</li> <li><code>email</code> (string) - Customer email</li> <li><code>firstname</code> (string) - Customer first name</li> <li><code>lastname</code> (string) - Customer last name</li> <li><code>middlename</code> (string) - Customer middle name</li> <li><code>prefix</code> (string) - Name prefix</li> <li><code>suffix</code> (string) - Name suffix</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>updated_at</code> (string) - Update date</li> <li><code>website_id</code> (int) - Website ID</li> <li><code>group_id</code> (int) - Customer group ID</li> <li><code>dob</code> (string) - Date of birth</li> <li><code>taxvat</code> (string) - Tax/VAT number</li> <li><code>confirmation</code> (string) - Confirmation code</li> <li><code>created_in</code> (string) - Store where customer was created</li> <li><code>default_billing</code> (string) - Default billing address ID</li> <li><code>default_shipping</code> (string) - Default shipping address ID</li> <li><code>is_active</code> (int) - Whether customer is active (1 - yes, 0 - no)</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer.info\",\n    [1, \"default\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"customer_id\": 1,\n    \"email\": \"john.doe@example.com\",\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"middlename\": \"\",\n    \"prefix\": \"Mr\",\n    \"suffix\": \"\",\n    \"created_at\": \"2023-01-15 14:30:12\",\n    \"updated_at\": \"2023-01-15 14:30:12\",\n    \"website_id\": 1,\n    \"group_id\": 1,\n    \"dob\": \"1980-01-01\",\n    \"taxvat\": \"123456789\",\n    \"confirmation\": null,\n    \"created_in\": \"Default Store View\",\n    \"default_billing\": \"1\",\n    \"default_shipping\": \"1\",\n    \"is_active\": 1\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>customer_not_exists</code> - Customer does not exist</li> <li><code>store_not_exists</code> - Requested store does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/customer/#create","title":"create","text":"<p>Create new customer.</p> <p>Method Name: <code>customer.create</code></p> <p>Parameters:</p> <ul> <li><code>customerData</code> (array, required) - Customer data:</li> <li><code>email</code> (string, required) - Customer email</li> <li><code>firstname</code> (string, required) - Customer first name</li> <li><code>lastname</code> (string, required) - Customer last name</li> <li><code>password</code> (string, required) - Customer password</li> <li><code>website_id</code> (int, required) - Website ID</li> <li><code>group_id</code> (int, optional) - Customer group ID</li> <li><code>middlename</code> (string, optional) - Customer middle name</li> <li><code>prefix</code> (string, optional) - Name prefix</li> <li><code>suffix</code> (string, optional) - Name suffix</li> <li><code>dob</code> (string, optional) - Date of birth (format: <code>YYYY-MM-DD</code>)</li> <li><code>taxvat</code> (string, optional) - Tax/VAT number</li> <li><code>is_subscribed</code> (boolean, optional) - Whether customer is subscribed to newsletter</li> <li><code>store_id</code> (int, optional) - Store ID</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created customer</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer.create\",\n    [\n      {\n        \"email\": \"new.customer@example.com\",\n        \"firstname\": \"New\",\n        \"lastname\": \"Customer\",\n        \"password\": \"password123\",\n        \"website_id\": 1,\n        \"group_id\": 1,\n        \"dob\": \"1985-05-15\",\n        \"taxvat\": \"987654321\",\n        \"is_subscribed\": true\n      },\n      \"default\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 3,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>customer_data_invalid</code> - Invalid customer data</li> <li><code>customer_exists</code> - Customer with the same email already exists</li> <li><code>website_not_exists</code> - Website does not exist</li> <li><code>group_not_exists</code> - Customer group does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/customer/#update","title":"update","text":"<p>Update customer data.</p> <p>Method Name: <code>customer.update</code></p> <p>Parameters:</p> <ul> <li><code>customerId</code> (int, required) - Customer ID</li> <li><code>customerData</code> (array, required) - Customer data to update (same structure as in create method, except password is optional)</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer.update\",\n    [\n      1,\n      {\n        \"firstname\": \"Updated\",\n        \"lastname\": \"Name\",\n        \"email\": \"updated.email@example.com\"\n      },\n      \"default\"\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>data_invalid</code> - Invalid data provided</li> <li><code>customer_not_exists</code> - Customer does not exist</li> <li><code>customer_data_invalid</code> - Invalid customer data</li> <li><code>customer_exists</code> - Another customer with the same email already exists</li> <li><code>website_not_exists</code> - Website does not exist</li> <li><code>group_not_exists</code> - Customer group does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/customer/#delete","title":"delete","text":"<p>Delete customer.</p> <p>Method Name: <code>customer.delete</code></p> <p>Parameters:</p> <ul> <li><code>customerId</code> (int, required) - Customer ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer.delete\",\n    1\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>customer_not_exists</code> - Customer does not exist</li> <li><code>not_deleted</code> - Customer could not be deleted</li> </ul>"},{"location":"api/jsonrpc/resources/customer_address/","title":"Customer Address API","text":""},{"location":"api/jsonrpc/resources/customer_address/#introduction","title":"Introduction","text":"<p>The Customer Address API allows you to manage customer addresses in your OpenMage store. You can retrieve address information, create new addresses, update existing ones, and delete addresses.</p>"},{"location":"api/jsonrpc/resources/customer_address/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/customer_address/#list","title":"list","text":"<p>Retrieve list of addresses for a customer.</p> <p>Method Name: <code>customer_address.list</code></p> <p>Parameters:</p> <ul> <li><code>customerId</code> (int, required) - Customer ID</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of addresses with the following structure:</li> <li><code>customer_address_id</code> (int) - Customer address ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>updated_at</code> (string) - Update date</li> <li><code>is_default_billing</code> (boolean) - Whether this is the default billing address</li> <li><code>is_default_shipping</code> (boolean) - Whether this is the default shipping address</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer_address.list\",\n    1\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"customer_address_id\": 1,\n      \"created_at\": \"2023-01-15 14:30:12\",\n      \"updated_at\": \"2023-01-15 14:30:12\",\n      \"is_default_billing\": true,\n      \"is_default_shipping\": true\n    },\n    {\n      \"customer_address_id\": 2,\n      \"created_at\": \"2023-01-16 09:45:23\",\n      \"updated_at\": \"2023-01-16 09:45:23\",\n      \"is_default_billing\": false,\n      \"is_default_shipping\": false\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>customer_not_exists</code> - Customer does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/customer_address/#info","title":"info","text":"<p>Retrieve detailed address information.</p> <p>Method Name: <code>customer_address.info</code></p> <p>Parameters:</p> <ul> <li><code>addressId</code> (int, required) - Customer address ID</li> </ul> <p>Return:</p> <ul> <li>(object) - Address information with the following structure:</li> <li><code>customer_address_id</code> (int) - Customer address ID</li> <li><code>customer_id</code> (int) - Customer ID</li> <li><code>firstname</code> (string) - First name</li> <li><code>lastname</code> (string) - Last name</li> <li><code>middlename</code> (string) - Middle name</li> <li><code>prefix</code> (string) - Name prefix</li> <li><code>suffix</code> (string) - Name suffix</li> <li><code>company</code> (string) - Company</li> <li><code>street</code> (string) - Street address (may contain multiple lines)</li> <li><code>city</code> (string) - City</li> <li><code>region</code> (string) - Region/state name</li> <li><code>region_id</code> (int) - Region/state ID</li> <li><code>postcode</code> (string) - Postal code</li> <li><code>country_id</code> (string) - Country ID (2-letter code)</li> <li><code>telephone</code> (string) - Telephone number</li> <li><code>fax</code> (string) - Fax number</li> <li><code>is_default_billing</code> (boolean) - Whether this is the default billing address</li> <li><code>is_default_shipping</code> (boolean) - Whether this is the default shipping address</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer_address.info\",\n    1\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"customer_address_id\": 1,\n    \"customer_id\": 1,\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"middlename\": \"\",\n    \"prefix\": \"Mr\",\n    \"suffix\": \"\",\n    \"company\": \"Example Company\",\n    \"street\": \"123 Main St\\nApt 4B\",\n    \"city\": \"Anytown\",\n    \"region\": \"California\",\n    \"region_id\": 12,\n    \"postcode\": \"12345\",\n    \"country_id\": \"US\",\n    \"telephone\": \"555-123-4567\",\n    \"fax\": \"555-123-4568\",\n    \"is_default_billing\": true,\n    \"is_default_shipping\": true\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>address_not_exists</code> - Address does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/customer_address/#create","title":"create","text":"<p>Create new address for a customer.</p> <p>Method Name: <code>customer_address.create</code></p> <p>Parameters:</p> <ul> <li><code>customerId</code> (int, required) - Customer ID</li> <li><code>addressData</code> (array, required) - Address data:</li> <li><code>firstname</code> (string, required) - First name</li> <li><code>lastname</code> (string, required) - Last name</li> <li><code>street</code> (string|array, required) - Street address (string or array of lines)</li> <li><code>city</code> (string, required) - City</li> <li><code>country_id</code> (string, required) - Country ID (2-letter code)</li> <li><code>telephone</code> (string, required) - Telephone number</li> <li><code>postcode</code> (string, required for most countries) - Postal code</li> <li><code>middlename</code> (string, optional) - Middle name</li> <li><code>prefix</code> (string, optional) - Name prefix</li> <li><code>suffix</code> (string, optional) - Name suffix</li> <li><code>company</code> (string, optional) - Company</li> <li><code>region</code> (string, optional) - Region/state name</li> <li><code>region_id</code> (int, optional) - Region/state ID</li> <li><code>fax</code> (string, optional) - Fax number</li> <li><code>is_default_billing</code> (boolean, optional) - Whether this is the default billing address</li> <li><code>is_default_shipping</code> (boolean, optional) - Whether this is the default shipping address</li> </ul> <p>Return:</p> <ul> <li>(int) - ID of the created address</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer_address.create\",\n    [\n      1,\n      {\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\",\n        \"street\": [\"123 Main St\", \"Apt 4B\"],\n        \"city\": \"Anytown\",\n        \"country_id\": \"US\",\n        \"region_id\": 12,\n        \"postcode\": \"12345\",\n        \"telephone\": \"555-123-4567\",\n        \"company\": \"Example Company\",\n        \"is_default_billing\": false,\n        \"is_default_shipping\": false\n      }\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 3,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>customer_not_exists</code> - Customer does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/customer_address/#update","title":"update","text":"<p>Update customer address data.</p> <p>Method Name: <code>customer_address.update</code></p> <p>Parameters:</p> <ul> <li><code>addressId</code> (int, required) - Customer address ID</li> <li><code>addressData</code> (array, required) - Address data to update (same structure as in create method)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer_address.update\",\n    [\n      1,\n      {\n        \"firstname\": \"Updated\",\n        \"lastname\": \"Name\",\n        \"telephone\": \"555-987-6543\"\n      }\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>address_not_exists</code> - Address does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/customer_address/#delete","title":"delete","text":"<p>Delete customer address.</p> <p>Method Name: <code>customer_address.delete</code></p> <p>Parameters:</p> <ul> <li><code>addressId</code> (int, required) - Customer address ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer_address.delete\",\n    1\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>address_not_exists</code> - Address does not exist</li> <li><code>not_deleted</code> - Address could not be deleted</li> </ul>"},{"location":"api/jsonrpc/resources/customer_group/","title":"Customer Group API","text":""},{"location":"api/jsonrpc/resources/customer_group/#introduction","title":"Introduction","text":"<p>The Customer Group API allows you to manage customer groups in your OpenMage store. Customer groups are used to categorize customers and apply specific pricing rules, tax classes, and discounts to different customer segments.</p>"},{"location":"api/jsonrpc/resources/customer_group/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/customer_group/#list","title":"list","text":"<p>Retrieve list of customer groups.</p> <p>Method Name: <code>customer_group.list</code></p> <p>Parameters:</p> <ul> <li>None</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of customer groups with the following structure:</li> <li><code>customer_group_id</code> (int) - Customer group ID</li> <li><code>customer_group_code</code> (string) - Customer group name/code</li> <li><code>tax_class_id</code> (int) - Tax class ID assigned to the customer group</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"customer_group.list\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"customer_group_id\": 0,\n      \"customer_group_code\": \"NOT LOGGED IN\",\n      \"tax_class_id\": 3\n    },\n    {\n      \"customer_group_id\": 1,\n      \"customer_group_code\": \"General\",\n      \"tax_class_id\": 3\n    },\n    {\n      \"customer_group_id\": 2,\n      \"customer_group_code\": \"Wholesale\",\n      \"tax_class_id\": 3\n    },\n    {\n      \"customer_group_id\": 3,\n      \"customer_group_code\": \"Retailer\",\n      \"tax_class_id\": 3\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li>None specific to this method</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order/","title":"Sales Order API","text":""},{"location":"api/jsonrpc/resources/sales_order/#introduction","title":"Introduction","text":"<p>The Sales Order API allows you to manage orders in your OpenMage store. You can retrieve order information, add comments to orders, and perform various order operations such as holding, un-holding, and canceling orders.</p>"},{"location":"api/jsonrpc/resources/sales_order/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/sales_order/#list","title":"list","text":"<p>Retrieve list of orders with basic info.</p> <p>Method Name: <code>sales_order.list</code></p> <p>Parameters:</p> <ul> <li><code>filters</code> (object|array, optional) - Filters to apply to the list:</li> <li><code>order_id</code> (int|array) - Filter by order ID(s)</li> <li><code>status</code> (string|array) - Filter by order status(es)</li> <li><code>state</code> (string|array) - Filter by order state(s)</li> <li><code>customer_id</code> (int|array) - Filter by customer ID(s)</li> <li><code>created_at</code> (string|array) - Filter by creation date</li> <li><code>updated_at</code> (string|array) - Filter by update date</li> <li>Other attributes can also be used as filters</li> <li><code>store</code> (string|int, optional) - Store ID or code</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of orders with the following structure:</li> <li><code>increment_id</code> (string) - Order increment ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>updated_at</code> (string) - Update date</li> <li><code>status</code> (string) - Order status</li> <li><code>state</code> (string) - Order state</li> <li><code>customer_id</code> (int) - Customer ID</li> <li><code>base_grand_total</code> (float) - Base grand total</li> <li><code>grand_total</code> (float) - Grand total</li> <li><code>store_id</code> (int) - Store ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order.list\",\n    [{\"status\": \"pending\"}]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"increment_id\": \"100000001\",\n      \"order_id\": 1,\n      \"created_at\": \"2023-01-15 14:30:12\",\n      \"updated_at\": \"2023-01-15 14:30:12\",\n      \"status\": \"pending\",\n      \"state\": \"new\",\n      \"customer_id\": 1,\n      \"base_grand_total\": 150.00,\n      \"grand_total\": 150.00,\n      \"store_id\": 1\n    },\n    {\n      \"increment_id\": \"100000002\",\n      \"order_id\": 2,\n      \"created_at\": \"2023-01-16 09:45:23\",\n      \"updated_at\": \"2023-01-16 09:45:23\",\n      \"status\": \"pending\",\n      \"state\": \"new\",\n      \"customer_id\": 2,\n      \"base_grand_total\": 75.50,\n      \"grand_total\": 75.50,\n      \"store_id\": 1\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>filters_invalid</code> - Invalid filters provided</li> <li><code>store_not_exists</code> - Requested store does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order/#info","title":"info","text":"<p>Retrieve detailed order information.</p> <p>Method Name: <code>sales_order.info</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> </ul> <p>Return:</p> <ul> <li>(object) - Order information with the following structure:</li> <li><code>increment_id</code> (string) - Order increment ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>updated_at</code> (string) - Update date</li> <li><code>status</code> (string) - Order status</li> <li><code>state</code> (string) - Order state</li> <li><code>customer_id</code> (int) - Customer ID</li> <li><code>customer_firstname</code> (string) - Customer first name</li> <li><code>customer_lastname</code> (string) - Customer last name</li> <li><code>customer_email</code> (string) - Customer email</li> <li><code>base_grand_total</code> (float) - Base grand total</li> <li><code>grand_total</code> (float) - Grand total</li> <li><code>base_subtotal</code> (float) - Base subtotal</li> <li><code>subtotal</code> (float) - Subtotal</li> <li><code>base_shipping_amount</code> (float) - Base shipping amount</li> <li><code>shipping_amount</code> (float) - Shipping amount</li> <li><code>base_tax_amount</code> (float) - Base tax amount</li> <li><code>tax_amount</code> (float) - Tax amount</li> <li><code>store_id</code> (int) - Store ID</li> <li><code>shipping_address</code> (object) - Shipping address information</li> <li><code>billing_address</code> (object) - Billing address information</li> <li><code>items</code> (array) - Array of order items</li> <li><code>payment</code> (object) - Payment information</li> <li><code>status_history</code> (array) - Order status history</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order.info\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"increment_id\": \"100000001\",\n    \"order_id\": 1,\n    \"created_at\": \"2023-01-15 14:30:12\",\n    \"updated_at\": \"2023-01-15 14:30:12\",\n    \"status\": \"pending\",\n    \"state\": \"new\",\n    \"customer_id\": 1,\n    \"customer_firstname\": \"John\",\n    \"customer_lastname\": \"Doe\",\n    \"customer_email\": \"john.doe@example.com\",\n    \"base_grand_total\": 150.00,\n    \"grand_total\": 150.00,\n    \"base_subtotal\": 140.00,\n    \"subtotal\": 140.00,\n    \"base_shipping_amount\": 10.00,\n    \"shipping_amount\": 10.00,\n    \"base_tax_amount\": 0.00,\n    \"tax_amount\": 0.00,\n    \"store_id\": 1,\n    \"shipping_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"billing_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"items\": [\n      {\n        \"item_id\": 1,\n        \"product_id\": 123,\n        \"sku\": \"product123\",\n        \"name\": \"Test Product\",\n        \"qty_ordered\": 2,\n        \"price\": 70.00,\n        \"base_price\": 70.00,\n        \"row_total\": 140.00,\n        \"base_row_total\": 140.00\n      }\n    ],\n    \"payment\": {\n      \"method\": \"checkmo\",\n      \"amount_ordered\": 150.00,\n      \"base_amount_ordered\": 150.00\n    },\n    \"status_history\": [\n      {\n        \"created_at\": \"2023-01-15 14:30:12\",\n        \"status\": \"pending\",\n        \"comment\": \"Order placed\"\n      }\n    ]\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order/#addcomment","title":"<code>addComment</code>","text":"<p>Add a comment to an order.</p> <p>Method Name: <code>sales_order.addComment</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> <li><code>status</code> (string, required) - Order status</li> <li><code>comment</code> (string, optional) - Comment text</li> <li><code>notify</code> (boolean, optional) - Whether to notify customer (default: false)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order.addComment\",\n    [\"100000001\", \"processing\", \"Order is being processed\", true]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>status_not_exists</code> - Status does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order/#hold","title":"hold","text":"<p>Place an order on hold.</p> <p>Method Name: <code>sales_order.hold</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order.hold\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>order_not_holdable</code> - Order cannot be put on hold</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order/#unhold","title":"<code>unhold</code>","text":"<p>Release an order from hold.</p> <p>Method Name: <code>sales_order.unhold</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order.unhold\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>order_not_unholdable</code> - Order is not on hold</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order/#cancel","title":"<code>cancel</code>","text":"<p>Cancel an order.</p> <p>Method Name: <code>sales_order.cancel</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order.cancel\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>order_not_cancelable</code> - Order cannot be canceled</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_creditmemo/","title":"Sales Order Credit Memo API","text":""},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#introduction","title":"Introduction","text":"<p>The Sales Order Credit Memo API allows you to manage credit memos in your OpenMage store. You can retrieve credit memo information, create new credit memos, add comments, and cancel credit memos.</p>"},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#list","title":"list","text":"<p>Retrieve list of credit memos with basic info.</p> <p>Method Name: <code>sales_order_creditmemo.list</code></p> <p>Parameters:</p> <ul> <li><code>filters</code> (object|array, optional) - Filters to apply to the list:</li> <li><code>creditmemo_id</code> (int|array) - Filter by credit memo ID(s)</li> <li><code>order_id</code> (int|array) - Filter by order ID(s)</li> <li><code>increment_id</code> (string|array) - Filter by increment ID(s)</li> <li><code>created_at</code> (string|array) - Filter by creation date</li> <li><code>order_increment_id</code> (string|array) - Filter by order increment ID(s)</li> <li>Other attributes can also be used as filters</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of credit memos with the following structure:</li> <li><code>increment_id</code> (string) - Credit memo increment ID</li> <li><code>creditmemo_id</code> (int) - Credit memo ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>order_increment_id</code> (string) - Order increment ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>state</code> (int) - Credit memo state</li> <li><code>grand_total</code> (float) - Grand total</li> <li><code>store_id</code> (int) - Store ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_creditmemo.list\",\n    [{\"order_increment_id\": \"100000001\"}]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"increment_id\": \"100000001\",\n      \"creditmemo_id\": 1,\n      \"order_id\": 1,\n      \"order_increment_id\": \"100000001\",\n      \"created_at\": \"2023-01-17 09:45:20\",\n      \"state\": 2,\n      \"grand_total\": 150.00,\n      \"store_id\": 1\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>filters_invalid</code> - Invalid filters provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#info","title":"info","text":"<p>Retrieve detailed credit memo information.</p> <p>Method Name: <code>sales_order_creditmemo.info</code></p> <p>Parameters:</p> <ul> <li><code>creditmemoIncrementId</code> (string, required) - Credit memo increment ID</li> </ul> <p>Return:</p> <ul> <li>(object) - Credit memo information with the following structure:</li> <li><code>increment_id</code> (string) - Credit memo increment ID</li> <li><code>creditmemo_id</code> (int) - Credit memo ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>order_increment_id</code> (string) - Order increment ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>state</code> (int) - Credit memo state</li> <li><code>grand_total</code> (float) - Grand total</li> <li><code>subtotal</code> (float) - Subtotal</li> <li><code>adjustment_positive</code> (float) - Positive adjustment</li> <li><code>adjustment_negative</code> (float) - Negative adjustment</li> <li><code>shipping_amount</code> (float) - Shipping amount</li> <li><code>tax_amount</code> (float) - Tax amount</li> <li><code>store_id</code> (int) - Store ID</li> <li><code>billing_address</code> (object) - Billing address information</li> <li><code>shipping_address</code> (object) - Shipping address information</li> <li><code>items</code> (array) - Array of credit memo items</li> <li><code>comments</code> (array) - Array of credit memo comments</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_creditmemo.info\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"increment_id\": \"100000001\",\n    \"creditmemo_id\": 1,\n    \"order_id\": 1,\n    \"order_increment_id\": \"100000001\",\n    \"created_at\": \"2023-01-17 09:45:20\",\n    \"state\": 2,\n    \"grand_total\": 150.00,\n    \"subtotal\": 140.00,\n    \"adjustment_positive\": 0.00,\n    \"adjustment_negative\": 0.00,\n    \"shipping_amount\": 10.00,\n    \"tax_amount\": 0.00,\n    \"store_id\": 1,\n    \"billing_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"shipping_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"items\": [\n      {\n        \"item_id\": 1,\n        \"parent_id\": 1,\n        \"sku\": \"product123\",\n        \"name\": \"Test Product\",\n        \"qty\": 2.0000,\n        \"price\": 70.00,\n        \"tax_amount\": 0.00,\n        \"row_total\": 140.00,\n        \"order_item_id\": 1\n      }\n    ],\n    \"comments\": [\n      {\n        \"comment_id\": 1,\n        \"parent_id\": 1,\n        \"created_at\": \"2023-01-17 09:45:20\",\n        \"comment\": \"Credit memo created\"\n      }\n    ]\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>creditmemo_not_exists</code> - Credit memo does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#create","title":"create","text":"<p>Create a new credit memo for an order.</p> <p>Method Name: <code>sales_order_creditmemo.create</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> <li><code>creditmemoData</code> (object, optional) - Credit memo data:</li> <li><code>items</code> (array, optional) - Array of items to refund:<ul> <li><code>order_item_id</code> (int) - Order item ID</li> <li><code>qty</code> (float) - Quantity to refund</li> </ul> </li> <li><code>comment</code> (string, optional) - Credit memo comment</li> <li><code>adjustment_positive</code> (float, optional) - Positive adjustment amount</li> <li><code>adjustment_negative</code> (float, optional) - Negative adjustment amount</li> <li><code>shipping_amount</code> (float, optional) - Shipping amount to refund</li> <li><code>refund_to_store_credit</code> (boolean, optional) - Whether to refund to store credit</li> <li><code>comment</code> (string, optional) - Credit memo comment</li> <li><code>email</code> (boolean, optional) - Whether to send email notification (default: false)</li> <li><code>includeComment</code> (boolean, optional) - Whether to include comment in email (default: false)</li> </ul> <p>Return:</p> <ul> <li>(string) - Credit memo increment ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_creditmemo.create\",\n    [\n      \"100000001\",\n      {\n        \"items\": {\n          \"1\": {\"qty\": 2}\n        },\n        \"shipping_amount\": 10.00\n      },\n      \"Credit memo created\",\n      true,\n      true\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"100000001\",\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>order_not_refundable</code> - Order cannot be refunded</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#addcomment","title":"<code>addComment</code>","text":"<p>Add a comment to a credit memo.</p> <p>Method Name: <code>sales_order_creditmemo.addComment</code></p> <p>Parameters:</p> <ul> <li><code>creditmemoIncrementId</code> (string, required) - Credit memo increment ID</li> <li><code>comment</code> (string, required) - Comment text</li> <li><code>email</code> (boolean, optional) - Whether to send email notification (default: false)</li> <li><code>includeInEmail</code> (boolean, optional) - Whether to include comment in email (default: false)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_creditmemo.addComment\",\n    [\"100000001\", \"Refund processed\", true, true]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>creditmemo_not_exists</code> - Credit memo does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_creditmemo/#cancel","title":"cancel","text":"<p>Cancel a credit memo.</p> <p>Method Name: <code>sales_order_creditmemo.cancel</code></p> <p>Parameters:</p> <ul> <li><code>creditmemoIncrementId</code> (string, required) - Credit memo increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_creditmemo.cancel\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>creditmemo_not_exists</code> - Credit memo does not exist</li> <li><code>creditmemo_not_cancelable</code> - Credit memo cannot be canceled</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/","title":"Sales Order Invoice API","text":""},{"location":"api/jsonrpc/resources/sales_order_invoice/#introduction","title":"Introduction","text":"<p>The Sales Order Invoice API allows you to manage invoices in your OpenMage store. You can retrieve invoice information, create new invoices, add comments, and perform various invoice operations such as capturing payment, voiding, and canceling invoices.</p>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/sales_order_invoice/#list","title":"list","text":"<p>Retrieve list of invoices with basic info.</p> <p>Method Name: <code>sales_order_invoice.list</code></p> <p>Parameters:</p> <ul> <li><code>filters</code> (object|array, optional) - Filters to apply to the list:</li> <li><code>invoice_id</code> (int|array) - Filter by invoice ID(s)</li> <li><code>order_id</code> (int|array) - Filter by order ID(s)</li> <li><code>increment_id</code> (string|array) - Filter by increment ID(s)</li> <li><code>created_at</code> (string|array) - Filter by creation date</li> <li><code>order_increment_id</code> (string|array) - Filter by order increment ID(s)</li> <li><code>state</code> (int|array) - Filter by state(s)</li> <li>Other attributes can also be used as filters</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of invoices with the following structure:</li> <li><code>increment_id</code> (string) - Invoice increment ID</li> <li><code>invoice_id</code> (int) - Invoice ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>order_increment_id</code> (string) - Order increment ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>state</code> (int) - Invoice state</li> <li><code>grand_total</code> (float) - Grand total</li> <li><code>store_id</code> (int) - Store ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.list\",\n    [{\"order_increment_id\": \"100000001\"}]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"increment_id\": \"100000001\",\n      \"invoice_id\": 1,\n      \"order_id\": 1,\n      \"order_increment_id\": \"100000001\",\n      \"created_at\": \"2023-01-16 11:15:30\",\n      \"state\": 2,\n      \"grand_total\": 150.00,\n      \"store_id\": 1\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>filters_invalid</code> - Invalid filters provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#info","title":"info","text":"<p>Retrieve detailed invoice information.</p> <p>Method Name: <code>sales_order_invoice.info</code></p> <p>Parameters:</p> <ul> <li><code>invoiceIncrementId</code> (string, required) - Invoice increment ID</li> </ul> <p>Return:</p> <ul> <li>(object) - Invoice information with the following structure:</li> <li><code>increment_id</code> (string) - Invoice increment ID</li> <li><code>invoice_id</code> (int) - Invoice ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>order_increment_id</code> (string) - Order increment ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>state</code> (int) - Invoice state</li> <li><code>grand_total</code> (float) - Grand total</li> <li><code>subtotal</code> (float) - Subtotal</li> <li><code>tax_amount</code> (float) - Tax amount</li> <li><code>shipping_amount</code> (float) - Shipping amount</li> <li><code>discount_amount</code> (float) - Discount amount</li> <li><code>store_id</code> (int) - Store ID</li> <li><code>billing_address</code> (object) - Billing address information</li> <li><code>shipping_address</code> (object) - Shipping address information</li> <li><code>items</code> (array) - Array of invoice items</li> <li><code>comments</code> (array) - Array of invoice comments</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.info\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"increment_id\": \"100000001\",\n    \"invoice_id\": 1,\n    \"order_id\": 1,\n    \"order_increment_id\": \"100000001\",\n    \"created_at\": \"2023-01-16 11:15:30\",\n    \"state\": 2,\n    \"grand_total\": 150.00,\n    \"subtotal\": 140.00,\n    \"tax_amount\": 0.00,\n    \"shipping_amount\": 10.00,\n    \"discount_amount\": 0.00,\n    \"store_id\": 1,\n    \"billing_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"shipping_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"items\": [\n      {\n        \"item_id\": 1,\n        \"parent_id\": 1,\n        \"sku\": \"product123\",\n        \"name\": \"Test Product\",\n        \"qty\": 2.0000,\n        \"price\": 70.00,\n        \"tax_amount\": 0.00,\n        \"row_total\": 140.00,\n        \"order_item_id\": 1\n      }\n    ],\n    \"comments\": [\n      {\n        \"comment_id\": 1,\n        \"parent_id\": 1,\n        \"created_at\": \"2023-01-16 11:15:30\",\n        \"comment\": \"Invoice created\"\n      }\n    ]\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invoice_not_exists</code> - Invoice does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#create","title":"create","text":"<p>Create a new invoice for an order.</p> <p>Method Name: <code>sales_order_invoice.create</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> <li><code>itemsQty</code> (array, optional) - Array of items to invoice with quantities:</li> <li><code>order_item_id</code> (int) - Order item ID</li> <li><code>qty</code> (float) - Quantity to invoice</li> <li><code>comment</code> (string, optional) - Invoice comment</li> <li><code>email</code> (boolean, optional) - Whether to send email notification (default: false)</li> <li><code>includeComment</code> (boolean, optional) - Whether to include comment in email (default: false)</li> </ul> <p>Return:</p> <ul> <li>(string) - Invoice increment ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.create\",\n    [\n      \"100000001\",\n      {\"1\": 2},\n      \"Invoice created\",\n      true,\n      true\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"100000001\",\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>order_not_invoiceable</code> - Order cannot be invoiced</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#addcomment","title":"<code>addComment</code>","text":"<p>Add a comment to an invoice.</p> <p>Method Name: <code>sales_order_invoice.addComment</code></p> <p>Parameters:</p> <ul> <li><code>invoiceIncrementId</code> (string, required) - Invoice increment ID</li> <li><code>comment</code> (string, required) - Comment text</li> <li><code>email</code> (boolean, optional) - Whether to send email notification (default: false)</li> <li><code>includeInEmail</code> (boolean, optional) - Whether to include comment in email (default: false)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.addComment\",\n    [\"100000001\", \"Payment received\", true, true]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invoice_not_exists</code> - Invoice does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#capture","title":"capture","text":"<p>Capture an invoice.</p> <p>Method Name: <code>sales_order_invoice.capture</code></p> <p>Parameters:</p> <ul> <li><code>invoiceIncrementId</code> (string, required) - Invoice increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.capture\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invoice_not_exists</code> - Invoice does not exist</li> <li><code>invoice_not_capturable</code> - Invoice cannot be captured</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#void","title":"void","text":"<p>Void an invoice.</p> <p>Method Name: <code>sales_order_invoice.void</code></p> <p>Parameters:</p> <ul> <li><code>invoiceIncrementId</code> (string, required) - Invoice increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.void\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invoice_not_exists</code> - Invoice does not exist</li> <li><code>invoice_not_voidable</code> - Invoice cannot be voided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_invoice/#cancel","title":"cancel","text":"<p>Cancel an invoice.</p> <p>Method Name: <code>sales_order_invoice.cancel</code></p> <p>Parameters:</p> <ul> <li><code>invoiceIncrementId</code> (string, required) - Invoice increment ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_invoice.cancel\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>invoice_not_exists</code> - Invoice does not exist</li> <li><code>invoice_not_cancelable</code> - Invoice cannot be canceled</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/","title":"Sales Order Shipment API","text":""},{"location":"api/jsonrpc/resources/sales_order_shipment/#introduction","title":"Introduction","text":"<p>The Sales Order Shipment API allows you to manage shipments in your OpenMage store. You can retrieve shipment information, create new shipments, add comments, and manage tracking information.</p>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#available-methods","title":"Available Methods","text":""},{"location":"api/jsonrpc/resources/sales_order_shipment/#list","title":"list","text":"<p>Retrieve list of shipments with basic info.</p> <p>Method Name: <code>sales_order_shipment.list</code></p> <p>Parameters:</p> <ul> <li><code>filters</code> (object|array, optional) - Filters to apply to the list:</li> <li><code>shipment_id</code> (int|array) - Filter by shipment ID(s)</li> <li><code>order_id</code> (int|array) - Filter by order ID(s)</li> <li><code>increment_id</code> (string|array) - Filter by increment ID(s)</li> <li><code>created_at</code> (string|array) - Filter by creation date</li> <li><code>order_increment_id</code> (string|array) - Filter by order increment ID(s)</li> <li>Other attributes can also be used as filters</li> </ul> <p>Return:</p> <ul> <li>(array) - Array of shipments with the following structure:</li> <li><code>increment_id</code> (string) - Shipment increment ID</li> <li><code>shipment_id</code> (int) - Shipment ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>order_increment_id</code> (string) - Order increment ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>total_qty</code> (float) - Total quantity</li> <li><code>store_id</code> (int) - Store ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.list\",\n    [{\"order_increment_id\": \"100000001\"}]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"increment_id\": \"100000001\",\n      \"shipment_id\": 1,\n      \"order_id\": 1,\n      \"order_increment_id\": \"100000001\",\n      \"created_at\": \"2023-01-16 10:30:45\",\n      \"total_qty\": 2.0000,\n      \"store_id\": 1\n    }\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>filters_invalid</code> - Invalid filters provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#info","title":"info","text":"<p>Retrieve detailed shipment information.</p> <p>Method Name: <code>sales_order_shipment.info</code></p> <p>Parameters:</p> <ul> <li><code>shipmentIncrementId</code> (string, required) - Shipment increment ID</li> </ul> <p>Return:</p> <ul> <li>(object) - Shipment information with the following structure:</li> <li><code>increment_id</code> (string) - Shipment increment ID</li> <li><code>shipment_id</code> (int) - Shipment ID</li> <li><code>order_id</code> (int) - Order ID</li> <li><code>order_increment_id</code> (string) - Order increment ID</li> <li><code>created_at</code> (string) - Creation date</li> <li><code>total_qty</code> (float) - Total quantity</li> <li><code>store_id</code> (int) - Store ID</li> <li><code>shipping_address</code> (object) - Shipping address information</li> <li><code>billing_address</code> (object) - Billing address information</li> <li><code>items</code> (array) - Array of shipped items</li> <li><code>tracks</code> (array) - Array of tracking information</li> <li><code>comments</code> (array) - Array of shipment comments</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.info\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"increment_id\": \"100000001\",\n    \"shipment_id\": 1,\n    \"order_id\": 1,\n    \"order_increment_id\": \"100000001\",\n    \"created_at\": \"2023-01-16 10:30:45\",\n    \"total_qty\": 2.0000,\n    \"store_id\": 1,\n    \"shipping_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"billing_address\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\",\n      \"region\": \"California\",\n      \"postcode\": \"12345\",\n      \"country_id\": \"US\",\n      \"telephone\": \"555-123-4567\"\n    },\n    \"items\": [\n      {\n        \"item_id\": 1,\n        \"parent_id\": 1,\n        \"sku\": \"product123\",\n        \"name\": \"Test Product\",\n        \"qty\": 2.0000,\n        \"price\": 70.00,\n        \"weight\": 1.00,\n        \"order_item_id\": 1\n      }\n    ],\n    \"tracks\": [\n      {\n        \"track_id\": 1,\n        \"parent_id\": 1,\n        \"track_number\": \"1Z12345E0291980793\",\n        \"title\": \"UPS\",\n        \"carrier_code\": \"ups\",\n        \"created_at\": \"2023-01-16 10:35:12\"\n      }\n    ],\n    \"comments\": [\n      {\n        \"comment_id\": 1,\n        \"parent_id\": 1,\n        \"created_at\": \"2023-01-16 10:30:45\",\n        \"comment\": \"Shipment created\"\n      }\n    ]\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>shipment_not_exists</code> - Shipment does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#create","title":"create","text":"<p>Create a new shipment for an order.</p> <p>Method Name: <code>sales_order_shipment.create</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> <li><code>itemsQty</code> (array, optional) - Array of items to ship with quantities:</li> <li><code>order_item_id</code> (int) - Order item ID</li> <li><code>qty</code> (float) - Quantity to ship</li> <li><code>comment</code> (string, optional) - Shipment comment</li> <li><code>email</code> (boolean, optional) - Whether to send email notification (default: false)</li> <li><code>includeComment</code> (boolean, optional) - Whether to include comment in email (default: false)</li> </ul> <p>Return:</p> <ul> <li>(string) - Shipment increment ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.create\",\n    [\n      \"100000001\",\n      {\"1\": 2},\n      \"Shipment created\",\n      true,\n      true\n    ]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"100000001\",\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> <li><code>order_not_shippable</code> - Order cannot be shipped</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#addcomment","title":"<code>addComment</code>","text":"<p>Add a comment to a shipment.</p> <p>Method Name: <code>sales_order_shipment.addComment</code></p> <p>Parameters:</p> <ul> <li><code>shipmentIncrementId</code> (string, required) - Shipment increment ID</li> <li><code>comment</code> (string, required) - Comment text</li> <li><code>email</code> (boolean, optional) - Whether to send email notification (default: false)</li> <li><code>includeInEmail</code> (boolean, optional) - Whether to include comment in email (default: false)</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.addComment\",\n    [\"100000001\", \"Package has been shipped\", true, true]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>shipment_not_exists</code> - Shipment does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#addtrack","title":"<code>addTrack</code>","text":"<p>Add tracking information to a shipment.</p> <p>Method Name: <code>sales_order_shipment.addTrack</code></p> <p>Parameters:</p> <ul> <li><code>shipmentIncrementId</code> (string, required) - Shipment increment ID</li> <li><code>carrier</code> (string, required) - Carrier code</li> <li><code>title</code> (string, required) - Carrier title</li> <li><code>trackNumber</code> (string, required) - Tracking number</li> </ul> <p>Return:</p> <ul> <li>(int) - Tracking ID</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.addTrack\",\n    [\"100000001\", \"ups\", \"UPS\", \"1Z12345E0291980793\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": 1,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>shipment_not_exists</code> - Shipment does not exist</li> <li><code>data_invalid</code> - Invalid data provided</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#removetrack","title":"<code>removeTrack</code>","text":"<p>Remove tracking information from a shipment.</p> <p>Method Name: <code>sales_order_shipment.removeTrack</code></p> <p>Parameters:</p> <ul> <li><code>shipmentIncrementId</code> (string, required) - Shipment increment ID</li> <li><code>trackId</code> (int, required) - Tracking ID</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.removeTrack\",\n    [\"100000001\", 1]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>shipment_not_exists</code> - Shipment does not exist</li> <li><code>track_not_exists</code> - Tracking information does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#sendinfo","title":"<code>sendInfo</code>","text":"<p>Send shipment information to the customer.</p> <p>Method Name: <code>sales_order_shipment.sendInfo</code></p> <p>Parameters:</p> <ul> <li><code>shipmentIncrementId</code> (string, required) - Shipment increment ID</li> <li><code>comment</code> (string, optional) - Comment to include in the email</li> </ul> <p>Return:</p> <ul> <li>(boolean) - True on success</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.sendInfo\",\n    [\"100000001\", \"Your order has been shipped\"]\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": true,\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>shipment_not_exists</code> - Shipment does not exist</li> </ul>"},{"location":"api/jsonrpc/resources/sales_order_shipment/#getcarriers","title":"<code>getCarriers</code>","text":"<p>Get list of available shipping carriers.</p> <p>Method Name: <code>sales_order_shipment.getCarriers</code></p> <p>Parameters:</p> <ul> <li><code>orderIncrementId</code> (string, required) - Order increment ID</li> </ul> <p>Return:</p> <ul> <li>(object) - Object with carrier codes as keys and carrier titles as values</li> </ul> <p>Example Request: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"call\",\n  \"params\": [\n    \"session_id\",\n    \"sales_order_shipment.getCarriers\",\n    \"100000001\"\n  ],\n  \"id\": 1\n}\n</code></pre></p> <p>Example Response: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"result\": {\n    \"ups\": \"United Parcel Service\",\n    \"usps\": \"United States Postal Service\",\n    \"fedex\": \"Federal Express\",\n    \"dhl\": \"DHL\"\n  },\n  \"id\": 1\n}\n</code></pre></p> <p>Possible Errors:</p> <ul> <li><code>order_not_exists</code> - Order does not exist</li> </ul>"},{"location":"api/rest/common_http_status_codes/","title":"Common HTTP status codes","text":"<p>HTTP status codes are an essential part of the REST concept. You can get familiar with all of them on Wikipedia.</p> <p>The Magento API attempts to return appropriate HTTP status codes for all requests. Any information is returned in the form of a standard HTTP response with an HTTP status code describing the error and the body message.</p>"},{"location":"api/rest/common_http_status_codes/#http-status-codes","title":"HTTP Status Codes","text":"<p>The following table contains possible common HTTP status codes:</p> Status Code Message 200 OK - 201 Created Resource was partially created 207 Multi-Status - 400 Bad Request Resource data before validation error.Resource data invalid.The request data is invalid.Resource collection paging error.The paging limit exceeds the allowed number.Resource collection ordering error.Resource collection filtering error.Resource collection including additional attributes error. 403 Forbidden Access denied. 404 Not Found Resource not found. 405 Method Not Allowed Resource does not support method.Resource method not implemented yet. 500 Internal Error Not handled simple errors.Resource internal error."},{"location":"api/rest/common_http_status_codes/#error-messages","title":"Error Messages","text":"<p>When the Magento API returns an error message, it returns it in your requested format. For example, an error in the XML format might look like the following:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;messages&gt;\n        &lt;error&gt;\n            &lt;data_item&gt;\n                &lt;code&gt;404&lt;/code&gt;\n                &lt;message&gt;Resource not found.&lt;/message&gt;\n            &lt;/data_item&gt;\n        &lt;/error&gt;\n    &lt;/messages&gt;\n&lt;/magento_api&gt;\n</code></pre> <p>An error in the JSON format might look like the following:</p> <pre><code>{\"messages\":{\"error\":[{\"code\":404,\"message\":\"Resource not found.\"}]}}\n</code></pre>"},{"location":"api/rest/get_filters/","title":"Use filters","text":"<p>JSON responses on this page contributed by Tim Reynolds.</p> <p>Some requests use GET parameters in the URL. These are as follows:</p>"},{"location":"api/rest/get_filters/#filter","title":"<code>filter</code>","text":"<p>Specifies the filters for returned data.</p>"},{"location":"api/rest/get_filters/#page","title":"<code>page</code>","text":"<p>Specifies the page number which items will be returned.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?page=1\n</code></pre>"},{"location":"api/rest/get_filters/#order-dir","title":"<code>order</code>, <code>dir</code>","text":"<p>Specifies the sort order of returned items and the order direction: <code>asc</code> - returns items in the ascending order; <code>dsc</code> - returns items in the descending order.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?order=name&amp;dir=dsc\nhttps://om.ddev.site/api/rest/products?order=name&amp;dir=asc\n</code></pre>"},{"location":"api/rest/get_filters/#limit","title":"<code>limit</code>","text":"<p>Limits the number of returned items in the response. Note that by default, 10 items are returned in the response. The maximum number is 100 items.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?limit=2\n</code></pre>"},{"location":"api/rest/get_filters/#neq","title":"<code>neq</code>","text":"<p>\u201cnot equal to\u201d - returns items with the specified attribute that is not equal to the defined value.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=entity_id&amp;filter[1][neq]=3\n</code></pre>"},{"location":"api/rest/get_filters/#in","title":"<code>in</code>","text":"<p>\u201cequals any of\u201d - returns items that are equal to the item(s) with the specified attribute(s).</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=entity_id&amp;filter[1][in]=3\n</code></pre>"},{"location":"api/rest/get_filters/#nin","title":"<code>nin</code>","text":"<p>\u201cnot equals any of\u201d - returns items excluding the item with the specified attribute.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=entity_id&amp;filter[1][nin]=3\n</code></pre>"},{"location":"api/rest/get_filters/#gt","title":"<code>gt</code>","text":"<p>\u201cgreater than\u201d - returns items with the specified attribute that is greater than the defined value.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=entity_id&amp;filter[1][gt]=3\nhttps://om.ddev.site/api/rest/products?filter[1][attribute]=price&amp;filter[1][gt]=300\n</code></pre>"},{"location":"api/rest/get_filters/#lt","title":"<code>lt</code>","text":"<p>\u201cless than\u201d - returns items with the specified attribute that is less than the defined value.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=entity_id&amp;filter[1][lt]=4\n</code></pre>"},{"location":"api/rest/get_filters/#from-to","title":"<code>from</code>, <code>to</code>","text":"<p>Specifies the range of attributes according to which items will be returned.</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=entity_id&amp;filter[1][from]=1&amp;filter[1][to]=3\nhttps://om.ddev.site/api/rest/products?filter[1][attribute]=price&amp;filter[1][from]=150&amp;filter[1][to]=350\n</code></pre>"},{"location":"api/rest/get_filters/#white-spaces","title":"White-spaces","text":"<p>If the attribute value consists of several words separated by a white-space, the \u2018%20\u2019 sign is used:</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products?filter[1][attribute]=name&amp;filter[1][in]=BlackBerry%208100%20Pearl\n</code></pre>"},{"location":"api/rest/get_filters/#example-1","title":"Example 1","text":"<p>For example, to filter products with the description equal to simple01:</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/products/?order=entity_id&amp;filter[0][attribute]=description&amp;filter[0][in][0]=simple01\n</code></pre>"},{"location":"api/rest/get_filters/#example-2","title":"Example 2","text":"<p>To filter customers by email address:</p> <p>Example</p> <pre><code>https://om.ddev.site/api/rest/customers?filter[1][attribute]=email&amp;filter[1][in][0]=ryan@test.com\n</code></pre>"},{"location":"api/rest/http_methods/","title":"HTTP methods","text":"<p>Accessing API is performed via HTTP. When you enter a URL into a web browser address bar, the browser performs an HTTP GET request to the URL. This usually returns a web page in the form of an HTTP response that the browser displays. But the GET method is one of several HTTP request methods. Magento REST API uses the four main HTTP methods: GET, POST, PUT, and DELETE. The most widespread methods are GET and POST. The other methods are less known but they became widely known due to the popularity of REST web services. An important concept of the REST architecture is that different HTTP request methods perform different actions when applied to the same URL.</p> <p>For example:</p> <pre><code>GET https://om.ddev.site/rest/customers/123\n</code></pre> <p>will retrieve information about the specified customer;</p> <pre><code>DELETE https://om.ddev.site/rest/customers/123\n</code></pre> <p>will delete the specified customer.</p>"},{"location":"api/rest/http_methods/#get","title":"GET","text":"<p>Retrieving Resources with the HTTP GET Method</p> <p>The HTTP GET method is defined in section 9.3 of the RFC2616 document:</p> <p>The GET method means retrieve whatever information (in the form of an entity) is identified by the Request-URI. If the Request-URI refers to a data-producing process, it is the produced data which shall be returned as the entity in the response and not the source text of the process, unless that text happens to be the output of the process.</p> <p>You can retrieve a representation of a resource by getting its URL.</p>"},{"location":"api/rest/http_methods/#post-and-put","title":"POST and PUT","text":"<p>Creating or Updating Resources with the HTTP POST and PUT Methods</p> <p>The POST method is defined in section 9.5 of the RFC2616 document:</p> <p>The POST method is used to request that the origin server accept the entity enclosed in the request as a new subordinate of the resource identified by the Request-URI in the Request-Line. POST is designed to allow a uniform method to cover the following functions:</p> <ul> <li> <p>Annotation of existing resources;</p> </li> <li> <p>Posting a message to a bulletin board, newsgroup, mailing list, or similar group of articles;</p> </li> <li> <p>Providing a block of data, such as the result of submitting a form, to a data-handling process;</p> </li> <li> <p>Extending a database through an append operation.</p> </li> </ul> <p>The PUT method is defined in section 9.6 of the RFC2616 document:</p> <p>The PUT method requests that the enclosed entity be stored under the supplied Request-URI. If the Request-URI refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version of the one residing on the origin server.</p> <p>Creating or updating a resource involves performing an HTTP POST or HTTP PUT to a resource URL.</p>"},{"location":"api/rest/http_methods/#delete","title":"DELETE","text":"<p>Deleting Resources with the HTTP DELETE Method</p> <p>The DELETE method is defined in section 9.7 of the RFC2616 document:</p> <p>The DELETE method requests that the origin server delete the resource identified by the Request-URI. This method MAY be overridden by human intervention (or other means) on the origin server.</p> <p>Deleting a resource is performed by means of making an HTTP DELETE request to the resource URL.</p>"},{"location":"api/rest/response_formats/","title":"Response Formats","text":"<p>If you make a Magento API call, you are guaranteed to receive some kind of a response. If you make a successful call, you will receive an HTTP response with a 200 OK status.</p> <p>You can view the response data from any Magento API call in one of the following two formats:</p> <ul> <li>XML</li> <li>JSON</li> </ul> <p>The format of returned data is defined in the request header. The format you choose depends on what you are familiar with most or tools available to you.</p>"},{"location":"api/rest/response_formats/#xml-format","title":"XML Format","text":"<p>The XML response format is a simple XML block. To set the response format to XML, add the Accept request header with the <code>text/xml</code> value.</p> <p>A successful call will return the following response (example of retrieving information about stock items):</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;data_item&gt;\n        &lt;item_id&gt;1&lt;/item_id&gt;\n        &lt;product_id&gt;1&lt;/product_id&gt;\n        &lt;stock_id&gt;1&lt;/stock_id&gt;\n        &lt;qty&gt;99.0000&lt;/qty&gt;\n        &lt;low_stock_date&gt;&lt;/low_stock_date&gt;\n    &lt;/data_item&gt;\n    &lt;data_item&gt;\n        &lt;item_id&gt;2&lt;/item_id&gt;\n        &lt;product_id&gt;2&lt;/product_id&gt;\n        &lt;stock_id&gt;1&lt;/stock_id&gt;\n        &lt;qty&gt;100.0000&lt;/qty&gt;\n        &lt;low_stock_date&gt;&lt;/low_stock_date&gt;\n    &lt;/data_item&gt;\n&lt;/magento_api&gt;\n</code></pre> <p>If an error occurs, the call may return the following response:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;messages&gt;\n        &lt;error&gt;\n            &lt;data_item&gt;\n                &lt;code&gt;404&lt;/code&gt;\n                &lt;message&gt;Resource not found.&lt;/message&gt;\n            &lt;/data_item&gt;\n        &lt;/error&gt;\n    &lt;/messages&gt;\n&lt;/magento_api&gt;\n</code></pre>"},{"location":"api/rest/response_formats/#json-format","title":"JSON Format","text":"<p>To set the response format to JSON, add the Accept request header with the <code>application/json</code> value.</p>"},{"location":"api/rest/response_formats/#response-structure","title":"Response Structure","text":"<p>The JSON objects represent a direct mapping of the XML block from the XML response format.</p> <p>A simple XML error</p> <pre><code>&lt;messages&gt;\n    &lt;error&gt;\n        &lt;data_item&gt;\n            &lt;code&gt;404&lt;/code&gt;\n            &lt;message&gt;Resource not found.&lt;/message&gt;\n        &lt;/data_item&gt;\n    &lt;/error&gt;\n&lt;/messages&gt;\n</code></pre> <p>will be transformed to</p> <pre><code>{\"messages\":{\"error\":[{\"code\":404,\"message\":\"Resource not found.\"}]}}\n</code></pre>"},{"location":"api/rest/response_formats/#json-responses","title":"JSON Responses","text":"<p>A successful API call to the Stock Items resource will return the following XML response:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;data_item&gt;\n        &lt;item_id&gt;1&lt;/item_id&gt;\n        &lt;product_id&gt;1&lt;/product_id&gt;\n        &lt;stock_id&gt;1&lt;/stock_id&gt;\n        &lt;qty&gt;99.0000&lt;/qty&gt;\n        &lt;low_stock_date&gt;&lt;/low_stock_date&gt;\n    &lt;/data_item&gt;\n    &lt;data_item&gt;\n        &lt;item_id&gt;2&lt;/item_id&gt;\n        &lt;product_id&gt;2&lt;/product_id&gt;\n        &lt;stock_id&gt;1&lt;/stock_id&gt;\n        &lt;qty&gt;100.0000&lt;/qty&gt;\n        &lt;low_stock_date&gt;&lt;/low_stock_date&gt;\n    &lt;/data_item&gt;\n&lt;/magento_api&gt;\n</code></pre> <p>The JSON equivalent will be as follows:</p> <pre><code>[{\"item_id\":\"1\",\"product_id\":\"1\",\"stock_id\":\"1\",\"qty\":\"99.0000\",\"low_stock_date\":null},{\"item_id\":\"2\",\"product_id\":\"2\",\"stock_id\":\"1\",\"qty\":\"100.0000\",\"low_stock_date\":null}]\n</code></pre> <p>The list of HTTP status codes that are returned in the API response is described in the Common HTTP Status Codes part of the documentation. There, you can find the list of codes themselves together with their description.</p>"},{"location":"api/rest/testing_rest_resources/","title":"Testing","text":"<p>Three steps are required for utilizing REST API resources:</p> <ul> <li>Authenticate the user (receive the access token for further steps);</li> <li>Configure the permissions for operations and attributes for the type of the user;</li> <li>Make an API call.</li> </ul> <p>The following headers are required for the call:</p> <ul> <li>Authorization</li> <li>Version</li> <li>Accept</li> <li>Content-type</li> </ul> <p>The following parameters must be provided in the Authorization header for the call:</p> <ul> <li><code>oauth\\_signature\\_method</code></li> <li><code>oauth\\_version</code></li> <li><code>oauth\\_nonce</code></li> <li><code>oauth\\_timestamp</code></li> <li><code>oauth\\_consumer\\_key</code></li> <li><code>oauth\\_token</code></li> <li><code>oauth\\_signature</code></li> </ul>"},{"location":"api/rest/testing_rest_resources/#testing-rest-resources-with-the-rest-client-plugin-for-the-mozilla-firefox-browser","title":"Testing REST resources with the REST Client plugin for the Mozilla Firefox browser.","text":"<ol> <li>Open the REST Client.</li> <li>From the Authentication drop-down, select OAuth. </li> <li>In the OAuth window, on the Signature for the request tab, fill in the following fields:<ul> <li>Consumer key: Enter the Key value provided when you created the consumer in Magento Admin Panel.</li> <li>Consumer secret: Enter the Secret value provided when you created the consumer in Magento Admin Panel.</li> <li>Access token: Enter the <code>oauth\\_token</code> value received when you authenticated the application.</li> <li>Access token secret: Enter the <code>oauth\\_token\\_secret</code> value received when you authenticated the application.</li> </ul> </li> <li>On the OAuth setting tab, define the following options: <ul> <li>Signature Methods: From the drop-down list, select which method will be used for signatures (HMAC-SHA1 or PLAINTEXT).</li> <li>OAuth Version: From the drop-down list, select the 1.0 option (REST API supports OAuth 1.0a).</li> <li>Leave the Realm, OAuth Nonce, and OAuth Timestamp values set by default.</li> </ul> </li> <li> <p>Click Save and wait for the confirmation dialog to close.</p> </li> <li> <p>Return to the Signature for the request tab and select Insert &gt; Insert as header. </p> <p>An authorization header is created on the main page of REST Client.</p> <p> NOTE: Click the header with authorization data and click Auto refresh in the opened pop-up in order to generate new values for <code>oauth\\_nonce</code>, <code>oauth\\_timestamp</code>, and <code>oauth\\_signature</code> at each request. 11.  From the Headers drop-down, select Custom Header.  12.  In the Request Header window, enter \u201cContent-Type\u201d in the Name field and <code>text/xml</code> in the Value field (if you want to use the XML data format). To use the JSON request data format, enter <code>application/json</code> instead of the <code>text/xml</code> value. 13.  Click Okay. </p> </li> </ol> <p>Example: Retrieving the List of Products</p> <ol> <li>From the Method drop-down list, select the GET option.</li> <li>In the URL field, enter the following URL: <code>https://om.ddev.site/api/rest/products</code>. You can limit the number of products returned in the response. To set the limit to 4, enter the following URL: <code>https://om.ddev.site/api/rest/products?limit=4</code></li> <li>Click Send. Information about all products will be displayed in the response body. Example is as follows: </li> </ol>"},{"location":"api/rest/testing_rest_resources/#testing-rest-resources-with-the-advanced-rest-client-for-google-chrome-browser","title":"Testing REST resources with the Advanced REST Client for Google Chrome browser.","text":"<ol> <li>Open the Advanced REST Client Application. </li> <li>In the Headers box, select the Form tab.</li> <li>In the first field, start typing authorization. An Authorization popup appears. Click it. </li> <li>When you click the fields next to the Authorization header, the Construct link appears. Click it to configure OAuth authentication.</li> <li>The Authorization window opens. Select the OAuth tab. </li> <li>In the Type group of options, select the Signed Request option.</li> <li>In the signature method group of options, select which method will be used for signatures (HMAC-SHA1 or PLAINTEXT).</li> <li>Fill in the following data: <ul> <li>Consumer key: Enter the Key value provided when you created the consumer in Magento Admin Panel.</li> <li>Consumer secret: Enter the Secret value provided when you created the consumer in Magento Admin Panel.</li> <li>Access Token: Enter the <code>oauth\\_token</code> value received when you authenticated the application.</li> <li>Access Token Secret: Enter the <code>oauth\\_token\\_secret</code> value received when you authenticated the application.</li> </ul> </li> <li>Click OK. NOTE: Advanced REST Client does not save the Consumer secret and Access Token Secret values. You need to enter these values each time you make a request.</li> <li>In the URL field, enter the URL to which the API call will be performed and select the required HTTP method.</li> <li>In the Headers table, click Add row and add the <code>Accept - application/json</code> or <code>Accept - text/xml</code> header depending on which format you prefer for the returned data.</li> <li>Click Send Request.</li> </ol> <p>Example: Retrieving the list of customers</p> <ol> <li>In the Method group of options, select the GET option.</li> <li>In the URL field, enter the following URL: <code>https://om.ddev.site/api/rest/customers</code>.</li> <li>Click Send request. Information about all customers will be displayed in the response body. Note that only Admin type of the user can retrieve the list of customers. Example is as follows: </li> </ol> <p>Example: Creating a customer address</p> <ol> <li>In the Method group of options, select the POST option.</li> <li>In the URL field, enter the following URL: <code>https://om.ddev.site/api/rest/customers/:id/addresses</code> where the \u201c:id\u201d value is the customer ID in the system.</li> <li>In the Body table, on the Raw input tab, enter the data required for customer address creation.</li> <li>Click Send request. If the address is created, the 200 OK HTTP status code will be returned. Example is as follows: </li> </ol>"},{"location":"api/rest/resources/customers/","title":"Customers","text":""},{"location":"api/rest/resources/customers/#uri-customers","title":"URI: <code>/customers</code>","text":"<p>Allows you to create and retrieve customers.</p> <p>URL Structure: <code>http://om.ddev.site/api/rest/customers</code> Version: 1</p>"},{"location":"api/rest/resources/customers/#http-method-get","title":"HTTP Method GET","text":"<p>Description: Allows you to retrieve the list of existing customers. Notes:: Only Admin user can retrieve the list of customers with all their attributes.</p> <p>Authentication: Admin Default Format: XML Parameters: No Parameters</p> <p>Example</p> <pre><code>GET http://om.ddev.site/api/rest/customers\n</code></pre>"},{"location":"api/rest/resources/customers/#response-body-xml","title":"Response body: XML","text":"<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;data_item&gt;\n        &lt;entity_id&gt;2&lt;/entity_id&gt;\n        &lt;website_id&gt;1&lt;/website_id&gt;\n        &lt;email&gt;test@example.com&lt;/email&gt;\n        &lt;group_id&gt;1&lt;/group_id&gt;\n        &lt;created_at&gt;2012-03-22 14:15:54&lt;/created_at&gt;\n        &lt;disable_auto_group_change&gt;1&lt;/disable_auto_group_change&gt;\n        &lt;firstname&gt;john&lt;/firstname&gt;\n        &lt;lastname&gt;Doe&lt;/lastname&gt;\n        &lt;created_in&gt;Default Store View&lt;/created_in&gt;\n    &lt;/data_item&gt;\n    &lt;data_item&gt;\n        &lt;entity_id&gt;4&lt;/entity_id&gt;\n        &lt;website_id&gt;1&lt;/website_id&gt;\n        &lt;email&gt;earl@example.com&lt;/email&gt;\n        &lt;group_id&gt;1&lt;/group_id&gt;\n        &lt;created_at&gt;2012-03-28 13:54:04&lt;/created_at&gt;\n        &lt;disable_auto_group_change&gt;0&lt;/disable_auto_group_change&gt;\n        &lt;firstname&gt;Earl&lt;/firstname&gt;\n        &lt;lastname&gt;Hickey&lt;/lastname&gt;\n        &lt;created_in&gt;Admin&lt;/created_in&gt;\n    &lt;/data_item&gt;\n&lt;/magento_api&gt;\n</code></pre>"},{"location":"api/rest/resources/customers/#response-body-json","title":"Response body: JSON","text":"<pre><code>{\n    \"2\": {\n        \"entity_id\": \"2\",\n        \"website_id\": \"1\",\n        \"email\": \"test@example.com\",\n        \"group_id\": \"1\",\n        \"created_at\": \"2012-03-22 14:15:54\",\n        \"disable_auto_group_change\": \"1\",\n        \"firstname\": \"john\",\n        \"lastname\": \"Doe\",\n        \"created_in\": \"Admin\",\n        \"prefix\": null,\n        \"suffix\": null,\n        \"taxvat\": null,\n        \"dob\": \"2001-01-03 00:00:00\",\n        \"reward_update_notification\": \"1\",\n        \"reward_warning_notification\": \"1\",\n        \"gender\": \"1\"\n    },\n    \"4\": {\n        \"entity_id\": \"4\",\n        \"website_id\": \"1\",\n        \"email\": \"earl@example.com\",\n        \"group_id\": \"1\",\n        \"created_at\": \"2013-03-28 18:59:41\",\n        \"disable_auto_group_change\": \"0\",\n        \"firstname\": \"Earl\",\n        \"lastname\": \"Hickey\",\n        \"created_in\": \"Admin\",\n        \"prefix\": null,\n        \"suffix\": null,\n        \"taxvat\": null,\n        \"dob\": \"2012-03-28 13:54:04\",\n        \"reward_update_notification\": \"1\",\n        \"reward_warning_notification\": \"1\",\n        \"gender\": \"1\"\n    }\n}\n</code></pre>"},{"location":"api/rest/resources/customers/#http-method-post","title":"HTTP Method POST","text":"<p>Description: Allows you to create a new customer.</p> <p>Authentication: Admin Default Format: XML Parameters:</p> Name Description Required Type Example Value <code>firstname</code> The customer first name required string John <code>lastname</code> The customer last name required string Doe <code>email</code> The customer email address required string john@example.com <code>password</code> The customer password. The password must contain minimum 7 characters required string 123123q <code>website_id</code> Website ID required int 1 <code>group_id</code> Customer group ID required int 1 <code>disable_auto_group_change</code> Defines whether the automatic group change for the customer will be disabled optional int 0 <code>prefix</code> Customer prefix optional string Mr. <code>middlename</code> Customer middle name or initial optional string R. <code>suffix</code> Customer suffix optional string Sr. <code>taxvat</code> Customer Tax or VAT number optional string GB999 9999 73 <p>Notes: The list of parameters may change depending on the attributes settings in Customers &gt; Attributes &gt; Manage Customer Attributes page in Magento Admin Panel. For example, a required status of the middle-name attribute (Middle Name/Initial) may be changed to \u2018YES\u201d. Please note that managing customer attributes is available only in Magento Enterprise Edition.</p> <p>Example</p> <pre><code>POST http://om.ddev.site/api/rest/customers\n</code></pre>"},{"location":"api/rest/resources/customers/#request-body","title":"Request body","text":"<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;firstname&gt;Earl&lt;/firstname&gt;\n    &lt;lastname&gt;Hickey&lt;/lastname&gt;\n    &lt;password&gt;123123q&lt;/password&gt;\n    &lt;email&gt;earl@example.com&lt;/email&gt;\n    &lt;website_id&gt;1&lt;/website_id&gt;\n    &lt;group_id&gt;1&lt;/group_id&gt;\n&lt;/magento_api&gt;\n</code></pre>"},{"location":"api/rest/resources/customers/#response","title":"Response","text":"<p>If the customer was created successfully, we receive Response HTTP Code = 200, empty Response Body and Location header like <code>/api/rest/customers/555</code> where <code>555</code> - an entity id of the new customer.</p>"},{"location":"api/rest/resources/customers/#http-method-put","title":"HTTP Method PUT","text":"<p>Description: Not allowed</p>"},{"location":"api/rest/resources/customers/#http-method-delete","title":"HTTP Method DELETE","text":"<p>Description: Not allowed</p>"},{"location":"api/rest/resources/customers/#uri-customerscustomerid","title":"URI: <code>/customers/:customerId</code>","text":"<p>Allows you to manage existing customers.</p> <p>URL Structure: <code>http://om.ddev.site/api/rest/customers/:customerId</code> Version: 1</p>"},{"location":"api/rest/resources/customers/#http-method-get_1","title":"HTTP Method GET","text":"<p>Description: Allows you to retrieve information on an existing customer. Notes:: The list of attributes that will be returned for customers is configured in the Magento Admin Panel. The Customer user type has access only to his/her own information. Also, Admin can add additional non-system customer attributes by selecting Customers &gt; Attributes &gt; Manage Customer Attributes. If these attributes are set as visible on front-end, they will be returned in the response. Also, custom attributes will be returned in the response only after the customer information is updated in the Magento Admin Panel or the specified custom attribute is updated via API (see the PUT method below). Please note that managing customer attributes is available only in Magento Enterprise Edition.</p> <p>Authentication: Admin, Customer Default Format: XML Parameters: No Parameters</p> <p>Example</p> <pre><code>GET http://om.ddev.site/api/rest/customers/2\n</code></pre> <p>Response body: XML</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;entity_id&gt;2&lt;/entity_id&gt;\n    &lt;website_id&gt;1&lt;/website_id&gt;\n    &lt;email&gt;test@example.com&lt;/email&gt;\n    &lt;group_id&gt;1&lt;/group_id&gt;\n    &lt;created_at&gt;2012-03-22 14:15:54&lt;/created_at&gt;\n    &lt;disable_auto_group_change&gt;1&lt;/disable_auto_group_change&gt;\n    &lt;created_in&gt;Default Store View&lt;/created_in&gt;\n    &lt;firstname&gt;john&lt;/firstname&gt;\n    &lt;lastname&gt;Doe&lt;/lastname&gt;\n    &lt;last_logged_in&gt;2012-03-22 14:15:56&lt;/last_logged_in&gt;\n&lt;/magento_api&gt;\n</code></pre> <p>Response body: JSON</p> <pre><code>{\n    \"entity_id\": \"2\",\n    \"website_id\": \"1\",\n    \"email\": \"test@example.com\",\n    \"group_id\": \"1\",\n    \"created_at\": \"2012-03-22 14:15:54\",\n    \"disable_auto_group_change\": \"1\",\n    \"created_in\": \"English\",\n    \"firstname\": \"john\",\n    \"lastname\": \"Doe\"\n}\n</code></pre>"},{"location":"api/rest/resources/customers/#http-method-post_1","title":"HTTP Method POST","text":"<p>Description: Not allowed.</p>"},{"location":"api/rest/resources/customers/#http-method-put_1","title":"HTTP Method PUT","text":"<p>Description: Allows you to update an existing customer. Notes: The list of attributes that will be updated for customer is configured in the Magento Admin Panel. The Customer user type has access only to his/her own information.</p> <p>Authentication: Admin, Customer Default Format: XML Parameters: You must specify only those parameters which you want to update. Parameters that are not defined in the request body will preserve the previous values. The <code>website_id</code> and <code>created_in</code> attributes are not allowed for updating.</p> <p>Example</p> <pre><code>PUT http://om.ddev.site/api/rest/customers/2\n</code></pre>"},{"location":"api/rest/resources/customers/#request-body_1","title":"Request Body","text":"<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;magento_api&gt;\n    &lt;firstname&gt;Earl&lt;/firstname&gt;\n    &lt;lastname&gt;Hickey&lt;/lastname&gt;\n    &lt;email&gt;customerss@example.com&lt;/email&gt;\n    &lt;group_id&gt;1&lt;/group_id&gt;\n&lt;/magento_api&gt;\n</code></pre>"},{"location":"api/rest/resources/customers/#http-method-delete_1","title":"HTTP Method DELETE","text":"<p>Description: Allows you to delete an existing customer. Notes: Admin only can delete a customer.</p> <p>Authentication: Admin Default Format: XML Parameters: No Parameters</p> <p>Example</p> <pre><code>DELETE https://om.ddev.site/api/rest/customers/2\n</code></pre>"},{"location":"api/rest/resources/products/product_categories/","title":"Product Categories","text":""},{"location":"api/rest/resources/products/product_categories/#uri-productsproductidcategories","title":"URI: <code>/products/productid/categories</code>","text":"<p>Allows you to retrieve information about assigned categories, assign and remove assigned a category from/to a product.</p> <p>URL Structure: <code>https://om.ddev.site/api/rest/products/productid/categories&lt;br&gt;</code> Version: 1</p>"},{"location":"api/rest/resources/products/product_categories/#http-method-get","title":"HTTP Method: GET","text":"<p>Description: Allows you to retrieve information about categories assigned to the specified product.</p> <p>Authentication: Admin, Customer Default Format: JSON Parameters: No Parameters</p> <p>Example</p> <pre><code>GET https://om.ddev.site/api/rest/products/8/categories\n</code></pre>"},{"location":"api/rest/resources/products/product_categories/#response-body","title":"Response Body","text":"<pre><code>{\n    category_id: 8\n}\n</code></pre>"},{"location":"api/rest/resources/products/product_categories/#http-method-post","title":"HTTP Method: POST","text":"<p>Description: Allows you to assign a category to a specified product.</p> <p>Authentication: Admin Default Format: JSON Parameters:</p> Name Description Required Type Example Value category_id The category ID required int 2 <p>Example</p> <pre><code>POST https://om.ddev.site/api/rest/products/8/categories\n</code></pre>"},{"location":"api/rest/resources/products/product_categories/#request-body","title":"Request Body","text":"<pre><code>{\n    \"category_id\":\"2\"\n}\n</code></pre> <p>As a result, the category with ID equal to 2 will be assigned to the specified product.</p>"},{"location":"api/rest/resources/products/product_categories/#uri-productsproductidcategoriescategoryid","title":"URI: <code>/products/productid/categories/categoryid</code>","text":""},{"location":"api/rest/resources/products/product_categories/#http-method-delete","title":"HTTP Method: DELETE","text":"<p>Description: Allows you to remove an assigned category from a specified product.</p> <p>Authentication: Admin Default Format: JSON Parameters: No Parameters</p> <p>Example</p> <pre><code>DELETE https://om.ddev.site/api/rest/products/8/categories/2\n</code></pre>"},{"location":"api/rest/resources/products/product_categories/#http-status-codes","title":"HTTP Status Codes","text":"Status Code Message Description 400 Product  is already assigned to category  The message is returned when the required category is already assigned to the product 400 Category not found The specified category is not found 405 Resource method not implemented yet The specified method is not implemented yet"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2022/08/17/events--observer/","title":"Events &amp; Observer","text":"<p>Quick overview how observers work.</p>","tags":["Events","Debug","Development"]},{"location":"blog/2022/08/17/events--observer/#event-lookup","title":"Event lookup","text":"<p>If you want to add custom logic for <code>customer_login</code> event, add in your <code>config.xml</code>.</p> <p>Example</p> <pre><code>&lt;config&gt;\n    &lt;global&gt;&lt;!-- or adminhtml or frontend --&gt;\n        &lt;events&gt;\n            &lt;customer_login&gt;\n                &lt;observers&gt;\n                    &lt;yourNamespace_yourModule&gt;\n                        &lt;class&gt;yourShortClass/observer&lt;/class&gt;\n                        &lt;method&gt;yourMethod&lt;/method&gt;\n                    &lt;/yourNamespace_yourModule&gt;\n                &lt;/observers&gt;\n            &lt;/customer_login&gt;\n        &lt;/events&gt;\n    &lt;/global&gt;\n&lt;/config&gt;\n</code></pre>","tags":["Events","Debug","Development"]},{"location":"blog/2022/08/17/events--observer/#event-execution","title":"Event execution","text":"<p>And in your <code>Observer.php</code>.</p> <p>Example</p> <pre><code>class YourNamespace_YourModule_Model_Observer\n{\n    // EVENT customer_login\n    public function yourMethod(Varien_Event_Observer $observer)\n    {\n        $customer = $observer-&gt;getData('customer');\n    }\n}\n</code></pre>","tags":["Events","Debug","Development"]},{"location":"blog/2022/08/17/events--observer/#development","title":"Development","text":"<p>For debugging dispatched events, add a <code>xdebug</code> break-point to class <code>Mage</code></p> <p>Tip</p> <pre><code>public static function dispatchEvent($name, array $data = [])\n{\n    Varien_Profiler::start('DISPATCH EVENT:' . $name);\n    $result = self::app()-&gt;dispatchEvent($name, $data);\n    Varien_Profiler::stop('DISPATCH EVENT:' . $name);\n    return $result;\n}\n</code></pre>","tags":["Events","Debug","Development"]},{"location":"blog/2023/01/09/dynamic-block-content/","title":"Dynamic block contents in category page","text":"<p>In Admin &gt; Catalog &gt; Manage Categories, we can configure a category page and put it on the main menu. The page contents are rendered in</p> <p>app\\design\\frontend\\base\\default\\template\\catalog\\category\\view.phtml</p> <p>If we want to render an HTML table in which its data are taken from the database, we would follow these steps:</p>","tags":["CMS blocks"]},{"location":"blog/2023/01/09/dynamic-block-content/#create-custom-block","title":"Create custom block","text":"<ol> <li>Create a custom block <code>mymodule/mytable</code> with template <code>mymodule/mytable.phtml</code>.</li> <li>Whitelist our block for rendering in the front-end: Admin &gt; System &gt; Permissions &gt; Blocks</li> <li>Create a CMS static block: Admin &gt; CMS &gt; Static Blocks and set the Content to render from our block with this directive: <pre><code>{{block type=\"mymodule/mytable\" template=\"mymodule/mytable.phtml\"}}\n</code></pre></li> <li>Create a subcategory: Admin &gt; Catalog &gt; Manage Categories &gt; Add a subcategory and in the Display Settings tab, set the category attribute Display Mode to Static block only and CMS Block pointing to our block.</li> </ol> <p>Voila, the HTML table is rendered under the menu we just created. However, every time the table in the database is updated, and because CMS blocks rendering are taken from the cache, we would need to refresh the cache.</p>","tags":["CMS blocks"]},{"location":"blog/2023/01/09/dynamic-block-content/#render-block-dynamically","title":"Render block dynamically","text":"<p>What if the table is constantly being updated, or there is an expiry condition on some data which shouldn\u2019t be included? In which case, we would want to render the HTML table dynamically. It\u2019s actually quite easy to do:</p> <ol> <li>In the subcategory page in back-end, set the Description to this: <pre><code>{{block type=\"mymodule/mytable\" template=\"mymodule/mytable.phtml\"}}\n</code></pre></li> <li>Continue on to the Display Settings tab and set the CMS Block to Please select a static block \u2026.</li> <li>In our configuration file, either in the module <code>etc/config.xml</code> or in the <code>local.xml</code>, insert the following:</li> </ol> <pre><code>&lt;config&gt;\n    &lt;global&gt;\n        &lt;catalog&gt;\n            &lt;content&gt;\n                &lt;tempate_filter&gt;cms/template_filter&lt;/tempate_filter&gt; &lt;!-- Note the typo on template must remain as \"tempate\". --&gt;\n            &lt;/content&gt;\n        &lt;/catalog&gt;\n    &lt;/global&gt;\n&lt;/config&gt;\n</code></pre> <p>That\u2019s it, the table is now rendered dynamically. There \u2018s no need to create the CMS static block.</p>","tags":["CMS blocks"]},{"location":"blog/2023/08/17/customize-your-openmage/","title":"Customize Your OpenMage","text":"<p>When working on OpenMage or any complex PHP project, you might come across issues that require patches to be applied to third-party packages or libraries. These patches may be fixes or features for core code that you need to use immediately but have not yet been merged or formally released for any number of reasons.</p> <p>In this blog post, we\u2019ll explore the benefits of using privately maintained patches and how to use Composer and the <code>cweagans/composer-patches</code> dependency to maintain your own set of patches as well as how to generate patches.</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#benefits-of-privately-maintained-patches","title":"Benefits of Privately Maintained Patches","text":"<ol> <li>Customization - Customize third-party packages or libraries to meet the specific needs of your project. This is especially useful if you need to modify functionality that is impossible to do without modifying core code or fix bugs that are not yet addressed by the package maintainers.</li> <li>Security - By maintaining your own patches, you can ensure that any security vulnerabilities are addressed as soon as they are discovered, without having to wait for the package maintainers to release an update.</li> <li>Maintainability - Privately maintained patches can help ensure your patches are organized and automatically re-applied to the core code so they don\u2019t get accidentally clobbered when updating project dependencies.</li> </ol>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#using-composer-and-cweaganscomposer-patches-dependency","title":"Using Composer and <code>cweagans/composer-patches</code> Dependency","text":"<p>Composer is a dependency manager for PHP that allows you to easily manage third-party packages and libraries in your project. However, using the <code>cweagans/composer-patches</code> package (documentation here) you can also have Composer apply private patches over public dependencies. You simply define the patches in your <code>composer.json</code> file and they will be automatically applied to the packages or libraries that you specify when a Composer updates dependencies (<code>install</code> or <code>update</code>).</p> <p>Here\u2019s an example <code>composer.json</code> file with a patch defined:</p> <pre><code>{\n  \"require\": {\n    \"vendor/package\": \"1.0.0\"\n  },\n  \"extra\": {\n    \"patches\": {\n      \"vendor/package\": {\n        \"Fix Bug #1234\": \"patches/fix-bug-1234.patch\"\n      }\n    }\n  }\n}\n</code></pre> <p>In this example, we\u2019re requiring the <code>vendor/package</code> package at version <code>1.0.0</code>, and applying a patch named \u201cFix Bug #1234\u201d located in the <code>patches/fix-bug-1234.patch</code> file.</p> <p>To apply the patch, simply run <code>composer update</code> and Composer will apply the patch and maintain the state of whether the patch has been applied or not.</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#generating-patch-files","title":"Generating patch files","text":"<p>There are many ways to do this, but here are a few common ones:</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#github-pull-requests","title":"GitHub Pull Requests","text":"<p>If a GitHub PR already contains the code changes you need, simply download a patch file from GitHub by appending <code>.patch</code> to the PR URL. You gotta love GitHub!</p> <p>For example, the patch URL for PR #3146 is: <code>https://github.com/OpenMage/magento-lts/pull/3146.patch</code>. This URL will result in a redirect so download it with your browser or a client that follows redirects (Location header) such as <code>wget</code> or <code>curl -L</code>.</p> <pre><code>mkdir -p patches\necho -e \"Order deny,allow\\nDeny from all\\n\" &gt; patches/.htaccess\ncurl -L https://github.com/OpenMage/magento-lts/pull/3146.patch -o var/patches/3146_Add-form-key-validation-to-Contacts-form.patch\n</code></pre> <p>Note, you can also have the patch downloaded at runtime by defining it as a URL instead of a local path.</p> <pre><code>{\n  \"...\": \"...\",\n  \"extra\": {\n    \"patches\": {\n      \"openmage/magento-lts\": {\n        \"Added form key validation to Contacts form #3146\": \"https://github.com/OpenMage/magento-lts/pull/3146.patch\"\n      }\n    }\n  }\n}\n</code></pre> <p>If it doesn\u2019t apply cleanly, apply the patch using <code>git apply</code> and fix the conflicts and then output the changes as a local patch file using one of the methods below.</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#symplifyvendor-patches","title":"<code>symplify/vendor-patches</code>","text":"<p>If you are using OpenMage as a project dependency, you can use <code>symplify/vendor-patches</code> to generate a patch file easily. This tool automatically updates your <code>composer.json</code> for you. Note, in the case of modifying OpenMage core code installed as a project dependency you will need to modify the files in the \u201cvendor\u201d directory rather than the <code>magento-root-dir</code> directory (e.g. <code>htdocs</code>).</p> <p>Here is an example generating patches for <code>app/Mage.php</code>:</p> <pre><code>composer require symplify/vendor-patches --dev\ncp vendor/app/Mage.php vendor/app/Mage.php.old\n# modify app/Mage.php to your liking\nvendor/bin/vendor-patches generate\ncomposer install\n</code></pre>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#git-with-dirty-working-copy","title":"Git with dirty working copy","text":"<p>If you have local changes on a git working copy you can simply use <code>git diff &gt; patches/my-changes.patch</code>.</p> <p>Use <code>git diff --cached</code> instead to export just the staged changes.</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#git-commits","title":"Git commits","text":"<p>You can generate a patch from a branch or commit or range of commits using <code>git format-patch</code> or <code>git diff</code>. See the <code>--help</code> usage for more info but here are some examples:</p> <p>To get a single patch with the changes from the <code>some-feature</code> branch:</p> <pre><code>git format-patch origin/main...some-feature --stdout &gt; patches/some-feature.patch\n</code></pre> <p>Notice the three <code>...</code> which gets all changes as one patch. If you used <code>..</code> you would get one file per commit.</p> <p>Use <code>git show &lt;commit&gt;</code> to show a single commit or <code>git diff &lt;base&gt;...&lt;commit&gt;</code> to get all changes between two commits. Consult the internet for more info.</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2023/08/17/customize-your-openmage/#testing-patches","title":"Testing patches","text":"<p>Use <code>git apply</code> or <code>patch</code> to test applying the patches to your working copy or just go for it with <code>composer install</code>.</p> <p>Use <code>composer update --lock</code> to save the state of the applied patches to your <code>composer.lock</code> file.</p> <p>Give it a try and see how privately maintained patches can benefit your project!</p>","tags":["Composer","Patches","Vendor"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/","title":"Test Environment for OpenMage in Windows 10 Based on DDEV","text":"<p>This guide will be updated frequently.</p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#important","title":"IMPORTANT","text":"<p>If you run Windows OS in a virtual machine, it is mandatory to activate the virtualization option. For example, in VMware with the virtual machine off, access <code>Edit virtual machine settings</code>. In the <code>Hardware</code> tab select <code>Processors</code> and in the <code>Virtualization engine</code> section check the <code>Virtualize Intel VT-x/EPT or AMD-V/RVI</code> option.</p> <p>You need at least 8 GB of memory to run (Docker + PhpStorm) decent. I recommend a machine with 16 GB.</p> <p></p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-installing-the-windows-terminal-application","title":"(Windows) Installing the Windows Terminal Application","text":"<ol> <li>Open the <code>Microsoft Store</code> application and search for <code>Windows Terminal</code></li> <li>Choose the first result then press the <code>Get</code> button</li> </ol> <p>If you use PhpStorm, at the bottom there is a tab called <code>Terminal</code>. Here you can run commands in the Linux distribution too.</p> <p></p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-installing-wsl2-windows-subsystem-for-linux-2","title":"(Windows) Installing WSL2 (Windows Subsystem for Linux 2)","text":"<p>The Installation Tutorial</p> <p>Read: How to install WSL on Windows 10 (2024)</p> <p>Useful Commands</p> <p>See: Windows Subsystem for Linux Documentation</p> <pre><code>wsl --install\nwsl --version\nwsl --update\nwsl --list --online\nwsl --install -d DISTRO-NAME\nwsl --set-version &lt;distro name&gt; 2\n</code></pre> <p>Advanced Settings</p> <p>See: Advanced settings configuration in WSL</p> <p>You can configure limits on the memory, CPU and swap size allocated to WSL 2 in a <code>.wslconfig</code> file\u2060. For example, create a file named <code>.wslconfig</code> in the <code>C:\\Users\\&lt;User Name&gt;</code> directory with the following content</p> <pre><code>[wsl2]\nmemory=4GB   # Limits VM memory in WSL 2 up to 4 GB\nprocessors=6 \n</code></pre>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-installing-a-linux-distribution","title":"(Windows) Installing a Linux Distribution","text":"<p>Variant 1 1.  Open the <code>Command Prompt</code> application as Administrator 2. Get the distributions list <code>wsl --list --online</code> 3. Install a distribution <code>wsl --install -d Ubuntu-20.04</code> 4. Reboot the system</p> <p>Variant 2 1.  Open the <code>Microsoft Store</code> application and search for Ubuntu 2. Install an LTS version, for example Ubuntu 20.04.6 LTS 3. Reboot the system</p> <p>Open the <code>Terminal</code> application then choose a new tab with Ubuntu. Follow the steps to complete the installation, setting the <code>username</code> and <code>password</code> (e.g. <code>admin</code> / <code>veryl0ngpassw0rd</code>).</p> <p></p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-installing-docker","title":"(Windows) Installing Docker","text":"<p>See: Install Docker Desktop on Windows</p> <ol> <li>Download the installation file <code>Docker Desktop Installer.exe</code> and run it as Administrator</li> <li>During installation check the option <code>Use WSL 2 instead of Hyper-V (recommended)</code></li> <li>Reboot the system</li> </ol>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-installing-mkcert-for-secured-connections","title":"(Windows) Installing <code>mkcert</code> for Secured Connections","text":"<ul> <li> <p>GitHub repository</p> </li> <li> <p>Download the latest Windows release</p> </li> <li>Open the <code>Terminal</code> application as Administrator</li> <li>Go to the directory where you downloaded the executable file named <code>mkcert-vX.X.X-windows-amd64.exe</code></li> <li>Run <code>mkcert-vX.X.X-windows-amd64.exe --install</code></li> <li>In the popup window, where you are asked if you want to install the certificate, press <code>Yes</code></li> </ul>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-linux-distribution-drive-mapping","title":"(Windows) Linux distribution drive mapping","text":"<ol> <li>Open the <code>Windows Explorer</code> application</li> <li>On the left side open the <code>Linux</code> path and select <code>Ubuntu-20.04</code></li> <li>Right-click and select <code>Map network drive...</code> from the menu. Choose a letter, for example Z:</li> </ol> <p>From now on it appears in the <code>This PC</code> section under <code>Network locations</code>. If you want to disconnect it, right-click and select <code>Disconnect</code> from the menu.</p> <p></p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#windows-phpstorm","title":"(Windows) PhpStorm","text":"<p>Create a new project in PhpStorm that has the location where you cloned the OpenMage repository. If you log in to your GitHub account, you will see in the <code>Pull Request</code> tab on the left the open pull-requests from OpenMage. Open one and checkout to start testing. When you are done, at the bottom of the PhpStorm window you will see the <code>Git</code> tab. Click on it, then right click on <code>Local &gt; main</code> and select <code>Checkout</code>. You can update the repositories, locals and remotes, from time to time and more.</p> <p></p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#linux-installing-ddev","title":"(Linux) Installing DDEV","text":"<ol> <li>Open the <code>Terminal</code> application and choose a new tab with Ubuntu.</li> <li>Bring all the packages up to date Ubuntu <code>sudo apt update &amp;&amp; sudo apt upgrade -y</code>.</li> <li>Install DDEV according to the instructions.</li> </ol>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#linux-copying-mkcert-certificates-from-windows-to-linux","title":"(Linux) Copying mkcert Certificates from Windows to Linux","text":"<p>Variant 1 1. Open the <code>Terminal</code> application and choose a new tab with Ubuntu 2. Create the path  <code>mkdir -p /home/&lt;user_name/.local/share/mkcert</code> 3. Run <code>cp /mnt/c/Users/&lt;User Name&gt;/AppData/Local/mkcert/* /home/&lt;user_name&gt;/.local//share/mkcert/</code></p> <p>Variant 2 1. Run the <code>Windows Explorer</code> application as administrator 2. Copy the files <code>rootCA.pem</code> and <code>rootCA-key.pem</code> from <code>C:\\Users\\&lt;User Name&gt;\\AppData\\Local\\mkcert</code> 3. Create the path in Linux &gt; Ubuntu-20.04 <code>/home/&lt;user_name/.local/share/mkcert</code> 4. Paste them in the <code>mkcert</code> directory</p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#linux-installing-openmage","title":"(Linux) Installing OpenMage","text":"<p>First make sure that the <code>Docker Desktop</code> application is running in Windows.</p> <ol> <li>Open the <code>Terminal</code> application and choose a new tab with Ubuntu</li> <li>Create the path <code>mkdir -p /home/&lt;user_name&gt;/openmage</code></li> <li>Clone the OpenMage repository <code>git clone https://github.com/OpenMage/magento-lts.git /home/&lt;user_name&gt;/openmage</code></li> <li>Go to the directory <code>/home/&lt;user_name&gt;/openmage</code></li> <li>Run the following DDEV commands. The first command configures the project, the second installs OpenMage dependencies, the third installs Magento Sample Data.</li> </ol> <pre><code>ddev config\nddev composer install\nddev openmage-install -s -k\n</code></pre> <ol> <li>Edit the <code>.ddev/config.yaml</code> file to change the web-server and PHP version as you want. I am using Apache and PHP 8.3</li> </ol> <pre><code>php_version: \"8.3\"\nwebserver_type: apache-fpm\n</code></pre> <ol> <li>Run the following DDEV commands to load the project in the browser window with a secured connection</li> </ol> <pre><code>ddev start\nddev launch\n</code></pre> <p>For more information about using DDEV please visit help page. It is a fantastic tool!</p>","tags":["DDEV","Windows 10"]},{"location":"blog/2024/08/17/test-environment-for-openmage-in-windows-10-based-on-ddev/#conclusion","title":"CONCLUSION","text":"<p>As you can see, the more complicated part is the initial configuration of WSL, Docker, DDEV. Once done, it doesn\u2019t take more than 3-5 minutes to get an instance of OpenMage ready for testing. Forget about XAMPP, WAMP in Windows.</p> <p>You can use a test environment in Windows without WSL2, but I do not recommend this configuration because DDEV must be installed in Windows and not inside the Linux distribution. It depends on Mutagen and it is very very slow. Testing in a Linux distribution has many advantages and it is close to moving the project into production.</p>","tags":["DDEV","Windows 10"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/","title":"Brief Guide on Grid Column","text":"<p>The Grid Column system in OpenMage provides a powerful way to create and customize admin grid interfaces. Grid columns are essential components of the admin panel that display data in a tabular format, allowing for sorting, filtering, copying, formatting, and other operations on the data. This guide explains how to work with grid columns using the <code>Mage_Adminhtml_Block_Widget_Grid_Column</code> class, see source code.</p>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#understanding-the-addcolumn-method","title":"Understanding the <code>addColumn()</code> Method","text":"<p>The <code>addColumn()</code> method is the primary way to add columns to a grid in OpenMage. See code here.</p>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#parameters","title":"Parameters:","text":"<ol> <li><code>$columnId</code> (string): A unique identifier for the column. This ID is used to reference the column elsewhere in the code.</li> <li><code>$column</code> (array): An array of column attributes that define the column\u2019s behavior and appearance.</li> </ol>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#column-attributes","title":"Column Attributes","text":"<p>The <code>$column</code> parameter accepts various attributes that determine how the column behaves and appears in the grid. It is used to set the data in the class <code>Mage_Adminhtml_Block_Widget_Grid_Column</code>. Here are the most commonly used attributes:</p>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#basic-attributes","title":"Basic Attributes:","text":"<ul> <li><code>header</code>: The text displayed in the column header</li> <li><code>index</code>: The field name from the collection that provides the data for this column, if missing, it is default to <code>$columnId</code></li> <li><code>width</code>: The width of the column (in pixels or percentage), if missing, the width is auto adjusted</li> <li><code>type</code>: The column type (e.g., <code>text</code>, <code>number</code>, <code>date</code>, <code>options</code>, etc.), if missing, it is default to <code>text</code></li> </ul>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#common-column-types","title":"Common Column Types","text":"<p>The \u2018type\u2019 attribute defines the column type. Some common types are:</p> <ul> <li><code>text</code>: Simple text display</li> <li><code>number</code>: Numeric values with optional formatting</li> <li><code>price</code>: Price values with currency formatting</li> <li><code>date</code>: Date values</li> <li><code>datetime</code>: Date and time values</li> <li><code>options</code>: Drop-down selection with predefined options</li> <li><code>action</code>: Column with action buttons</li> <li><code>longtext</code>: Text that may be truncated with a \u201cmore\u201d link</li> </ul> <p>For a complete list, see this folder.</p>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#functionality-attributes","title":"Functionality Attributes:","text":"<ul> <li><code>sortable</code>: (bool) Whether the column can be sorted</li> <li><code>filter</code>: (bool) Whether the column can be filtered</li> <li><code>copyable</code>: (bool) Whether the column\u2019s content can be copied to clipboard</li> <li><code>filter_index</code>: The database field to use for filtering (useful when \u2018index\u2019 is a calculated field)</li> <li><code>renderer</code>: A custom render class for the column</li> <li><code>filter_condition_callback</code>: A callback function for custom filtering logic</li> <li><code>no_link</code>: (bool) Prevents rendering links in the column</li> </ul>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#data-formatting-attributes","title":"Data Formatting Attributes:","text":"<ul> <li><code>align</code>: Text alignment within the column (<code>left</code>, <code>center</code>, <code>right</code>)</li> <li><code>frame_callback</code>: A callback function to format the column\u2019s data</li> <li><code>column_css_class</code>: Add additional CSS classes</li> </ul>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#attributes-specific-to-column-types","title":"Attributes Specific to Column Types","text":"<p>There are attributes that are applied to specific column types:</p> <ul> <li><code>actions</code>: Array of actions for an <code>actions</code> column type</li> <li><code>options</code>: Array of options for an <code>options</code> column type</li> <li><code>format</code>: Format for date/time column types</li> <li><code>nl2br</code>: (bool) Whether to convert newlines to <code>&lt;br&gt;</code> tags for a <code>longtext</code> column type</li> </ul>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#example-usage","title":"Example Usage","text":"<p>Here\u2019s a basic example of adding columns to a grid:</p> <pre><code>protected function _prepareColumns()\n{\n    $this-&gt;addColumn('entity_id', [\n        'header'    =&gt; $this-&gt;__('ID'),\n        'align'     =&gt; 'right',\n        'width'     =&gt; '50px',\n        'index'     =&gt; 'entity_id',\n        'type'      =&gt; 'number',\n        'sortable'  =&gt; true,\n    ]);\n\n    $this-&gt;addColumn('name', [\n        'header'    =&gt; $this-&gt;__('Name'),\n        'index'     =&gt; 'name',\n        'type'      =&gt; 'text',\n        'copyable'  =&gt; true,\n    ]);\n\n    $this-&gt;addColumn('created_at', [\n        'header'    =&gt; $this-&gt;__('Created At'),\n        'index'     =&gt; 'created_at',\n        'type'      =&gt; 'datetime',\n        'filter'    =&gt; true,\n        'sortable'  =&gt; true,\n    ]);\n\n    $this-&gt;addColumn('status', [\n        'header'    =&gt; $this-&gt;__('Status'),\n        'index'     =&gt; 'status',\n        'type'      =&gt; 'options',\n        'options'   =&gt; [\n            1 =&gt; 'Enabled',\n            0 =&gt; 'Disabled',\n        ],\n    ]);\n\n    return parent::_prepareColumns();\n}\n</code></pre>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#advanced-usage-custom-render-and-filter-classes","title":"Advanced Usage: Custom Render and Filter classes","text":"<p>For more complex column requirements, you can create custom render and filter classes:</p> <pre><code>$this-&gt;addColumn('custom_field', [\n    'header'    =&gt; $this-&gt;__('Custom Field'),\n    'renderer'  =&gt; 'Namespace_Module_Block_Adminhtml_Grid_Renderer_Custom',\n    'filter'    =&gt; 'Namespace_Module_Block_Adminhtml_Grid_Filter_Custom',\n]);\n</code></pre> <p>The render and filter classes are reusable for other grids. If there is no such need, you can use the callback attributes:</p> <pre><code>// in addColumn()\n    'frame_callback' =&gt; [$this, '_decorateUserUpdatedAt'],\n    'filter_condition_callback' =&gt; [$this, '_findInSet'],\n// more code\n\n/**\n * @param string $value\n * @param Varien_Object $row\n * @param Mage_Adminhtml_Block_Widget_Grid_Column $column\n * @param bool $isExport\n * @return string\n */\nprotected function _decorateUserUpdatedAt($value, $row, $column, $isExport)\n{\n    if (!$isExport) {\n        return $value &gt; $row-&gt;getAdminUpdatedAt())\n            ? '&lt;strong&gt;&lt;span class=\"not-available\"&gt;' . $value . '&lt;/span&gt;&lt;/strong&gt;'\n            : '&lt;span class=\"available\"&gt;' . $value . '&lt;/span&gt;';\n    }\n\n    return $value;\n}\n\n/**\n * @param Varien_Data_Collection_Db $collection\n * @param Mage_Adminhtml_Block_Widget_Grid_Column $column\n * @return void\n */\nprotected function _findInSet($collection, $column)\n{\n    if ($value = $column-&gt;getFilter()-&gt;getValue()) {\n        $collection-&gt;addFieldToFilter('apply_to', ['finset' =&gt; $value]);\n    }\n}\n</code></pre>","tags":["Grid","Column"]},{"location":"blog/2025/03/11/brief-guide-on-grid-column/#conclusion","title":"Conclusion","text":"<p>The Grid Column system in OpenMage provides a flexible and powerful way to display and manipulate data in the admin panel. By understanding the various attributes and options available, you can create highly customized and functional grid interfaces for your admin users.</p>","tags":["Grid","Column"]},{"location":"blog/2019/12/09/release-v1940/","title":"New Release 19.4.0","text":"<p>We are happy to announce the first independent Release of OpenMage. To avoid confusion with past and future Magento Releases, we are starting with the Version 19.4.0 <sup>1</sup>.</p> <p>On the one side this reflects that we include everything from Magento 1.9.4.3 On the other side, it reflects our intent, to base the Major Version on the current year.</p> <p>This Release does not yet contain all changes needed to properly support PHP 7.4 as they are still in the Review, but they should be ready with the next release.</p> <p>The Version 19 will be an LTS Version with indefinite Lifetime, but at least 5 Years. It will ensure a maximum on backwards compatibility to Magento 1.</p> <p>The next LTS version will be released in the beginning of 2023 and be version 23 and have again 5 years of lifetime. Besides this, we will have a yearly major release with around 2 years of lifetime for the Users, who want to try out new Features earlier.</p> <ol> <li> <p>Release v19.4.0 \u21a9</p> </li> </ol>"},{"location":"blog/2020/01/30/release-v1941/","title":"New Release 19.4.1","text":"<p>Include the Magento Release 1.9.4.4 <sup>1</sup></p>"},{"location":"blog/2020/01/30/release-v1941/#change-log","title":"Change-log:","text":"<ul> <li>Default setting for <code>validate_formkey_checkout</code> to <code>1</code> (only affects new installations) (#871)</li> <li>Add <code>.gitignore</code> to <code>/var/</code> (#870)</li> <li>remove outdated Undo <code>MagicQuotes</code> function (#856)</li> <li>remove deprecated function calls in <code>Mage_Adminhtml</code> (#863)</li> <li>Add <code>created_at</code> and <code>updated_at</code> to all relevant REST API resources (#804)</li> <li>Add missing method to category collection class (#884)</li> <li>Add test method to cache models and fix layout update use of test method (#883)</li> <li>Adding <code>'display=swap'</code> to default RWD Google Font (#886)</li> <li>fix PHP syntax error in <code>app/design/frontend/rwd/default/template/email/catalog/product/list.phtml</code> (#888)</li> <li>Replaced deprecated each in <code>getAttributeRawValue()</code> (#885)</li> <li>Add missing EU country (HR) to initial configuration (#842)</li> <li>correct argument order of <code>implode</code> calls (#857)</li> <li>Array and string offset access syntax with curly braces is deprecated (#859)</li> </ul> <ol> <li> <p>Release v19.4.1 \u21a9</p> </li> </ol>"},{"location":"blog/2020/05/10/release-v1942/","title":"New Release 19.4.2","text":"<p>Placeholder for the change-log <sup>1</sup></p>"},{"location":"blog/2020/05/10/release-v1942/#change-log","title":"Change-log:","text":"<ul> <li>Fix removing coupon from cart (#656)</li> <li>Remove <code>memory_limit</code> in <code>.htaccess</code> (#625)</li> <li>Removed ES6 JS introduced in 1.9.4.4 for IE compatibility (#895)</li> <li>Update <code>.htaccess</code> (<code>mod_expires</code> headers for common file types) (#876)</li> <li>Insert white-space in class name for styling to work. (fix follow up from #594 Remove white-space in <code>addBodyClass($className)</code>) (#898)</li> <li>Typo in data type (doc block change) (#905)</li> <li>unused variable cleanup (#910)</li> <li>Send order and agreement variables to the view (#930)</li> <li>allow (JSON-)string for <code>Mage_HTTP_Client_Curl::makeRequest()</code> <code>$params</code> parameter (#913)</li> <li>Do not emit warning on null byte in <code>$src</code> in <code>io_file</code> (#912)</li> <li>Do not sum columns with undefined total function (#916)</li> <li>Add runtime cache to <code>Zend_Locale_Data</code> (#918)</li> <li>painful protection in <code>Subtotal.php</code> (#650)</li> <li>Fix warning \u201cWarning: A non-numeric value encountered\u201d in <code>Mage_Model_Url</code> (#933)</li> <li>[Bug] <code>Mage_Customer_Model_Convert_Parser_Customer::parse()</code> / Fixes undefined variable (#712) (#729)</li> <li>Update VIES VAT validation SOAP endpoint (#937)</li> </ul> <ol> <li> <p>Release v19.4.2 \u21a9</p> </li> </ol>"},{"location":"blog/2020/05/11/release-v1943/","title":"New Release 19.4.3","text":"<p>Include the Magento Release 1.9.4.5 <sup>1</sup></p> <ol> <li> <p>Release v19.4.3 \u21a9</p> </li> </ol>"},{"location":"blog/2020/06/28/release-v1944-and-v2000/","title":"New Release 19.4.4 and 20.0.0","text":"<p>Include the Magento Patch <code>SUPEE-11346</code> <sup>1</sup> <sup>2</sup> <sup>3</sup></p> <ol> <li> <p>Release v19.4.4 \u21a9</p> </li> <li> <p>Release v20.0.0 \u21a9</p> </li> <li> <p>SUPEE-11346 - potential problems? \u21a9</p> </li> </ol>"},{"location":"blog/2020/07/07/release-v1945-and-v2001/","title":"New Release 19.4.5 and 20.0.1","text":"<p>Merged changes from v19.4.5 <sup>1</sup> <sup>2</sup></p> <ol> <li> <p>Release v19.4.5 \u21a9</p> </li> <li> <p>Release v20.0.1 \u21a9</p> </li> </ol>"},{"location":"blog/2020/08/18/release-v1946-and-v2002/","title":"New Release 19.4.6 and 20.0.2","text":"<p>Our Release Today marks a new and Important Milestone for the OpenMage Project. Not even 2 Months since the end of life for Magento 1, we are now shipping the first Security Patch, which is not included in the official Magento 1 Release.</p> <p>The Patch is shipped as part of our new released Versions 19.4.6 <sup>1</sup> and 20.0.2 <sup>2</sup>.</p> <p>The CVE for the related vulnerability is CVE-2020-15151 <sup>3</sup>, and we had a little help here from Adobe, as they fixed a comparable vulnerability in Magento2 with their latest release. While having your attention, let me also make you aware of our process to submit security vulnerabilities, which can be found at SECURITY.md</p> <p>Also, a big Thank You to the hosting providers who work together with us and support us in finding and solving security related Issues.</p> <ol> <li> <p>Release v19.4.6 \u21a9</p> </li> <li> <p>Release v20.0.2 \u21a9</p> </li> <li> <p>Security advisory GHSA-crf2-xm6x-46p6 \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2020/09/15/release-v1947-and-v2003/","title":"New Release 19.4.7 and 20.0.3","text":"<p>Placeholder for the change <sup>1</sup> <sup>2</sup></p> <ol> <li> <p>Release v19.4.7 \u21a9</p> </li> <li> <p>Release v20.0.3 \u21a9</p> </li> </ol>"},{"location":"blog/2020/10/20/release-v1948-and-v2004/","title":"New Release 19.4.8 and 20.0.4","text":"<p>CVE-2020-15244 <sup>3</sup> is our second OpenMage CVE and our first CVE that is wholly independent of Adobe! <sup>1</sup> <sup>2</sup></p> <p>This vulnerability was disclosed to us privately from a community member via our HackerOne program and patched in versions 19.4.8 and 20.0.4. Please update to one of these version to receive the patch.</p> <p>A big thanks to Luke Rogers for submitting the report!</p> <ol> <li> <p>Release v19.4.8 \u21a9</p> </li> <li> <p>Release v20.0.4 \u21a9</p> </li> <li> <p>Security advisory GHSA-jrgf-vfw2-hj26 \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2020/12/29/release-v1949-and-v2005/","title":"New Release 19.4.9 and 20.0.5","text":"<p>Increase <code>composer.json</code> PHP version range to include 8.0 <sup>1</sup> <sup>2</sup></p> <ol> <li> <p>Release v19.4.9 \u21a9</p> </li> <li> <p>Release v20.0.5 \u21a9</p> </li> </ol>"},{"location":"blog/2021/01/19/release-v19410-and-v2006/","title":"New Release 19.4.10 and 20.0.6","text":"<p>Placeholder for the change <sup>1</sup> <sup>2</sup></p> <ul> <li>CVE-2020-15244 <sup>3</sup> CMS Editor code execution</li> <li>CVE-2020-26285 <sup>4</sup> Widget instances allows a hacker to inject an executable file on the server</li> <li>CVE-2020-26252 <sup>5</sup> Layout XML RCE Vulnerability</li> </ul> <ol> <li> <p>Release v19.4.10 \u21a9</p> </li> <li> <p>Release v20.0.6 \u21a9</p> </li> <li> <p>Security advisory GHSA-jrgf-vfw2-hj26 \u21a9</p> </li> <li> <p>Security advisory GHSA-hj6w-xrv3-wjj9 \u21a9</p> </li> <li> <p>Security advisory GHSA-99m6-r53j-4hh2 \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2021/02/14/release-v19411-and-v2007/","title":"New Release 19.4.11 and 20.0.7","text":"<p>Placeholder for the change <sup>1</sup> <sup>2</sup></p> <ol> <li> <p>Release v19.4.11 \u21a9</p> </li> <li> <p>Release v20.0.7 \u21a9</p> </li> </ol>"},{"location":"blog/2021/04/06/release-v19412-and-v2008/","title":"New Release 19.4.12 and 20.0.8","text":"<p>Placeholder for the change <sup>1</sup> <sup>2</sup></p> <ol> <li> <p>Release v19.4.12 \u21a9</p> </li> <li> <p>Release v20.0.8 \u21a9</p> </li> </ol>"},{"location":"blog/2021/04/20/release-v19413-and-v20010/","title":"New Release 19.4.13 and 20.0.10","text":"<p>Placeholder for the change <sup>1</sup> <sup>2</sup></p> <ul> <li>CVE-2021-21426 <sup>3</sup>- Fixing a bug in Zend Framework\u2019s Stream HTTP Wrapper</li> <li>CVE-2021-21427 <sup>4</sup> - Security Update for SQL-injection for Magento 2 (a back-port of CVE-2021-3007 of <code>laminas-http</code>)</li> </ul> <ol> <li> <p>Release v19.4.13 \u21a9</p> </li> <li> <p>Release v20.0.10 \u21a9</p> </li> <li> <p>Security advisory GHSA-m496-x567-f98c \u21a9</p> </li> <li> <p>Security advisory GHSA-fvrf-9428-527m \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2021/06/25/release-v19414-and-v20012/","title":"New Release 19.4.14 and 20.0.12","text":"<p>Placeholder for the change <sup>1</sup> <sup>2</sup></p> <ol> <li> <p>Release v19.4.14 \u21a9</p> </li> <li> <p>Release v20.0.12 \u21a9</p> </li> </ol>"},{"location":"blog/2021/08/27/release-v19415-and-v20013/","title":"New Release 19.4.15 and 20.0.13","text":"<p>With the release of OpenMage 19.4.15 <sup>1</sup> and 20.0.13 <sup>2</sup>, the system is now fully compatible with PHP 8.</p> <p>The releases also include over 40 improvements from the last two months. In addition, two security vulnerabilities have been closed with the patches CVE-2021-32758 <sup>3</sup> and CVE-2021-32759 <sup>4</sup>.</p> <ol> <li> <p>Release v19.4.15 \u21a9</p> </li> <li> <p>Release v20.0.13 \u21a9</p> </li> <li> <p>Security advisory GHSA-26rr-v2j2-25fh \u21a9</p> </li> <li> <p>Security advisory GHSA-xm9f-vxmx-4m58 \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2022/05/19/release-v19416-and-v20014/","title":"New Release 19.4.16 and 20.0.14","text":"<p>With the release of OpenMage 19.4.16 <sup>1</sup> and 20.0.14 <sup>2</sup>, the system was further prepared for compatibility with PHP 8.1.</p> <p>The releases also include dozens of fixes and improvements from the last months.</p> <ol> <li> <p>Release v19.4.16 \u21a9</p> </li> <li> <p>Release v20.0.14 \u21a9</p> </li> </ol>"},{"location":"blog/2022/08/02/release-v19417-and-v20015/","title":"New Release 19.4.17 and 20.0.15","text":"","tags":["WSDL"]},{"location":"blog/2022/08/02/release-v19417-and-v20015/#important-things-you-should-check-before-upgrading","title":"Important things you should check before upgrading","text":"<p>With the release of OpenMage 19.4.17 <sup>1</sup> and 20.0.15 <sup>2</sup>, <code>targetNamespace</code> changed for of all the WSDL files (used in the API modules), from <code>Magento</code> to <code>OpenMage</code>.</p> <p>If your custom modules extends OpenMage API with a custom WSDL file and there are some hard-coded <code>targetNamespace=\"urn:Magento\"</code> string, your API may stop working.</p> <p>Please replace all occurrences of <code>targetNamespace=\"urn:Magento\"</code> with <code>targetNamespace=\"urn:OpenMage\"</code> (or alternatively <code>targetNamespace=\"urn:{{var wsdl.name}}\"</code>) to avoid any problem.</p> <p>To find which files need the modification you can run from the root directory of your project:</p> <pre><code>grep -rn 'urn:Magento' --include \\*.xml\n</code></pre> <ol> <li> <p>Release v19.4.17 \u21a9</p> </li> <li> <p>Release v20.0.15 \u21a9</p> </li> </ol>","tags":["WSDL"]},{"location":"blog/2022/09/04/release-v19418-and-v20016/","title":"New Release 19.4.18 and 20.0.16","text":"<p>This is a bug-fix release <sup>1</sup> <sup>2</sup> with a couple of perfect enhancements. In the meanwhile we\u2019re working on completing the full PHPStan validation, which is allowing us to reformat the whole source code to make it look more beautiful than ever.</p> <p>Last but not least, we already merged 2 pull-requests for the upcoming PHP 8.2 support!</p> <ol> <li> <p>Release v19.4.18 \u21a9</p> </li> <li> <p>Release v20.0.16 \u21a9</p> </li> </ol>"},{"location":"blog/2022/11/08/release-v19419-and-v20017/","title":"New Release 19.4.19 and 20.0.17","text":""},{"location":"blog/2022/11/08/release-v19419-and-v20017/#important-things-you-should-check-before-upgrading","title":"Important things you should check before upgrading","text":"<p>This release <sup>1</sup> <sup>2</sup> requires PHP 7.3 with <code>intl</code> extension, do not upgrade if your system doesn\u2019t match this requirement.</p> <p>This is a maintenance release with small bug-fixes, code cleanup, documentation improvements and a better overall PHPStan coverage. We\u2019re also bumping the minimum required PHP version to 7.3 with <code>intl</code> extension enabled. Our source code finally has a much better \u201ccopyright\u201d section, to thank all the team that is contributing to this beautiful project.</p> <ol> <li> <p>Release v19.4.19 \u21a9</p> </li> <li> <p>Release v20.0.17 \u21a9</p> </li> </ol>"},{"location":"blog/2022/12/01/release-v19420-and-v20018/","title":"New Release 19.4.20 and 20.0.18","text":"<p>This is mainly a bug-fix release <sup>1</sup> <sup>2</sup> with a couple of optimizations.</p> <p>Most importantly we\u2019ve fixed bugs regarding:</p> <ul> <li><code>fixer.io</code> currency exchange rate provider</li> <li>CSS merge</li> <li>indexes</li> </ul> <p>Upgrading is highly suggested, but always backup and test before doing it.</p> <ol> <li> <p>Release v19.4.20 \u21a9</p> </li> <li> <p>Release v20.0.18 \u21a9</p> </li> </ol>"},{"location":"blog/2022/12/23/release-v19421/","title":"New Release 19.4.21","text":"<p>This is a hot-fix release <sup>1</sup>, it includes only the solution to a single bug that was released in 19.4.20 (#2793).</p> <p>Said bug doesn\u2019t seem to be present on 20.0.18 and that\u2019s why you\u2019ll not find the matching hot-fix release for our v20 branch.</p> <p>Upgrading is highly suggested, but always backup and test before doing it.</p> <ol> <li> <p>Release v19.4.21 \u21a9</p> </li> </ol>"},{"location":"blog/2023/01/27/release-v19422-and-v20019/","title":"New Release 19.4.22 and 20.0.19","text":"<p>This important security update includes six security issues:</p> <p>See:</p> <ul> <li>CVE-2021-21395 <sup>1</sup></li> <li>CVE-2021-39217 <sup>2</sup></li> <li>CVE-2021-41143 <sup>3</sup></li> <li>CVE-2021-41144 <sup>4</sup></li> <li>CVE-2021-41231 <sup>5</sup></li> <li>CVE-2021-41231 <sup>6</sup></li> </ul> <p>Except CVE-2021-21395 <sup>1</sup> all updates are backwards compatible.</p> <p>For custom themes with a password reset form some code needs to be added.</p> <ol> <li> <p>Security advisory GHSA-r3c9-9j5q-pwv4 \u21a9\u21a9</p> </li> <li> <p>Security advisory GHSA-c9q3-r4rv-mjm7 \u21a9</p> </li> <li> <p>Security advisory GHSA-h632-p764-pjqm \u21a9</p> </li> <li> <p>Security advisory GHSA-5vpv-xmcj-9q85 \u21a9</p> </li> <li> <p>Security advisory GHSA-h632-p764-pjqm \u21a9</p> </li> <li> <p>Security advisory GHSA-3p73-mm7v-4f6m \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2023/02/03/release-v19423-and-v20020/","title":"New Release 19.4.23 and 20.0.20","text":"<p>With this security update a single issue was fixed.</p> <p>See:</p> <ul> <li>CVE-2020-27511 <sup>1</sup></li> </ul> <ol> <li> <p>Security advisory GHSA-6269-grv3-jc94 \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2023/08/02/release-v2010/","title":"New Release 20.1.0","text":"","tags":["ZF1-Future"]},{"location":"blog/2023/08/02/release-v2010/#you-should-absolutely-know","title":"You should absolutely know","text":"<p>Since the approval of our second RFC - release schedule OpenMage 19.x enters and \u201cpatch only\u201d state, it will be maintained for two more years as promised but only significant security patches or regression fixes will be ported to v19, every other development (and we have many) will be focused on v20+.</p> <p>We encourage everybody to upgrade to v20, it is our latest and greatest and deserves the bit of work necessary for the upgrade (ask your developer/agency, don\u2019t do it yourself).</p>","tags":["ZF1-Future"]},{"location":"blog/2023/08/02/release-v2010/#release-highlights","title":"Release highlights <sup>1</sup>","text":"<p>This is a big release, that\u2019s why we decided to move away from the 20.0.x versioning and go to 20.1.x. Since a lot of changes could have some impact on current installations we decided to release some \u201cRelease Candidate\u201d versions before the official 20.1.0. Tests are more than welcome now but be extra careful with production environment.</p> <p>What\u2019s most important is the removal of all the 3<sup>rd</sup> party libraries (<code>phpseclib</code>, <code>mcrypt_compat</code>, <code>Cm_RedisSession</code>, <code>Cm_Cache_Backend_Redis</code> and <code>Pelago_Emogrifier</code> and Zend Framework) form our repository, they are now imported via composer. This was an important step to clean up and modernize our code.</p> <ul> <li>If you want to clean up your project from all the files that were removed during this release cycle, please check this link for the complete list.</li> </ul> <p>Don\u2019t worry though, if you\u2019ve always installed OpenMage extracting the zip file, starting from this release you\u2019ll find a new zip file attached to the release itself, we build this zip adding all of the old 3<sup>rd</sup> party libraries so that you will not have to migrate to composer or use composer at all.</p>","tags":["ZF1-Future"]},{"location":"blog/2023/08/02/release-v2010/#also","title":"Also:","text":"<ul> <li>PHP 7.4 is now the minimum required version and 8.2 is now supported.</li> <li>The M1 legacy themes have been moved to an external repository since it\u2019s old (and mostly unused) code.</li> <li>A great improvement to EAV configuration cache has been added to v20.</li> <li>Support for Google Analytics 4 and Google Tag Manager was added with enhanced e-commerce data (which historically was always provided by 3<sup>rd</sup> party extensions).</li> <li>Possibility to set back-end locale per every admin user was added.</li> <li>\u201cpub/\u201d folder structure was introduced (optional), to have extra security for your installation</li> <li>Massive performance improvement in complex SQL queries (#2210)</li> <li>Native WebP support</li> <li>Many, many smaller bug-fixes and improvements</li> </ul>","tags":["ZF1-Future"]},{"location":"blog/2023/08/02/release-v2010/#things-you-should-be-aware-of","title":"Things you should be aware of:","text":"<ul> <li>Support for Google Analytics3 and Universal Analytics were removed.</li> <li>Support for UPS CGI API (which was shut down in May 2023) was removed.</li> <li>Old inactive quotes are now actually purged from the database (#1489).</li> </ul>","tags":["ZF1-Future"]},{"location":"blog/2023/08/02/release-v2010/#known-issues","title":"Known issues:","text":"<p>The <code>pub/</code> folder structure won\u2019t work in composer managed projects, because the <code>composer-magento</code>-plugin can\u2019t manage symbolic links inside <code>pub/</code> correctly (#1210).</p> <ol> <li> <p>Release v20.1.0 \u21a9</p> </li> </ol>","tags":["ZF1-Future"]},{"location":"blog/2023/09/05/release-v2011/","title":"New Release 20.1.1","text":"<p>After the colossal 20.1.0 <sup>2</sup> release just a few weeks back, it\u2019s time for a little \u201csmooth the edges\u201d update, but don\u2019t be fooled, it\u2019s as important as your morning coffee!</p>","tags":["ZF1-Future"]},{"location":"blog/2023/09/05/release-v2011/#highlights","title":"Highlights <sup>1</sup>","text":"<ul> <li>\ud83d\udee0\ufe0f ZF1-Future\u2019s version in composer is strictly specified now, it order to fix problems with future upstream upgrades and our composer patches</li> <li>\ud83d\ude80 Totally new JSON-RPC API is now available, with support for install-login via HTTP basic authentication, it seems to be much faster than the SOAP one so definitely check it out</li> <li>\ud83d\udce6 USPS module got a nice upgrade to support the latest changes in USPS API and services</li> <li>\ud83c\udf6a A vulnerability about \u201cguest order view\u201d cookie tampering was fixed, with the introduction of a \u201crate limiting\u201d API you can use in your own code too</li> <li>\ud83d\udc1e Few other bug-fixes and updates</li> </ul> <ol> <li> <p>Release v20.1.1 \u21a9</p> </li> <li> <p>New Release 20.1.0 \u21a9</p> </li> </ol>","tags":["ZF1-Future"]},{"location":"blog/2023/10/27/release-v2020/","title":"New Release 20.2.0","text":"<p>OpenMage continues its remarkable journey with an important new release!</p> <p>Among the numerous pull requests, one truly stands out. After months of development, we are thrilled to announce a significant upgrade to a core component of the OpenMage back-end:</p> <p>The TinyMCE rich text editor skyrockets from  its \u201cmore than 10-years-old\u201d version 3 to the new and shining version 6.7!</p>","tags":["Events","PHP-8.3","TinyMCE"]},{"location":"blog/2023/10/27/release-v2020/#highlights","title":"Highlights <sup>1</sup>","text":"<ul> <li>\ud83d\udcdd TinyMCE is updated from v3 to v6.7.1</li> <li>\ud83d\udd0c <code>composer.json</code> now allows PHP 8.3</li> <li>\ud83e\uddf9 Added a Cron job to clean expired API sessions</li> <li>\ud83d\udcca Added <code>googleanalytics_ga4_send_data_before</code> to customize GA4 data</li> <li>\ud83d\ude80 Improved rate limit functions</li> <li>\ud83d\udee0\ufe0f Fixed \u201cCredit Memo not created when refund issued by merchant\u201d</li> <li>\ud83d\udcc4 Switched <code>DOCTYPE</code> for <code>base/adminhtml</code> themes to HTML5</li> </ul> <ol> <li> <p>Release v20.2.0 \u21a9</p> </li> </ol>","tags":["Events","PHP-8.3","TinyMCE"]},{"location":"blog/2023/12/26/release-v2030/","title":"New Release 20.3.0","text":"<p>\ud83c\udf89\ud83d\uded2 Greetings, fellow Mage aficionados! Brace yourselves for the magical unveiling of our latest release for this great 2023: OpenMage 20.3.0! \ud83d\ude80\ud83e\udea9</p> <p>This release isn\u2019t just another update; it\u2019s a recipe for the end of the year e-commerce party, with great ingredients like bug-fixes, security enhancements, components and subsystems upgrades with a sprinkle of performance improvements.</p>","tags":["TinyMCE"]},{"location":"blog/2023/12/26/release-v2030/#highlights","title":"Highlights <sup>1</sup>","text":"<ul> <li>\ud83d\udcdd TinyMCE is updated to v6.8.2 but most importantly script and style tags inside the WYSIWYG editor are supported again</li> <li>\ud83d\udcca Our Google Analytics 4 module now correctly handles projects where the manufacturer attribute is missing</li> <li>\ud83d\ude80 <code>ConfigurableSwatches</code> module loads its JS only if it\u2019s actually used</li> <li>\ud83d\udee1\ufe0f Improved stampede prevention with empty configuration cache under high loads</li> <li>\ud83c\udfcb\ufe0f Many minor PHP8+ warnings have been fixed</li> <li>\ud83d\udc49 And so much more, check the full list of changes below</li> </ul> <ol> <li> <p>Release v20.3.0 \u21a9</p> </li> </ol>","tags":["TinyMCE"]},{"location":"blog/2024/02/09/release-v2040/","title":"New Release 20.4.0","text":"<p>\ud83d\ude80\u2728 Hello OpenMage enthusiasts! It\u2019s time for our first release of 2024! OpenMage 20.4.0 brings many fixes to PHP8.1+ warnings and a few nice addition, be sure to get it while it\u2019s hot! \ud83e\uddd9\u200d\u2642\ufe0f\ud83d\udd25</p>","tags":["TinyMCE"]},{"location":"blog/2024/02/09/release-v2040/#highlights","title":"Highlights <sup>1</sup>","text":"<ul> <li>Updated ZF1-Future to 1.24.0 #3804</li> <li>Fixed auto-increment id fetching cache problem in import/export module #3730</li> <li>Fixed re-index for configurable products without category assigned #3785</li> <li>Fixed bug on incorrect callback URL when saving OAuth Token. #3770</li> <li>Added whitelist to OAuth consumer callback URLs to allow custom URL scheme #3774</li> </ul> <ol> <li> <p>Release v20.4.0 \u21a9</p> </li> </ol>","tags":["TinyMCE"]},{"location":"blog/2024/02/28/release-v2050/","title":"New Release 20.5.0","text":"<p>\ud83c\udf89\ud83c\udf89\ud83c\udf89 We are thrilled to announce OpenMage 20.5.0, the latest and greatest version of your favorite e-commerce platform! \ud83c\udf89\ud83c\udf89\ud83c\udf89</p> <p>This release surely packs a good amount of new features, so much so that we had to add a dedicated section to the change-log! But it also comes with a bunch of bug-fixes, components updates and most importantly a security fix! <sup>1</sup></p> <p>See:</p> <ul> <li>CVE-2024-20717 (XSS) <sup>2</sup> Stored XSS in admin system configuration</li> </ul> <ol> <li> <p>Release v20.5.0 \u21a9</p> </li> <li> <p>Security advisory GHSA-gp6m-fq6h-cjcx \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2024/04/06/release-v2060/","title":"New Release 20.6.0","text":"<p>A solid bug-fix release this 20.6.0, with some accessibility improvements to the RWD theme too, which will improve the lighthouse scores that everybody loves ;-) <sup>1</sup></p> <ol> <li> <p>Release v20.6.0 \u21a9</p> </li> </ol>"},{"location":"blog/2024/05/07/release-v2070/","title":"New Release 20.7.0","text":"<p>This is such a great release I don\u2019t even know how to start, packed with new features like never before! \ud83e\udd2f Carefully check the \ud83d\udcd6 change-log and, if your store uses \ud83d\ude9a UPS, double check the feature number 4, it is extremely important! \ud83d\udea8 <sup>1</sup></p> <ol> <li> <p>Release v20.7.0 \u21a9</p> </li> </ol>","tags":["Configurable Swatches","Environment variables","UPS REST API"]},{"location":"blog/2024/05/21/release-v2080/","title":"New Release 20.8.0","text":"<p>This is a small but important release, necessary to iron out a couple of fixes and improvements with the new UPS API and it\u2019s necessary to release it now in order for everybody to test and upgrade before 3<sup>rd</sup> June 2024, when the old UPS XML API will be retired. <sup>1</sup></p> <ol> <li> <p>Release v20.8.0 \u21a9</p> </li> </ol>","tags":["UPS REST API"]},{"location":"blog/2024/05/29/release-v2090/","title":"New Release 20.9.0","text":"<p>Another small but important release, mostly oriented towards fixing a couple of bugs with the new UPS API. Remember,  the old UPS XML API will be shut down on 3<sup>rd</sup> June 2024. <sup>1</sup></p> <ol> <li> <p>Release v20.9.0 \u21a9</p> </li> </ol>","tags":["UPS REST API"]},{"location":"blog/2024/07/02/release-v20100/","title":"New Release 20.10.0","text":"<p>This release brings <code>copyable</code> cells to back-end grids, preliminary PHP 8.4 support, improved MariaDB compatibility and fixes to a bundle of important issues.</p> <p>From smoothing out UPS REST API handling, an old cache problem in primary navigation block and a couple of minor regressions in product\u2019s attribute handling. <sup>1</sup></p> <ol> <li> <p>Release v20.10.0 \u21a9</p> </li> </ol>","tags":["PHP-8.4"]},{"location":"blog/2024/07/24/release-v20101/","title":"New Release 20.10.1","text":"<p>With this security update a single issue was fixed. <sup>1</sup></p> <p>See:</p> <ul> <li>CVE-2024-41676 <sup>2</sup> Stored XSS in admin system configuration</li> </ul> <ol> <li> <p>Release v20.10.1 \u21a9</p> </li> <li> <p>Security advisory GHSA-5vrp-638w-p8m2 \u21a9</p> </li> </ol>","tags":["Security"]},{"location":"blog/2024/07/27/release-v20102/","title":"New Release 20.10.2","text":"<p>Bump coded in version tag, which was missed in the previous release.<sup>1</sup></p> <ol> <li> <p>Release v20.10.2 \u21a9</p> </li> </ol>"},{"location":"blog/2024/12/20/release-v20110/","title":"New Release 20.11.0","text":"<p>As you can see, there are many many changes in this release!</p> <p>Thanks to all of the contributors for keeping OpenMage one of the fastest and most secure robust open source e-commerce platforms around! <sup>1</sup></p>"},{"location":"blog/2024/12/20/release-v20110/#fixes","title":"Fixes","text":"<ul> <li>Show correct version for main branch #4137</li> <li>Allow to use $before parameter in <code>addCss()</code>/<code>addJs()</code> from XML #4151</li> <li>Fixed issues #4134 undefined array index label_use_default in <code>Mage_Catalog_Model_Product_Attribute_Backend_Media</code> #4136</li> <li>Fix <code>strlen()</code> null deprecation in <code>AccountController.php</code> #4155</li> <li>Added <code>error</code> directory to checks + PHP 8.4 fix #4184</li> <li>Add email link to set password. See issue #1205. #3262</li> <li>Fixed undefined array key \u201cvalues\u201d in <code>Mage_Catalog_Model_Product_Attribute_Backend_Media</code> #4125</li> <li>Fix ACL Resource \u201cadmin/sales/order/actions/use\u201d not found #4199</li> <li>PHP8: Fixes passing null to <code>str_contains()</code> #4203</li> <li>Fixed missing/wrong admin <code>_setActiveMenu()</code> #4209</li> <li>Fix wrong Preview link on CMS pages grid #4214</li> <li>In product list all swatches are always shown even if they are not available when \u201cDisplay Out of Stock Products\u201d is disabled #4100</li> <li>OpenMage admin theme: Change background-color for active sections #4219</li> <li>Back-port: Added PHPUnit test for Varien <code>Date</code> and <code>Datetime</code> #4210</li> <li>Fixed <code>strcmp()</code>: Passing null to parameter #1 ($string1) of type string \u2026 #4212</li> <li>Custom product types - increased column length for widgets #4226</li> <li>PHP8.1: Added <code>getter</code> method for <code>Mage_Adminhtml_Block_Widget_Grid_Column::getType()</code> to return string #4238</li> <li>Admin theme: Change background-color for active sections #4246</li> <li>Deprecated functionality: <code>preg_match()</code>: Passing null to parameter #4 \u2026 #4251</li> <li>Bug-fix: passing invalid ID to <code>Mage_Catalog_Model_Url::refreshRewrites()</code> #4259</li> <li>Configurable: remove unused double <code>foreach</code> loop #4008</li> <li>Added <code>ext-ftp</code> to requirements #4270</li> <li>Fixes configurable swatch color picker in legacy admin theme #4218</li> <li>Fixed incorrect date in block, ref #1525 #4242</li> <li>PHP8: base64_decode(): Passing null is deprecated #4281</li> <li>Fix placeholder image in WYSIWYG editor when using a different admin theme #4240</li> <li>[PHP 8.4] <code>fgetcsv()</code> - The $escape parameter must be provided as its default value will change #4297</li> <li>[PHP 8.4] <code>fputcsv()</code> - The $escape parameter must be provided as its default value will change #4298</li> <li>Fixes <code>Mage_Core_Helper_Url::removeRequestParam()</code> #4295</li> <li>PHP84: ignore deprecated E_STRICT #4289</li> <li>Fix deprecated message for <code>strlen()</code> first value null #4306</li> <li>Fixed full name observer calls in <code>config.xml</code> #4309</li> <li>Fix <code>Mage_Adminhtml_Block_Template::isOutputEnabled()</code> for invalid module #4320</li> <li>Fix: cannot add to wish-list from tag page - Customer account #4329</li> <li>Fix duplicate block rendering with <code>getSortedChildren()</code> #4337</li> <li>[PHP 8.x] Deprecated functionality: <code>strtotime()</code>: Passing null to para\u2026 #4339</li> <li>Fixes line-height for some H4 in admin legacy theme #4335</li> <li>Added <code>ext-pdo_mysql</code> to checks #4350</li> <li>Fix: create empty <code>SimpleXMLElement</code> #4351</li> <li>Bug-fix: cant create order from admin back-end #4348</li> <li>Deprecated functionality: <code>preg_replace()</code> #4311</li> <li>Fixed null deprecation in <code>Varien/Convert/Parser/Xml/Excel</code> #4375</li> <li>Fixed null deprecation in <code>Mage_Catalog_Model_Product_Option_Type_Text::validateUserValue()</code> #4357</li> <li>Bug-fix: <code>Mage_Adminhtml_Helper_Dashboard_Data::countStores()</code> on null #4370</li> <li>Fix <code>validateHttpVersion()</code> to be RFC 1945 and RFC 7230 compliant #4368</li> <li>Fix for catalog_product_relation not being deleted when bundle option deleted. #4395</li> <li>Fix <code>unserializeArray()</code> on non-serialized string #4387</li> <li>[Tax] add <code>FK</code> to tax/sales_order_tax again #4334</li> <li>Fix Possible Array Access warnings in Captcha Observer #4424</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#features","title":"Features","text":"<ul> <li>New feature: Added \u201cNewsletter Subscription Form\u201d widget #4095</li> <li>Added support to specify file upload directory in system configuration #4079</li> <li>Add new method to get configuration value directly from DB bypassing cache. #4163</li> <li>Updated <code>Varien_Object::getData()</code> and added <code>getDataByKey()</code> &amp; <code>getDataByPath()</code> #4205</li> <li>Admin configuration: added input validation &amp; hide disabled options #4232</li> <li>Better configuration for admin RSS links #4243</li> <li>Prevent delete/disable CMS pages used in configuration #4239</li> <li>Unified admin grid columns and added XML configuration #4225</li> <li>Make <code>Mage_GiftMessage</code> optional in templates #4266</li> <li>Cache <code>isModuleOutputEnabled</code> or <code>isModuleEnabled</code> status #4323</li> <li>Use <code>transliterator_transliterate</code> to generate <code>url_key</code> #4315</li> <li>New feature: Highlight popular countries in country select #4089</li> <li>Install TinyMCE 7.5 via composer #4113</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#security","title":"Security","text":"<ul> <li>TinyMCE security fix #4157</li> <li>Obfuscated login credentials in stack-traces #4388</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#ddev","title":"DDEV","text":"<ul> <li>[DDEV] Adding n98-magerun support for the test environment #4107</li> <li>DDEV: file permission and bug-fix #4145</li> <li>DDEV: command for local development #4133</li> <li>[DDEV] Support for <code>xhprof</code>/<code>xhgui</code> #4325</li> <li>DDEV: updated install script #4407</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#coding-style","title":"Coding style","text":"<ul> <li>PHPCS: fixed PHPCompatibility warning #4148</li> <li>PHPCS: ignore <code>mcrypt</code> related warnings #4147</li> <li>PHP-CS-Fixer: added check for double quotes #4126</li> <li>PHPCS: fixed last PHPCompatibility check errors #4164</li> <li>Small DocBlock update #4160</li> <li>PHP-CS-Fixer: added check for short array syntax and logical operators #4181</li> <li>PHP-CS-Fixer: added check for <code>concat</code> spaces #4185</li> <li>PHPCS: patched ECG standard #4149</li> <li>Rector: <code>CodeQuality</code> - <code>UnusedForeachValueToArrayKeysRector</code> #4111</li> <li>Rector: <code>DeadCode</code> - removed useless DocBlock #4201</li> <li>Rector: added dependency and basic rules #4213</li> <li>Skip some rector rules #4227</li> <li>Add template files to PHPStan checks #4245</li> <li>PHPCS-ECG: fail on error #4324</li> <li>Code quality: added PHPMD, updated workflow #4303</li> <li>Rector: updated PHPUnit tests #4391</li> <li>Rector: set methods to private in <code>Mage.php</code> #4392</li> <li>Rector: removed useless variables #4393</li> <li>Follow coding-standard PER-CS2.0 #4372</li> <li>PHPCS: merged workflows #4416</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#phpstan","title":"PHPStan","text":"<ul> <li>PHPStan fixes #4116</li> <li>PHPStan fixes #4146</li> <li>Bump PHPStan to level5 #4265</li> <li>PHPStan: bumped to 1.12.1 &amp; renamed configuration files #4183</li> <li>PHPStan: L7 update for <code>Mage_Sendfriend</code> #4187</li> <li>Fixed PHPStan on Mage_Customer_Model_Customer #4190</li> <li>Some PHPStan fixes #4241</li> <li>Some PHPStan fixes #4273</li> <li>Some PHPStan fixes #4276</li> <li>Some PHPStan fixes #4283</li> <li>PHPStan: added some class vars to templates #4322</li> <li>PHPStan: some fixes #4328</li> <li>More PHPStan fixes #4291</li> <li>PHPStan: some fixes #4346</li> <li>PHPStan: some fixes #4363</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#phpunit","title":"PHPUnit","text":"<ul> <li>PHPUnit: use database for tests, added tests #4138</li> <li>PHPUnit: added some tests #4204</li> <li>PHPUnit: ignore timezone in date tests #4284</li> <li>Added more PHPUnit tests #4236</li> <li>PHPUnit: added tests #4321</li> <li>PHPUnit: added tests #4340</li> <li>Added test, ref #4352 #4389</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#cleanup","title":"Cleanup","text":"<ul> <li>Removed empty <code>Mage_Poll</code> configuration section #4122</li> <li>Removed MTF #4161</li> <li>Updated <code>.gitignore</code>, ref #4161 #4167</li> <li>Remove <code>Mage_Sendfriend</code> #4274</li> <li>PHPMD: remove unused private methods/fields #4397</li> <li>Cleanup:  removed broken <code>Mage_Core_Controller_Front_Router</code> #4356</li> <li>Remove Gitpod files #4404</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#docs","title":"Docs","text":"<ul> <li>Docs: Added section for PhpStorm (SCSS) file watcher #4208</li> <li>Documentation v4 \ud83d\udcdd - <code>github.io</code> page #4156</li> <li>DocBlock: update #4349</li> </ul>"},{"location":"blog/2024/12/20/release-v20110/#other","title":"Other","text":"<ul> <li>CodeQL: updated workflow #4172</li> <li>Added method to make use of <code>Mage_Core_Model_Security_HtmlEscapedString</code> easier #4123</li> <li>Workflow: update copyright monthly #4176</li> <li>Updated Copyright #4189</li> <li>Fixed some typos #4200</li> <li>Preview PR in Gitpod #4175</li> <li>Updated Copyright #4237</li> <li>Added poly-fill-8.\u215c.4 in Composer #4268</li> <li>Updated ZF1-Future to 1.24.1 #4278</li> <li>Better caching for PHPStan workflow #4269</li> <li>Updated Copyright #4327</li> <li>Hot-fix:  <code>core_store.store_id</code> can be <code>null</code> #4330</li> <li>Bug-fix: cant view order in customer account #4345</li> <li>Bug-fix: hide exception, ref #4303 #4344</li> <li>Bug-fix: fixed sitemap configuration depend nodes #4369</li> <li>Fixed issue #4384 bug on not able to view order details in front-end. #4385</li> <li>Updated Copyright #4400</li> <li><code>README.md</code>: fixed badges #4413</li> </ul> <ol> <li> <p>Release v20.11.0 \u21a9</p> </li> </ol>"},{"location":"blog/2025/01/15/release-v20120/","title":"New Release 20.12.0","text":"<p>Bug-fixes and maintenance. <sup>1</sup></p>"},{"location":"blog/2025/01/15/release-v20120/#changes","title":"Changes","text":""},{"location":"blog/2025/01/15/release-v20120/#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Updated composer-plugin (#4455)</li> <li>Deprecate Date_Short and removed <code>strftime()</code> (#4462)</li> <li>Update <code>Mage_SalesRule_Model_Quote_Discount</code> (#4293)</li> </ul>"},{"location":"blog/2025/01/15/release-v20120/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fixes grid column type <code>concat</code> (#4476)</li> <li>Fix regression bug for duplicate block rendering with <code>getSortedChildren()</code> (#4480)</li> <li>Hot-fix: Incorrect attribute localization (#4441)</li> <li>Catch exception when invalid country_id is submitted in estimate ship\u2026 (#4427)</li> </ul>"},{"location":"blog/2025/01/15/release-v20120/#maintenance","title":"\ud83d\udd28 Maintenance","text":"<ul> <li>add bucha as a contributor for code (#4482)</li> <li>Workflow: <code>release-drafter.yml</code> update (#4457)</li> <li>DOC: updated contributors list (#4479)</li> <li>Cleanup: removed PHP-version check (#4459)</li> <li>PHP-CS-Fixer: added all directories to checks (#4406)</li> <li>Cleanup: update <code>addHandle()</code> DocBlock (#4460)</li> <li>Workflow: update PhpStorm meta files (#4445)</li> <li>PHPStan: added DocBlock to most templates :rocket: (#4468)</li> <li>Workflow: fixed invalid JSON (#4470)</li> <li>PHPUnit: fixes Update <code>LayoutTest.php</code> (#4453)</li> <li>PHPUnit: fixed test using wrong date format (#4444)</li> <li>Updated PHPStan to v2.1 (#4430)</li> <li>All contributors bot (#4446)</li> <li>Bumped version to 20.12.0 (#4442)</li> <li>PHPUnit: added test for <code>Mage_Core_Model_Layout::getBlockSingleton()</code> (#4431)</li> <li>Workflow: added release drafter (#4443)</li> <li>Updated Copyright (#4440)</li> <li>Updated <code>README.md</code> (#4408)</li> <li>Mini DocBlock update (#4415)</li> </ul> <ol> <li> <p>Release v20.12.0 \u21a9</p> </li> </ol>"},{"location":"blog/2025/01/16/release-v20121/","title":"New Release 20.12.1","text":"<p>Hot-fix introduced bug in last release. <sup>1</sup></p>"},{"location":"blog/2025/01/16/release-v20121/#changes","title":"Changes","text":""},{"location":"blog/2025/01/16/release-v20121/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix: error in admin customer edit account (#4488)</li> </ul>"},{"location":"blog/2025/01/16/release-v20121/#maintenance","title":"\ud83d\udd28 Maintenance","text":"<ul> <li>Updated PHPStan workflow (#4461)</li> </ul> <ol> <li> <p>Release v20.12.1 \u21a9</p> </li> </ol>"},{"location":"blog/2025/01/17/release-v20122/","title":"New Release 20.12.2","text":"<p>Some bug-fixes. <sup>1</sup></p>"},{"location":"blog/2025/01/17/release-v20122/#changes","title":"Changes","text":""},{"location":"blog/2025/01/17/release-v20122/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>No Layout on Redirect in <code>CatalogSearch</code> <code>AdvancedController</code> (#4494)</li> <li>Fix: <code>InvalidParamTypeProvidedNULL:</code> fixed <code>login()</code> method (#4399)</li> <li>Fix: error in admin edit cart rule (#4493)</li> </ul>"},{"location":"blog/2025/01/17/release-v20122/#maintenance","title":"\ud83d\udd28 Maintenance","text":"<ul> <li>Update <code>.all-contributorsrc</code> (#4481)</li> </ul> <ol> <li> <p>Release v20.12.2 \u21a9</p> </li> </ol>"},{"location":"developers/error-pages/","title":"Error pages","text":""},{"location":"developers/error-pages/#introduction","title":"Introduction","text":"<p>If you want to set up multiple stores with a different layout and localized content for each store, this is done by passing the <code>$_GET['skin']</code> parameter to the intended processor In the example below, we are using a <code>503</code> type error template file, which requires localized content.</p> <p>The constructor of the <code>Error_Processor</code> class accepts a <code>skin</code> GET parameter to change layout:</p> <pre><code>if (isset($_GET['skin'])) {\n    $this-&gt;_setSkin($_GET['skin']);\n}\n</code></pre> <p>This can also be added a rewrite rule in the <code>.htaccess</code> file that will append a <code>skin</code> parameter to the URL.</p>"},{"location":"developers/error-pages/#the-_getskin-parameter","title":"The <code>$_GET['skin']</code> parameter","text":"<p>To use the <code>skin</code> parameter:</p> <ol> <li>Check if the <code>maintenance.flag</code> exists</li> <li>Note the host address, that refers to the <code>HTTP_HOST</code>, or any other variable such as environment variables</li> <li>Check if the <code>skin</code> parameter exists</li> <li>Set the parameter by using the rewrite rules below.</li> </ol>"},{"location":"developers/error-pages/#rewrite-rule","title":"Rewrite rule","text":"<p>This is what it looks like as a rewrite rule:</p> Apachenginx <pre><code>RewriteCond `%{DOCUMENT_ROOT}/maintenance.flag -f\nRewriteCond `%{HTTP_HOST} ^sub.example.com$`\nRewriteCond `%{QUERY_STRING} !(^|&amp;)skin=sub(&amp;|$)` [NC]\nRewriteRule `^ %{REQUEST_URI}?skin=sub` [L]\n</code></pre> <p>The setting should be added for multistore setups.</p>"},{"location":"developers/error-pages/#copy-files","title":"Copy files","text":"<p>Copy the following files:</p> <ul> <li><code>errors/default/503.phtml</code> to <code>errors/sub/503.phtml</code></li> <li><code>errors/default/css/styles.css</code> to <code>errors/sub/styles.css</code></li> </ul> <p>Edit these files to provide localized content in the <code>503.phtml</code> file and custom styling in the <code>styles.css</code> file.</p> <p>Ensure your paths point to your <code>errors</code> directory. The directory name must match the URL parameter indicated in the <code>RewriteRule</code>. In the example above, the <code>sub</code> directory is used, which is specified as a parameter in the <code>RewriteRule</code> (<code>skin=sub</code>)</p>"},{"location":"developers/mkdocs/","title":"MkDocs","text":"<p><code>mkdocs</code> is used to build this documentation.</p>","tags":["Documentation"]},{"location":"developers/mkdocs/#installation","title":"Installation","text":"<ol> <li> <p>Install <code>python3</code><sup>1</sup></p> <pre><code>sudo apt-get update\nsudo apt-get install python3.8 python3-pip\n</code></pre> </li> <li> <p>Install <code>mkdocs</code> and plugins via <code>pip3</code>[^2]</p> <pre><code>pip3 install mkdocs mkdocs-material mkdocs-minify-plugin mkdocs-redirects\n</code></pre> </li> </ol> <p>Danger</p> <p>Do not use unmaintained <code>apt</code> packages.</p>","tags":["Documentation"]},{"location":"developers/mkdocs/#commands","title":"Commands","text":"<p>Create a new project</p> <pre><code>mkdocs new [dir-name]\n</code></pre> <p>Start the live-reloading docs server</p> <pre><code>mkdocs serve\n</code></pre> <p>Build the documentation site</p> <pre><code>mkdocs build\n</code></pre> <p>Print this help message</p> <pre><code>mkdocs help\n</code></pre>","tags":["Documentation"]},{"location":"developers/mkdocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml                 # The configuration file.\ndocs/\n   content/\n      index.md             # The documentation homepage.\n         ...               # Other markdown pages, images and other files.\n      blog/                # Blog-like entries (with date, author, ...)\n         assets/\n         posts/\n      developers/\n      users/\n   overrides/              # Theme overrides\ndocs_includes/             # Need to stay outside \"docs\"\n</code></pre> <ol> <li> <p>see How to Install Python on Your System: A Guide \u21a9</p> </li> </ol>","tags":["Documentation"]},{"location":"developers/changelog/","title":"Important changes","text":"<p>Most important changes will be listed here, all other changes since <code>19.4.0</code> can be found in release notes.</p>"},{"location":"developers/changelog/#between-magento-1945-and-openmage-19x","title":"Between Magento 1.9.4.5 and OpenMage 19.x","text":"<ul> <li>bug fixes and PHP 7.x, 8.0, 8.1 and 8.2 compatibility</li> <li>added configuration cache for <code>system.xml</code> (#1916)</li> <li>added <code>frontend_type</code> <code>color</code> (#2945)</li> <li>search for <code>null</code> (\u201cNULL\u201d) in back-end grids (#1203)</li> <li>removed <code>lib/flex</code> containing unused ActionScript <code>file uploader</code> files (#2271)</li> <li><code>Mage_Catalog_Model_Resource_Abstract::getAttributeRawValue()</code> now returns <code>'0'</code> instead of <code>false</code> if the value stored in the database is <code>0</code> (#572)</li> <li>PHP extension <code>intl</code> is required</li> <li>Deprecation errors are not suppressed anymore</li> <li>removed modules:<ul> <li><code>Mage_Backup</code> (#2811)</li> <li><code>Mage_Compiler</code></li> <li><code>Mage_GoogleBase</code></li> <li><code>Mage_PageCache</code> (#2258)</li> <li><code>Mage_Poll</code> (#3098)</li> <li><code>Mage_Sendfriend</code> (#4274)</li> <li><code>Mage_Xmlconnect</code></li> <li><code>Phoenix_Moneybookers</code></li> </ul> </li> </ul> <p>If you rely on those modules you can reinstall them with composer:</p> <ul> <li>Module <code>Mage_Backup</code></li> </ul> <pre><code>composer require openmage/module-mage-backup\n</code></pre> <ul> <li>Module <code>Mage_PageCache</code></li> </ul> <pre><code>composer require openmage/module-mage-pagecache\n</code></pre> <ul> <li>Module <code>Mage_Poll</code></li> </ul> <pre><code>composer require openmage/module-mage-poll\n</code></pre> <ul> <li>Module <code>Mage_Sendfriend</code></li> </ul> <pre><code>composer require openmage/module-mage-sendfriend\n</code></pre> <ul> <li>Legacy front-end themes</li> </ul> <pre><code>composer require openmage/legacy-frontend-themes\n</code></pre>"},{"location":"developers/changelog/#between-openmage-19x-and-20x","title":"Between OpenMage 19.x and 20.x","text":"<p>Do not use 20.x.x if you need IE support.</p> <ul> <li>removed IE conditional comments, IE <code>styles</code>, IE <code>scripts</code> and IE <code>eot</code> files (#1073)</li> <li>removed front-end default themes (<code>default</code>, <code>modern</code>, <code>iphone</code>, <code>german</code>, <code>french</code>, <code>blank</code>, <code>blue</code>) (#1600)</li> <li>fixed incorrect date in customer block (<code>$useTimezone</code> parameter) (#1525)</li> <li>added Redis as a valid option for <code>global/session_save</code> (#1513)</li> <li>reduce needless saves by avoiding setting <code>_hasDataChanges</code> flag (#2066)</li> <li>removed support for <code>global/sales/old_fields_map</code> defined in XML (#921)</li> <li>enabled website level configuration cache (#2355)</li> <li>made overrides of <code>Mage_Core_Model_Resource_Db_Abstract::delete</code> respect parent API (#1257)</li> <li>rewrote <code>Mage_Eav_Model_Config</code> as cache for all EAV entity and attribute reads (#2993)</li> </ul> <p>For full list of changes, you can compare tags.</p>"},{"location":"developers/changelog/#since-openmage-1950-2010","title":"Since OpenMage 19.5.0 / 20.1.0","text":"<p>PHP 7.4 is now the minimum required version.</p> <p>Most of the 3<sup>rd</sup> party libraries/modules that were bundled in our repository were removed and migrated to composer dependencies. This allows for better maintenance and easier upgrades.</p> <p>Specifically:</p> <ul> <li><code>phpseclib</code></li> <li><code>mcrypt_compat</code></li> <li><code>Cm_RedisSession</code></li> <li><code>Cm_Cache_Backend_Redis</code></li> <li><code>Pelago_Emogrifier</code> (#2411)</li> <li>Zend Framework 1 (#2827)</li> </ul> <p>If your project uses OpenMage through composer then all dependencies will be managed automatically. If you just extracted the release zip/tarball in your project\u2019s main folder then be sure to: - remove the old copy of aforementioned libraries from your project, you can do that with this command:   <pre><code>rm -rf app/code/core/Zend lib/Cm lib/Credis lib/mcryptcompat lib/Pelago lib/phpseclib lib/Zend\n</code></pre></p> <ul> <li>download the new release zip file that is named <code>openmage-VERSIONNUMBER.zip</code>, this one is built to contain the <code>vendor</code>   folder generated by composer, with all the dependencies in it</li> <li>extract the zip file in your project\u2019s repository as you always did</li> </ul> <p>We also decided to remove our Zend_DB patches (that were stored in <code>app/code/core/Zend</code>) because they were very old and not compatible with the new implementations made by ZF1-Future, which is much more advanced and feature rich. This may generate a problem with <code>Zend_Db_Select</code> statements that do not use <code>Zend_Db_Expr</code> to quote expressions. If you see SQL errors after upgrading please remember to check for this specific issue in your code.</p> <p>UPS shut down their old CGI API, so we removed the support for it from the <code>Mage_Usa</code> module.</p>"},{"location":"developers/changelog/#between-openmage-20x-and-21x-unreleased-available-on-branch-next","title":"Between OpenMage 20.x and 21.x (unreleased, available on branch <code>next</code>)","text":"<ul> <li>PHP 8.1 as minimum required version</li> <li>Removed <code>scriptaculous/dragdrop.js</code> (#3215)</li> <li>RWD theme: updated jQuery to 3.7.0 (#3204)</li> <li>Removed double span element from HTML buttons (#3123)</li> <li>Removed all deprecated <code>Mysql4_</code> classes (#2730). If there are any old modules/extensions in your installation that use such classes, you must run <code>shell/rename-mysql4-class-to-resource.php</code> in the command line in order to convert them. Backup all files before running the script</li> <li>Removed \u201cadmin routing compatibility mode\u201d (#1551)</li> </ul>"},{"location":"developers/changelog/new-config/","title":"New Configuration Options","text":"","tags":["Configuration"]},{"location":"developers/changelog/new-config/#admindesignuse_legacy_theme","title":"<code>admin/design/use_legacy_theme</code>","text":"<p>Add new default OpenMage admin theme and legacy Admin Theme configuration option. (#1008)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#adminglobal_searchenable","title":"<code>admin/global_search/enable</code>","text":"<p>Possibility to disable global search in back-end. (#1532)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#catalogproduct_imageprogressive_threshold","title":"<code>catalog/product_image/progressive_threshold</code>","text":"<p>Added progressive to image resize. (#197)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#catalogsearchsearch_separator","title":"<code>catalog/search/search_separator</code>","text":"<p>Make <code>fulltext</code> search separator (<code>OR</code>/<code>AND</code>) configurable from back-end. (#1852)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#devlogmax_level","title":"<code>dev/log/max_level</code>","text":"<p>Set log level from configuration. (#1727)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#newslettersecurityenable_form_key","title":"<code>newsletter/security/enable_form_key</code>","text":"<p>[Theme BC] Add <code>formkey</code> validation to Newsletter subscribe action. (#1866)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#rssadmin_ordernew_period","title":"<code>rss/admin_order/new_period</code>","text":"<p>Better configuration for admin RSS links. (#4243)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#sitemapcategorylastmod","title":"<code>sitemap/category/lastmod</code>","text":"<p>Made sitemap more flexible. (#1854)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#sitemappagelastmod","title":"<code>sitemap/page/lastmod</code>","text":"<p>Made sitemap more flexible. (#1854)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-config/#sitemapproductlastmod","title":"<code>sitemap/product/lastmod</code>","text":"<p>Made sitemap more flexible. (#1854)</p>","tags":["Configuration"]},{"location":"developers/changelog/new-events/","title":"New Events","text":"","tags":["Events"]},{"location":"developers/changelog/new-events/#adminhtml_block_widget_form_init_form_values_after","title":"<code>adminhtml_block_widget_form_init_form_values_after</code>","text":"<p>New event after data set on a form. (#1485)</p>","tags":["Events"]},{"location":"developers/changelog/new-events/#adminhtml_block_widget_tabs_html_before","title":"<code>adminhtml_block_widget_tabs_html_before</code>","text":"<p>New event for adding custom tab. (#1358)</p>","tags":["Events"]},{"location":"developers/changelog/new-events/#adminhtml_sales_order_create_save_before","title":"<code>adminhtml_sales_order_create_save_before</code>","text":"<p>New event when editing an order. (#1168)</p>","tags":["Events"]},{"location":"developers/changelog/new-events/#core_app_run_after","title":"<code>core_app_run_after</code>","text":"<p>Ended the request (and close the session) before <code>core_app_run_after</code> event. (#1592)</p>","tags":["Events"]},{"location":"developers/changelog/new-events/#sitemap_cms_pages_generating_before","title":"<code>sitemap_cms_pages_generating_before</code>","text":"<p>Made sitemap more flexible. (#1854)</p>","tags":["Events"]},{"location":"developers/changelog/new-events/#sitemap_urlset_generating_before","title":"<code>sitemap_urlset_generating_before</code>","text":"<p>Made sitemap more flexible. (#1854)</p> <p>Full list of events</p>","tags":["Events"]},{"location":"developers/changelog/soap-wsdl/","title":"SOAP/WSDL","text":"<p>Since <code>19.4.17</code>/<code>20.0.15</code> we changed the <code>targetNamespace</code> of all the WSDL files (used in the API modules), from <code>Magento</code> to <code>OpenMage</code>. If your custom modules extends OpenMage API with a custom WSDL file and there are some hard-coded <code>targetNamespace=\"urn:Magento\"</code> strings, your API may stop working.</p> <p>Please replace all occurrences of</p> <p><pre><code>targetNamespace=\"urn:Magento\"\n</code></pre> with <pre><code>targetNamespace=\"urn:OpenMage\"\n</code></pre> or alternatively <pre><code>targetNamespace=\"urn:{{var wsdl.name}}\"\n</code></pre> to avoid any problem.</p> <p>To find which files need the modification you can run this command from the root directory of your project. <pre><code>grep -rn 'urn:Magento' --include \\*.xml\n</code></pre></p>","tags":["WSDL"]},{"location":"developers/coding-style/per-2.0/","title":"PER-2.0 style","text":"<p>OpenMage follows modern PER-2.0 <sup>1</sup> coding style.</p> <ol> <li> <p>PER-2.0 code standard\u00a0\u21a9</p> </li> </ol>","tags":["Coding style"]},{"location":"developers/events/list/","title":"Events list","text":"Event name With Magento or since OpenMage <code>[eventPrefix]</code>_after 1.9.4.5 <code>[eventPrefix]</code>_clear 1.9.4.5 <code>[eventPrefix]</code>_delete_after 1.9.4.5 <code>[eventPrefix]</code>_delete_after_done 1.9.4.5 <code>[eventPrefix]</code>_delete_before 1.9.4.5 <code>[eventPrefix]</code>_delete_commit_after 1.9.4.5 <code>[eventPrefix]</code>_finish_before 1.9.4.5 <code>[eventPrefix]</code>_import_data_before 1.9.4.5 <code>[eventPrefix]</code>_init_virtual_grid_columns 1.9.4.5 <code>[eventPrefix]</code>_load_gallery_before 1.9.4.5 <code>[eventPrefix]</code>_merge_after 1.9.4.5 <code>[eventPrefix]</code>_merge_before 1.9.4.5 <code>[eventPrefix]</code>_move_after 1.9.4.5 <code>[eventPrefix]</code>_move_before 1.9.4.5 <code>[eventPrefix]</code>_save_after 1.9.4.5 <code>[eventPrefix]</code>_save_attribute_after 1.9.4.5 <code>[eventPrefix]</code>_save_attribute_before 1.9.4.5 <code>[eventPrefix]</code>_save_before 1.9.4.5 <code>[eventPrefix]</code>_save_commit_after 1.9.4.5 <code>[eventPrefix]</code>_set_sales_order 1.9.4.5 <code>[eventPrefix]</code>_update_grid_records 1.9.4.5 add_synchronize_message 1.9.4.5 admin_permissions_role_prepare_save 1.9.4.5 admin_session_user_login_failed 1.9.4.5 admin_session_user_login_success 1.9.4.5 admin_system_config_changed_section_[section] 1.9.4.5 admin_system_config_changed_section_currency 1.9.4.5 admin_system_config_changed_section_currency_before_reinit 1.9.4.5 admin_system_config_section_save_after 1.9.4.5 admin_user_authenticate_after 1.9.4.5 admin_user_authenticate_before 1.9.4.5 admin_user_validate 1.9.4.5 adminhtml_block_eav_attribute_edit_form_init 1.9.4.5 adminhtml_block_promo_widget_chooser_prepare_collection 1.9.4.5 adminhtml_block_salesrule_actions_prepareform 1.9.4.5 adminhtml_block_system_config_init_tab_sections_before 1.9.4.5 adminhtml_block_widget_form_init_form_values_after 19.4.12 / 20.0.8 adminhtml_block_widget_tabs_html_before 19.4.12 / 20.0.8 adminhtml_cache_flush_all 1.9.4.5 adminhtml_cache_flush_system 1.9.4.5 adminhtml_cache_refresh_type 1.9.4.5 adminhtml_catalog_category_edit_prepare_form 1.9.4.5 adminhtml_catalog_category_tabs 1.9.4.5 adminhtml_catalog_category_tree_can_add_root_category 1.9.4.5 adminhtml_catalog_category_tree_can_add_sub_category 1.9.4.5 adminhtml_catalog_category_tree_is_moveable 1.9.4.5 adminhtml_catalog_product_attribute_edit_prepare_form 1.9.4.5 adminhtml_catalog_product_attribute_set_main_html_before 1.9.4.5 adminhtml_catalog_product_attribute_set_toolbar_main_html_before 1.9.4.5 adminhtml_catalog_product_edit_tab_attributes_create_html_before 1.9.4.5 adminhtml_catalog_product_form_prepare_excluded_field_list 1.9.4.5 adminhtml_catalog_product_grid_prepare_massaction 1.9.4.5 adminhtml_cms_page_edit_tab_content_prepare_form 1.9.4.5 adminhtml_cms_page_edit_tab_design_prepare_form 1.9.4.5 adminhtml_cms_page_edit_tab_main_prepare_form 1.9.4.5 adminhtml_cms_page_edit_tab_meta_prepare_form 1.9.4.5 adminhtml_cms_page_grid_renderer_action_before_render 1.9.4.5 adminhtml_controller_action_predispatch_start 1.9.4.5 adminhtml_controller_catalogrule_prepare_save 1.9.4.5 adminhtml_controller_salesrule_prepare_save 1.9.4.5 adminhtml_customer_orders_add_action_renderer 1.9.4.5 adminhtml_customer_prepare_save 1.9.4.5 adminhtml_customer_save_after 1.9.4.5 adminhtml_init_system_config 1.9.4.5 adminhtml_promo_catalog_edit_tab_main_prepare_form 1.9.4.5 adminhtml_promo_quote_edit_tab_coupons_form_prepare_form 1.9.4.5 adminhtml_promo_quote_edit_tab_main_prepare_form 1.9.4.5 adminhtml_sales_order_create_process_data 1.9.4.5 adminhtml_sales_order_create_process_data_before 1.9.4.5 adminhtml_sales_order_create_save_before 19.4.10 / 20.0.6 adminhtml_sales_order_creditmemo_register_before 1.9.4.5 adminhtml_store_edit_form_prepare_form 1.9.4.5 adminhtml_system_config_advanced_disableoutput_render_before 1.9.4.5 adminhtml_widget_container_html_before 1.9.4.5 adminhtml_widget_grid_filter_collection 1.9.4.5 after_reindex_process_[getIndexerCode] 1.9.4.5 ajax_cart_remove_item_success 1.9.4.5 api_server_adapter_jsonrpc_run_after 20.1.1 api_user_authenticated 1.9.4.5 api_user_html_before 1.9.4.5 application_clean_cache 1.9.4.5 bundle_product_view_config 1.9.4.5 catalog_block_product_list_collection 1.9.4.5 catalog_block_product_status_display 1.9.4.5 catalog_category_change_products 1.9.4.5 catalog_category_flat_loadnodes_before 1.9.4.5 catalog_category_prepare_save 1.9.4.5 catalog_controller_category_delete 1.9.4.5 catalog_controller_category_init_after 1.9.4.5 catalog_controller_category_init_before 1.9.4.5 catalog_controller_product_delete 1.9.4.5 catalog_controller_product_init 1.9.4.5 catalog_controller_product_init_after 1.9.4.5 catalog_controller_product_init_before 1.9.4.5 catalog_controller_product_mass_status 1.9.4.5 catalog_controller_product_view 1.9.4.5 catalog_helper_output_construct 1.9.4.5 catalog_model_product_duplicate 1.9.4.5 catalog_product_attribute_update_after 1.9.4.5 catalog_product_attribute_update_before 1.9.4.5 catalog_product_collection_apply_limitations_after 1.9.4.5 catalog_product_collection_apply_limitations_before 1.9.4.5 catalog_product_collection_before_add_count_to_categories 1.9.4.5 catalog_product_collection_load_after 1.9.4.5 catalog_product_collection_load_before 1.9.4.5 catalog_product_compare_add_product 1.9.4.5 catalog_product_compare_item_collection_clear 1.9.4.5 catalog_product_compare_remove_product 1.9.4.5 catalog_product_edit_action 1.9.4.5 catalog_product_edit_form_render_recurring 1.9.4.5 catalog_product_flat_prepare_columns 1.9.4.5 catalog_product_flat_prepare_indexes 1.9.4.5 catalog_product_flat_rebuild 1.9.4.5 catalog_product_flat_update_product 1.9.4.5 catalog_product_gallery_prepare_layout 1.9.4.5 catalog_product_gallery_upload_image_after 1.9.4.5 catalog_product_import_finish_before 1.9.4.5 catalog_product_is_salable_after 1.9.4.5 catalog_product_is_salable_before 1.9.4.5 catalog_product_media_add_image 1.9.4.5 catalog_product_media_save_before 1.9.4.5 catalog_product_new_action 1.9.4.5 catalog_product_status_update 1.9.4.5 catalog_product_stock_item_mass_change 1.9.4.5 catalog_product_to_website_change 1.9.4.5 catalog_product_type_grouped_price 1.9.4.5 catalog_product_type_prepare_[processMode]_options 1.9.4.5 catalog_product_upsell 1.9.4.5 catalog_product_website_update 1.9.4.5 catalog_product_website_update_before 1.9.4.5 catalogindex_get_minimal_price 1.9.4.5 catalogindex_plain_reindex_after 1.9.4.5 catalogsearch_index_process_complete 1.9.4.5 catalogsearch_index_process_start 1.9.4.5 catalogsearch_reset_search_result 1.9.4.5 catalogsearch_searchable_attributes_load_after 1.9.4.5 category_move 1.9.4.5 category_prepare_ajax_response 1.9.4.5 checkout_allow_guest 1.9.4.5 checkout_block_cart_sidebar_aftertohtml 1.9.4.5 checkout_cart_add_product_complete 1.9.4.5 checkout_cart_product_add_after 1.9.4.5 checkout_cart_product_add_before 19.4.4 / 20.0.0 checkout_cart_product_update_after 1.9.4.5 checkout_cart_save_after 1.9.4.5 checkout_cart_save_before 1.9.4.5 checkout_cart_update_item_complete 1.9.4.5 checkout_cart_update_items_after 1.9.4.5 checkout_cart_update_items_before 1.9.4.5 checkout_controller_multishipping_shipping_post 1.9.4.5 checkout_multishipping_controller_success_action 1.9.4.5 checkout_multishipping_refund_all 1.9.4.5 checkout_onepage_controller_success_action 1.9.4.5 checkout_quote_destroy 1.9.4.5 checkout_quote_init 1.9.4.5 checkout_type_multishipping_create_orders_single 1.9.4.5 checkout_type_multishipping_set_shipping_items 1.9.4.5 checkout_type_onepage_save_order 1.9.4.5 clean_catalog_images_cache_after 1.9.4.5 clean_configurable_swatches_cache_after 1.9.4.5 clean_media_cache_after 1.9.4.5 clear_expired_quotes_before 1.9.4.5 cms_controller_router_match_before 1.9.4.5 cms_generate_breadcrumbs 1.9.4.5 cms_page_get_available_statuses 1.9.4.5 cms_page_prepare_save 1.9.4.5 cms_page_render 1.9.4.5 cms_wysiwyg_config_prepare 1.9.4.5 cms_wysiwyg_images_static_urls_allowed 1.9.4.5 controller_action_layout_generate_blocks_after 1.9.4.5 controller_action_layout_generate_blocks_before 1.9.4.5 controller_action_layout_generate_xml_before 1.9.4.5 controller_action_layout_load_before 1.9.4.5 controller_action_layout_render_before 1.9.4.5 controller_action_layout_render_before_[getFullActionName] 1.9.4.5 controller_action_nocookies 1.9.4.5 controller_action_noroute 1.9.4.5 controller_action_postdispatch 1.9.4.5 controller_action_postdispatch_[getFullActionName] 1.9.4.5 controller_action_postdispatch_[getRouteName] 1.9.4.5 controller_action_predispatch 1.9.4.5 controller_action_predispatch_[getFullActionName] 1.9.4.5 controller_action_predispatch_[getRouteName] 1.9.4.5 controller_front_init_before 1.9.4.5 controller_front_init_routers 1.9.4.5 controller_front_send_response_after 1.9.4.5 controller_front_send_response_before 1.9.4.5 controller_response_redirect 1.9.4.5 core_app_run_after 20.1.0 core_block_abstract_prepare_layout_after 1.9.4.5 core_block_abstract_prepare_layout_before 1.9.4.5 core_block_abstract_to_html_after 1.9.4.5 core_block_abstract_to_html_before 1.9.4.5 core_clean_cache 1.9.4.5 core_collection_abstract_load_after 1.9.4.5 core_collection_abstract_load_before 1.9.4.5 core_copy_fieldset_[fieldset]_[aspect] 1.9.4.5 core_layout_block_create_after 1.9.4.5 core_locale_set_locale 1.9.4.5 core_session_abstract_add_message 1.9.4.5 core_session_abstract_clear_messages 1.9.4.5 create_order_session_quote_initialized 1.9.4.5 currency_display_options_forming 1.9.4.5 custom_quote_process 1.9.4.5 customer_address_format 1.9.4.5 customer_address_validation_after 1.9.4.5 customer_controller_account_login_post_redirect_before 20.4.0 customer_customer_authenticated 1.9.4.5 customer_login 1.9.4.5 customer_logout 1.9.4.5 customer_register_success 1.9.4.5 customer_registration_is_allowed 1.9.4.5 customer_session_init 1.9.4.5 eav_collection_abstract_load_before 1.9.4.5 email_queue_send_before 19.5.0 / 20.1.0 email_queue_send_after 19.5.0 / 20.1.0 email_send_before 19.5.0 / 20.1.0 email_send_after 19.5.0 / 20.1.0 email_template_send_before 19.5.0 / 20.1.0 email_template_send_after 19.5.0 / 20.1.0 end_index_events_[getEventTypeName] 1.9.4.5 end_process_event_[getEventTypeName] 1.9.4.5 gift_options_prepare_items 1.9.4.5 googleanalytics_ga4_send_data_before 20.1.1 http_response_send_before 1.9.4.5 index_process_change_status 1.9.4.5 init_from_order_session_quote_initialized 1.9.4.5 load_customer_quote_before 1.9.4.5 log_log_clean_after 1.9.4.5 log_log_clean_before 1.9.4.5 log_visitor_collection_load_before 1.9.4.5 mage_run_installed_exception 20.7.0 mage_run_exception 1.9.4.5 model_config_data_save_before 1.9.4.5 model_delete_after 1.9.4.5 model_delete_before 1.9.4.5 model_delete_commit_after 1.9.4.5 model_load_after 1.9.4.5 model_load_before 1.9.4.5 model_save_after 1.9.4.5 model_save_before 1.9.4.5 model_save_commit_after 1.9.4.5 newsletter_send_before 19.5.0 / 20.1.0 newsletter_send_after 19.5.0 / 20.1.0 on_view_report 1.9.4.5 order_cancel_after 1.9.4.5 order_status_changed_before_save 19.5.0 / 20.1.0 page_block_html_topmenu_gethtml_after 1.9.4.5 page_block_html_topmenu_gethtml_before 1.9.4.5 payment_form_block_to_html_before 1.9.4.5 payment_info_block_prepare_specific_information 1.9.4.5 payment_method_is_active 1.9.4.5 paypal_prepare_line_items 1.9.4.5 pdf_item_draw_after 1.9.4.5 permissions_block_html_before 1.9.4.5 permissions_orphanedresource_html_before 20.2.1 permissions_user_html_before 1.9.4.5 permissions_variable_html_before 1.9.4.5 poll_vote_add 1.9.4.5 prepare_product_children_id_list_select 1.9.4.5 product_duplicate_attributes 1.9.4.5 product_option_renderer_init 1.9.4.5 resource_get_tablename 1.9.4.5 review_controller_product_init 1.9.4.5 review_controller_product_init_after 1.9.4.5 review_controller_product_init_before 1.9.4.5 review_review_collection_load_before 1.9.4.5 rss_catalog_category_xml_callback 1.9.4.5 rss_catalog_new_xml_callback 1.9.4.5 rss_catalog_notify_stock_collection_select 1.9.4.5 rss_catalog_review_collection_select 1.9.4.5 rss_catalog_special_xml_callback 1.9.4.5 rss_catalog_tagged_item_xml_callback 1.9.4.5 rss_order_new_collection_select 1.9.4.5 rss_wishlist_xml_callback 1.9.4.5 rule_environment_collect 1.9.4.5 sales_convert_order_item_to_quote_item 1.9.4.5 sales_convert_quote_address_to_order 1.9.4.5 sales_convert_quote_address_to_order_address 1.9.4.5 sales_convert_quote_item_to_order_item 1.9.4.5 sales_convert_quote_payment_to_order_payment 1.9.4.5 sales_convert_quote_to_order 1.9.4.5 sales_model_service_quote_submit_after 1.9.4.5 sales_model_service_quote_submit_before 1.9.4.5 sales_model_service_quote_submit_failure 1.9.4.5 sales_model_service_quote_submit_success 1.9.4.5 sales_order_creditmemo_cancel 1.9.4.5 sales_order_creditmemo_refund_before 19.4.15 / 20.0.13 sales_order_creditmemo_refund 1.9.4.5 sales_order_invoice_cancel 1.9.4.5 sales_order_invoice_pay 1.9.4.5 sales_order_invoice_register 1.9.4.5 sales_order_item_cancel 1.9.4.5 sales_order_payment_cancel 1.9.4.5 sales_order_payment_cancel_creditmemo 1.9.4.5 sales_order_payment_cancel_invoice 1.9.4.5 sales_order_payment_capture 1.9.4.5 sales_order_payment_pay 1.9.4.5 sales_order_payment_place_end 1.9.4.5 sales_order_payment_place_start 1.9.4.5 sales_order_payment_refund 1.9.4.5 sales_order_payment_void 1.9.4.5 sales_order_place_after 1.9.4.5 sales_order_place_before 1.9.4.5 sales_order_status_unassign_before 1.9.4.5 sales_prepare_amount_expression 1.9.4.5 sales_quote_add_item 1.9.4.5 sales_quote_config_get_product_attributes 1.9.4.5 sales_quote_item_collection_products_after_load 1.9.4.5 sales_quote_item_qty_set_after 1.9.4.5 sales_quote_item_set_product 1.9.4.5 sales_quote_product_add_after 1.9.4.5 sales_quote_remove_item 1.9.4.5 sales_sale_collection_query_before 1.9.4.5 salesrule_rule_condition_combine 1.9.4.5 salesrule_rule_get_coupon_types 1.9.4.5 salesrule_validator_process 1.9.4.5 sendfriend_product 1.9.4.5 sitemap_categories_generating_before 1.9.4.5 sitemap_cms_pages_generating_before 19.4.0 / 20.0.0 sitemap_products_generating_before 1.9.4.5 sitemap_urlset_generating_before 19.4.0 / 20.0.0 start_index_events_[getEventTypeName] 1.9.4.5 start_process_event_[getEventTypeName] 1.9.4.5 store_add 1.9.4.5 store_delete 1.9.4.5 store_edit 1.9.4.5 store_group_save 1.9.4.5 tag_tag_product_collection_load_after 1.9.4.5 tax_rate_data_fetch 1.9.4.5 visitor_init 1.9.4.5 wishlist_add_item 1.9.4.5 wishlist_add_product 1.9.4.5 wishlist_item_add_after 1.9.4.5 wishlist_item_collection_products_after_load 1.9.4.5 wishlist_items_renewed 1.9.4.5 wishlist_product_add_after 1.9.4.5 wishlist_share 1.9.4.5 wishlist_update_item 1.9.4.5","tags":["Events"]},{"location":"developers/samples/php-ini/","title":"<code>php.ini</code>","text":"<pre><code>; This file is for CGI/FastCGI installations\n; Try copying it to php7.ini or php8 if it doesn't work\n\n; Adjust memory limit\n\nmemory_limit = 64M\nmax_execution_time = 18000\n\n; Disable magic quotes for PHP request vars\n\nmagic_quotes_gpc = off\n\n; Disable automatic session start before autoload was initialized\n\nflag session.auto_start = off\n\n; Enable resulting html compression\n\nzlib.output_compression = on\n\n; Disable user agent verification to not break multiple image upload\n\nsuhosin.session.cryptua = off\n\n; If this line is missing in local php.ini for some reason PHP ignores this setting in system php.ini and disables mcrypt \n\nextension=mcrypt.so\n\n; Disable PHP errors, notices and warnings output in production mode to prevent exposing sensitive information\n\ndisplay_errors = Off\n</code></pre>"},{"location":"developers/samples/robots-txt/","title":"<code>robots.txt</code>","text":"<pre><code>############################################\n## For more information about the robots.txt standard visit\n## http://www.robotstxt.org/orig.html\n##\n## For syntax checking visit\n## http://tool.motoricerca.info/robots-checker.phtml\n\n############################################\n## Crawl the Sitemap. Set the correct URL before uncomment\n\n# Sitemap: https://example.com/sitemap.xml\n\n############################################\n## Crawlers Setup\n\nUser-agent: *\n\n## How many seconds a crawler should wait before loading and crawling page content\n## Set a custom crawl rate if you are experiencing traffic issues with your server\n## https://www.contentkingapp.com/academy/robotstxt/faq/crawl-delay-10/\n\nCrawl-delay: 10\n\n############################################\n## Allow to crawl paging (paging inside a listing with more params are disallowed below)\n\nAllow: /*?p=\n\n############################################\n## Do not crawl non-SEF paths and generated content (if you use a store id in URL you must prefix with * or copy for each store)\n\nDisallow: */index.php/\nDisallow: */catalog/product_compare/\nDisallow: */catalog/category/view/\nDisallow: */catalog/product/view/\nDisallow: */catalog/product/gallery/\nDisallow: */catalogsearch/\n#Allow: */catalogsearch/seo_sitemap\n#Allow: */catalogsearch/term/popular\nDisallow: */checkout/\nDisallow: */control/\nDisallow: */contacts/\nDisallow: */customer/\nDisallow: */customize/\nDisallow: */newsletter/\nDisallow: */poll/\nDisallow: */review/\nDisallow: */sales/\nDisallow: */sendfriend/\nDisallow: */tag/\nDisallow: */wishlist/\n\n############################################\n## Do not crawl dynamic filters. Uncomment what you need or add custom filters\n\nDisallow: /*?dir*\nDisallow: /*?limit*\nDisallow: /*?mode*\nDisallow: /*?price=*\nDisallow: /*?___from_store=*\nDisallow: /*?___store=*\nDisallow: /*?q=*\n# Disallow: /*?cat=*\n# Disallow: /*?availability=*\n# Disallow: /*?brand=*\n\n############################################\n## Do not crawl paths that can be safely ignored by search engines (no clean URLs)\n\nDisallow: /*?p=*&amp;\nDisallow: /*.php$\nDisallow: /*?SID=\n\n############################################\n## Do not allow media indexing for the following bots\n## Disallow all or add custom paths. For example */media/ or */skin/\n\n# User-agent: baiduspider-image\n# Disallow: /\n# Disallow: */media/\n# Disallow: */skin/\n\n# User-agent: baiduspider-video\n# Disallow: /\n# Disallow: */media/\n# Disallow: */skin/\n\n# User-agent: msnbot-media\n# Disallow: /\n# Disallow: */media/\n# Disallow: */skin/\n\n# User-agent: Googlebot-Image\n# Disallow: /\n# Disallow: */media/\n# Disallow: */skin/\n\n# User-agent: Googlebot-Video\n# Disallow: /\n# Disallow: */media/\n# Disallow: */skin/\n</code></pre>"},{"location":"developers/tools/ddev/","title":"DDEV","text":"<p>DDEV is a powerful tool to set up and manage local PHP development environments. It is a Docker-based wrapper that provides many useful features for developers out of the box.</p> <p>To install OpenMage in seconds, follow the DDEV installation guide.</p> <p>Docker only</p> <p>For development environment without dependencies aside from Docker, see the Docker Compose guide.</p> <p>Test Environment for OpenMage in Windows 10 Based on DDEV</p> <p>For development environment with Windows 10, see this guide.</p>","tags":["Development"]},{"location":"developers/tools/ddev/#using-phpmyadmin","title":"Using phpMyAdmin","text":"<p>Run in the terminal window to install the phpMyAdmin add-on then restart DDEV.</p> <pre><code>ddev get ddev/ddev-phpmyadmin\n</code></pre> <p>To launch phpMyAdmin in the browser run in the terminal window.</p> <pre><code>ddev phpmyadmin\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#using-mailpit","title":"Using Mailpit","text":"<p>To launch Mailpit in the browser run in the terminal window.</p> <pre><code>ddev mailpit\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#setting-up-cron-tasks","title":"Setting up Cron tasks","text":"<p>Run in the terminal window <code>ddev get ddev/ddev-cron</code> to install the Cron add-on then restart DDEV.</p> <p>By default the OpenMage Cron runs every minute. If you want to change it edit the file <code>.ddev/web-build/openmage.cron</code>.</p> <p>You can set the OpenMage Cron using DDEV hooks, but you must comment all the lines in the file <code>.ddev/web-build/openmage.cron</code>. Edit the file <code>.ddev/config.yaml</code> and insert the following lines</p> <pre><code>hooks:\n  post-start:\n    - exec: printf \"SHELL=/bin/bash\\n* * * * * /var/www/html/cron.sh\\n\" | crontab\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#enabling-the-developer-mode","title":"Enabling the Developer Mode","text":"<p>Set environment variables editing the file <code>.ddev/config.yaml</code>. If you want to enable the Developer Mode insert the following lines</p> <pre><code>web_environment: [\n    MAGE_IS_DEVELOPER_MODE=1\n]\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#using-with-phpstorm","title":"Using with PhpStorm","text":"","tags":["Development"]},{"location":"developers/tools/ddev/#xdebug","title":"Xdebug","text":"<p>Every DDEV project is automatically configured with Xdebug so that popular IDE can do step debugging of PHP code. Xdebug is a server-side tool and it is installed automatically in the container so you do not have to install or configure it on your workstation. Xdebug is disabled by default for performance reasons, so you will need to enable it and configure your IDE before can start debugging. For more information, please visit Step Debugging with Xdebug.</p> <p>Run the following commands in the terminal window to enable or disable Xdebug</p> <p><pre><code>ddev xdebug on`\n</code></pre> <pre><code>ddev xdebug off\n</code></pre></p> <p>If Xdebug does not work properly with PhpStorm edit the file <code>.ddev/php/xdebug.ini</code> and insert the following lines</p> <pre><code>[xdebug]\nxdebug.mode=debug\nxdebug.start_with_request=trigger\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#accessing-the-database","title":"Accessing the database","text":"<p>Please note that DDEV changes the port numbers on every restart. If you want to access the database in PhpStorm you must set up a fixed port. Edit the file <code>.ddev/config.yaml</code> and insert the following line</p> <pre><code>host_db_port: 6000\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#using-browsersync","title":"Using Browsersync","text":"<ul> <li>GitHub repository</li> </ul> <p>Browsersync features live reloads, click mirroring, network throttling. Run the following commands in the terminal window</p> <pre><code>ddev get ddev/ddev-browsersync\nddev restart\nddev browsersync\n</code></pre>","tags":["Development"]},{"location":"developers/tools/ddev/#installing-compass","title":"Installing Compass","text":"<p>See: https://compass-style.org</p> <p>Compass is required for editing SCSS files.</p> <p>Create a new file named <code>.ddev/web-build/Dockerfile.ddev-compass</code> and insert the following lines</p> <pre><code>ARG BASE_IMAGE\nFROM $BASE_IMAGE\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y -o Dpkg::Options::=\"--force-confold\" --no-install-recommends --no-install-suggests build-essential ruby-full rubygems\nRUN gem install compass\n</code></pre> <p>For more information, please visit How can I get SASS/Compass into the DDEV web container?.</p>","tags":["Development"]},{"location":"developers/tools/ddev/#commands","title":"Commands","text":"","tags":["Development"]},{"location":"developers/tools/ddev/#creating-a-command","title":"Creating a command","text":"<p>Create a new file named <code>phpstan</code> in the <code>.ddev/commands/web</code> directory and insert the following lines</p> <pre><code>#!/bin/bash\n\n## Description: run PHPStan\n## Usage: phpstan\n## Example: ddev phpstan &lt;path-to-files&gt;\n\nphp vendor/bin/phpstan analyze -c .github/phpstan.neon \"$@\"\n</code></pre> <p>Run in the terminal window <code>ddev phpstan</code>.</p>","tags":["Development"]},{"location":"developers/tools/ddev/#openmage-commands","title":"OpenMage commands","text":"<p>1. If you want to install the <code>Magento Sample Data</code> run in the terminal window <code>ddev openmage-install</code> and follow the steps.</p> <p>You can use flags, for example <code>ddev openmage-install -d -s -k -q</code></p> <ul> <li><code>-d</code> (default values for the administrator account)</li> <li><code>-s</code> (sample-data installation)</li> <li><code>-k</code> (keeps the downloaded archive in the <code>.ddev/.sampleData</code> directory)</li> <li><code>-q</code> (quiet mode)</li> </ul> <p>2. By default, running the <code>ddev config</code> command does not create an administrator account. If you want to create or update one run in the terminal window <code>ddev openmage-admin</code> and follow the steps.</p>","tags":["Development"]},{"location":"developers/tools/ddev/#useful-commands","title":"Useful commands","text":"<p>See: Commands</p> <p>Run in the terminal window any of the following commands for different tasks.</p> <p>Create or modify a DDEV project\u2019s configuration in the current directory</p> <p><code>ddev config</code></p> <p>Get a detailed description of a running DDEV project</p> <p><code>ddev describe</code></p> <p>List Projects</p> <p><code>ddev list</code></p> <p>Start / Stop / Restart / Completely stop all project and containers</p> <p><code>ddev start</code>, <code>ddev stop</code>, <code>ddev restart</code>, <code>ddev poweroff</code></p> <p>Launch a browser with the current site</p> <p><code>ddev launch</code></p> <p>Execute Composer commands within a web container</p> <p><code>ddev composer install</code>, <code>ddev composer update</code>, <code>ddev composer require openmage/module-mage-backup</code></p> <p>Run npm inside the web container</p> <p><code>ddev npm install</code>, <code>ddev npm update</code></p> <p>Enable or disable Xdebug</p> <p><code>ddev xdebug on</code>, <code>ddev xdebug off</code>, <code>ddev xdebug status</code></p> <p>Create a database snapshot for one or more projects</p> <p><code>ddev snapshot --name my_snapshot_name</code>, <code>ddev snapshot --list</code>, <code>ddev snapshot --cleanup</code>, <code>ddev snapshot restore</code></p> <p>Import or export a SQL file into the project</p> <p><code>ddev import-db --src=magento_sample_data.sql</code>, <code>ddev export-db --target-db=db --file=om_db.sql.gz</code>, <code>ddev import-files --src=om_media.tar.gz</code></p> <p>Download DDEV adds-on</p> <p><code>ddev get --list</code>, <code>ddev get drud/ddev/cron</code></p> <p>Run MYSQL client in the database container / Run <code>php</code> inside the web container / Stars a shell session in a service container / Execute a shell command in the container</p> <p><code>ddev mysql</code>, <code>ddev php</code>, <code>ddev ssh</code>, <code>ddev exec</code></p> <p>Get the logs from your running services</p> <p><code>ddev logs</code>, <code>ddev logs -f</code>, <code>ddev logs -s db</code></p> <p>Enable or disable a service</p> <p><code>ddev service enable</code>, <code>ddev service disable</code></p> <p>Remove all information, including the database, from a project</p> <p><code>ddev delete</code>, <code>ddev delete images</code></p> <p>Removes items DDEV has created</p> <p><code>ddev clean --dry-run -all</code>, <code>ddev clean</code></p>","tags":["Development"]},{"location":"developers/tools/ddev/#using-mkcert-for-secured-connections","title":"Using mkcert for secured connections","text":"<ul> <li>GitHub repsitory</li> </ul> <p>mkcert is a simple tool for making locally-trusted development certificates. If you use (Windows 10/11 + WSL + Docker), first install the mkcert package in Windows then copy the certificates files associated to the current user into the Linux distribution.</p> <p>For example, copy <code>rootCA.pem</code> and <code>rootCA-key.pem</code></p> <p>From: <pre><code>C:\\Users\\&lt;User Name&gt;\\AppData\\Local\\mkcert\n</code></pre> To: <pre><code>/home/&lt;user_name&gt;/.local/share/mkcert\n</code></pre></p>","tags":["Development"]},{"location":"developers/tools/ddev/#installing-openmage-in-the-browser","title":"Installing OpenMage in the browser","text":"<p>If you want to install OpenMage in the browser rename or delete the <code>/app/etc/local.xml</code> file.</p> <p>For the database connection use the following information</p> <ul> <li>Host: db</li> <li>Database Name: db</li> <li>User Name: db</li> <li>User Password: db</li> </ul> <p></p>","tags":["Development"]},{"location":"developers/tools/n98-magerun/","title":"n98-magerun","text":"<ul> <li>GitHub repository</li> </ul>","tags":["Development"]},{"location":"developers/tools/n98-magerun/#using-n98-magerun","title":"Using n98-magerun","text":"<p>You can use the Swiss army knife for Magento developers, system-admins and DevOps. The tool provides a huge set of well tested command line commands which save hours of work time.</p> <p>Run any n98-magerun command in the terminal window by adding <code>ddev</code> in front of it. For example <code>ddev magerun sys:info</code> print information about the current OpenMage system.</p> <p>For more information about the available commands please visit official documentation.</p>","tags":["Development"]},{"location":"developers/tools/oneline/","title":"Docker Compose","text":"<p>For a quick and easy way to get started developing on OpenMage, you can use the following one-line command to install OpenMage with Docker Compose.</p> <p>Info</p> <p>If you prefer a more robust development environment, consider using DDEV.</p> <pre><code>git clone https://github.com/OpenMage/magento-lts.git &amp;&amp; cd magento-lts &amp;&amp; dev/openmage/install.sh \n</code></pre> <p>This will clone the OpenMage repository, create a new Docker Compose product named <code>openmage</code> and run the installation. Visit http://openmage-7f000001.nip.io/ and start coding!</p> <p>Info</p> <p>If you want to install the <code>Magento Sample Data</code> run the command with the environment variable <code>SAMPLE_DATA=1</code> like so:</p> <pre><code>git clone https://github.com/OpenMage/magento-lts.git &amp;&amp; cd magento-lts &amp;&amp; SAMPLE_DATA=1 dev/openmage/install.sh\n</code></pre>","tags":["Development"]},{"location":"developers/tools/oneline/#prerequisites","title":"Prerequisites","text":"<ul> <li>Install Docker</li> <li>Port 80 on your host must be unused. See Environment Variables below if you need to use another port.</li> </ul>","tags":["Development"]},{"location":"developers/tools/oneline/#tips","title":"Tips","text":"<p>See colinmollenhour/docker-openmage for more information on the containers used in this setup, but here are some quick tips:</p> <ul> <li>You can start the Cron task using <code>docker compose up -d cron</code>.</li> <li>The <code>cli</code> service contains many useful tools like <code>composer</code>, <code>magerun</code>, <code>modman</code>, <code>mageconfigsync</code> and more.</li> <li>Xdebug is enabled using <code>remote_connect_back=1</code> with <code>idekey=phpstorm</code>. Customize this in <code>.env</code> if needed as described below.</li> </ul> <p>Here are some common commands you may wish to try (from the <code>dev/openmage</code> directory):</p> <pre><code>$ docker compose run --rm -u $(id -u):$(id -g) cli composer show\n$ docker compose run --rm -u $(id -u):$(id -g) cli bash\n$ docker compose run --rm cli magerun sys:check\n$ docker compose run --rm cli magerun cache:clean\n$ docker compose run --rm cli magerun db:console\n$ docker compose exec mysql mysql\n</code></pre> <ul> <li>The <code>cli</code> container runs as <code>www-data</code> by default so use <code>-u $(id -u):$(id -g)</code> with composer so that the container will create/modify files with your user permissions to avoid file permission errors in your IDE.</li> <li>Always use <code>run --rm</code> with the <code>cli</code> container to avoid creating lots of orphan containers.</li> </ul>","tags":["Development"]},{"location":"developers/tools/oneline/#environment-variables","title":"Environment Variables","text":"<p>You can override some defaults using environment variables defined in a file (that you must create) at <code>dev/openmage/.env</code>.</p> <ul> <li><code>XDEBUG_CONFIG=...</code> - Override the default Xdebug configuration</li> <li><code>HOST_NAME=your-preferred-hostname</code><ul> <li><code>openmage-7f000001.nip.io</code> is used by default to resolve to <code>127.0.0.1</code>. See nip.io for more info.</li> </ul> </li> <li><code>HOST_PORT=8888</code><ul> <li><code>80</code> is used by default</li> </ul> </li> <li><code>ADMIN_HOST_NAME</code><ul> <li><code>openmage-admin-7f000001.nip.io</code> is used by default to resolve to <code>127.0.0.1</code>. See nip.io for more info.</li> </ul> </li> <li><code>ADMIN_HOST_PORT</code><ul> <li><code>81</code> is used by default to avoid conflicts with the front-end port</li> </ul> </li> <li><code>ADMIN_EMAIL</code></li> <li><code>ADMIN_USERNAME</code></li> <li><code>ADMIN_PASSWORD</code> (must be 14 characters or more)</li> <li><code>ADMIN_FIRSTNAME</code></li> <li><code>ADMIN_LASTNAME</code></li> <li><code>MAGE_IS_DEVELOPER_MODE</code><ul> <li><code>1</code> is used by default, set to <code>0</code> to disable</li> </ul> </li> <li><code>CURRENCY</code><ul> <li><code>USD</code> is used by default</li> </ul> </li> <li><code>LOCALE</code><ul> <li><code>en-US</code> is used by default</li> </ul> </li> <li><code>TIMEZONE</code><ul> <li><code>America/New_York</code> is used by default</li> </ul> </li> <li><code>MYSQL_PORT</code><ul> <li><code>3306</code> is used by default</li> </ul> </li> <li><code>PM_MAX_CHILDREN</code> - Tune to your environment and needs - see PHP-FPM configuration</li> <li><code>PM_START_SERVERS</code></li> <li><code>PM_MIN_SPARE_SERVERS</code></li> <li><code>PM_MAX_SPARE_SERVERS</code></li> </ul>","tags":["Development"]},{"location":"developers/tools/oneline/#uninstalling-starting-over","title":"Uninstalling / Starting Over","text":"<p>If you want to start fresh, wipe out your installation with the following command (from the <code>dev/openmage</code> directory):</p> <pre><code>$ docker compose down --volumes &amp;&amp; rm -f ../../app/etc/local.xml\n</code></pre>","tags":["Development"]},{"location":"developers/tools/oneline/#production","title":"Production","text":"<p>You can easily have a multi-store SSL-protected environment using Docker with the <code>docker-compose-production.yml</code> file.</p> <p>Features included out of the box:</p> <ul> <li>Free and automatic SSL provided by Caddy</li> <li>Separate domains for front-end and admin sites</li> <li>Examples included for redirects, <code>BasicAuth</code>, multi-store routing</li> <li>Easily add routes to your other sites</li> <li>Root static assets (e.g. <code>robots.txt</code>) in a separate directory for each store view</li> </ul> <p>Warning</p> <p>Do not try to run a development environment and a production environment from the same working copy!</p> <p>If using OpenMage as a composer dependency, to avoid files being overwritten by composer upon updating OpenMage, it is recommended to copy the following files into your own project root and modify them as needed:</p> <ul> <li><code>dev/openmage/docker-compose-production.yml</code> \u2192 <code>docker-compose.yml</code></li> <li><code>dev/openmage/nginx-admin.conf</code> \u2192 <code>nginx-admin.conf</code></li> <li><code>dev/openmage/nginx-frontend.conf</code> \u2192 <code>nginx-frontend.conf</code></li> <li><code>dev/openmage/Caddyfile-sample</code> \u2192 <code>Caddyfile</code></li> <li><code>pub/admin/</code> \u2192 <code>static/admin/</code></li> <li><code>pub/default/{favicon.ico,robots.txt}</code> \u2192 <code>static/default/</code></li> </ul> <p>Then perform the following steps:</p> <ol> <li><code>echo \"COMPOSE_FILE=docker-compose-production.yml\" &gt;&gt; .env</code> to make the production stack the default</li> <li>Add <code>BASE_URL</code> and <code>ADMIN_URL</code> to your <code>.env</code> file</li> <li><code>cp Caddyfile-sample Caddyfile</code> and edit the <code>Caddyfile</code> to reflect your domain names and Magento store codes</li> <li>If you did not hard-code your admin domain name in <code>Caddyfile</code> edit <code>.env</code> and make sure it includes <code>ADMIN_HOST_NAME</code></li> <li>Run <code>docker compose up -d</code> to launch your new production-ready environment!</li> <li>Load your existing database into the MySQL container volume and copy an existing <code>local.xml</code> file into the <code>app/etc/</code> sub-directory of your OpenMage root (e.g. <code>pub/app/etc/local.xml</code> for composer installations with default <code>magento-root-dir</code>).<ol> <li>OR copy <code>dev/openmage/install.sh</code> into your root directory and run it to create a fresh installation.</li> </ol> </li> </ol> <p>Environment variables supported by the <code>docker-compose-production.yml</code> file and <code>install.sh</code> which may be set in <code>.env</code> when installing a new production environment:</p> <ul> <li><code>SRC_DIR=./pub</code> - relative path to the OpenMage root - corresponds to the composer <code>magento-root-dir</code></li> <li><code>STATIC_DIR=./static</code> - relative path to the directory which contains custom static files to be served from the root - must contain a sub-directory for <code>admin</code> and each store view.</li> <li><code>BASE_URL=https://frontend.example.com/</code> (overrides <code>HOST_NAME</code> and <code>HOST_PORT</code>)</li> <li><code>ADMIN_URL=https://backend.exmaple.com/</code> (overrides <code>ADMIN_HOST_NAME</code> and <code>ADMIN_HOST_PORT</code>)</li> </ul> <p>Warning</p> <p>Backups, intrusion protection and other security features are not provided and are left up to you! This is simply a web server configuration that adds an easy to configure and maintain SSL termination.</p>","tags":["Development"]},{"location":"developers/tools/oneline/#adding-more-store-views","title":"Adding more store views","text":"<ol> <li>Create your new website and/or store codes in OpenMage.</li> <li>Create new root static asset directories in your static asset directory such as <code>static/store1</code>, <code>static/store2</code>, etc\u2026</li> <li>Edit <code>Caddyfile</code> to map your domain name to the appropriate <code>runcode</code> and <code>runtype</code>.</li> <li>Configure the URLs in the System &gt; Configuration.</li> <li>Set up your DNS and relaunch <code>Caddy</code> (<code>docker compose restart caddy</code>).</li> </ol> <p>Mapping paths to different stores can be done using additional <code>reverse_proxy</code> declarations. See <code>@customfrontend</code> as an example.</p>","tags":["Development"]},{"location":"developers/tools/phpstorm/","title":"PhpStorm","text":"","tags":["Development","SCSS"]},{"location":"developers/tools/phpstorm/#metadata-factory-helper","title":"Metadata Factory Helper","text":"<p>This repository includes class maps for the core Magento files in <code>.phpstorm.meta.php</code>. To add class maps for installed extensions, you have to install N98-magerun and run command:</p> <pre><code>n98-magerun.phar dev:ide:phpstorm:meta\n</code></pre> <p>You can add additional meta files in this directory to cover your own project files. See PhpStorm advanced metadata for more information.</p>","tags":["Development","SCSS"]},{"location":"developers/tools/phpstorm/#file-watcher-for-scss-files","title":"File-Watcher for SCSS files","text":"<ul> <li>install SCSS   <pre><code>npm install -g sass\n</code></pre></li> <li>open settings <code>CTRL+ALT+S</code> and go to File Watcher</li> <li>change default setting to:<ul> <li>Arguments:   <pre><code>$FileName$:$FileParentDir$/$FileNameWithoutExtension$.css\n</code></pre></li> <li>Output paths to refresh:   <pre><code>$FilePare\n</code></pre></li> </ul> </li> </ul>","tags":["Development","SCSS"]},{"location":"users/requirements/","title":"Requirements","text":"<ul> <li>PHP 8.1+<sup>1</sup><ul> <li>PHP 8.4 supported but some warnings may be shown/logged</li> </ul> </li> <li>MySQL 5.6+ (8.0+ recommended) or MariaDB</li> <li> <p>optional: Redis 5.x, 6.x and 7.0.x are supported</p> </li> <li> <p>PHP extension <code>intl</code><sup>2</sup></p> </li> <li>Command <code>patch</code> 2.7+ (or <code>gpatch</code> on macOS/Homebrew)<sup>3</sup></li> </ul> <ol> <li> <p>since 20.14.0\u00a0\u21a9</p> </li> <li> <p>since 1.9.4.19 &amp; 20.0.17\u00a0\u21a9</p> </li> <li> <p>since 1.9.5.0 &amp; 20.1.0\u00a0\u21a9</p> </li> </ol>","tags":["Install"]},{"location":"users/install/","title":"Installation","text":"<p>OpenMage provides different ways to install. We recommend to use Composer. If you want to contribute to the project, use Git.</p> <p>Info</p> <p>Since v20.11.0 installation from ZIP-archive is not supported anymore.</p>"},{"location":"users/install/secure-install/","title":"Secure installation","text":"","tags":["Install"]},{"location":"users/install/secure-install/#back-end-url","title":"Back-end URL","text":"<p>Don\u2019t use common paths like <code>admin</code> for OpenMage back-end URL. Don\u2019t use the path in <code>robots.txt</code> and keep it secret.</p> <p>You can change it from back-end (1) or by editing <code>app/etc/local.xml</code>:</p> <ol> <li>Admin / System / Configuration / Admin / Admin Base URL</li> </ol> <pre><code>&lt;config&gt;\n    &lt;admin&gt;\n        &lt;routers&gt;\n            &lt;adminhtml&gt;\n                &lt;args&gt;\n                    &lt;frontName&gt;&lt;![CDATA[admin]]&gt;&lt;/frontName&gt;\n                &lt;/args&gt;\n            &lt;/adminhtml&gt;\n        &lt;/routers&gt;\n    &lt;/admin&gt;\n&lt;/config&gt;\n</code></pre>","tags":["Install"]},{"location":"users/install/secure-install/#url-rewrites","title":"URL rewrites","text":"<p>Don\u2019t use common file names like <code>api.php</code> for OpenMage API URLs to prevent attacks. Don\u2019t use the new file name in <code>robots.txt</code> and keep it secret with your partners. After renaming the file you must update the web-server configuration as follows:</p> ApacheNginx <p>Apache .htaccess</p> <pre><code>RewriteRule ^api/rest api.php?type=rest [QSA,L]\n</code></pre> <p>Nginx configuration</p> <pre><code>rewrite ^/api/(\\w+).*$ /api.php?type=$1 last;`\n</code></pre>","tags":["Install"]},{"location":"users/install/use-composer/","title":"Composer Install","text":"","tags":["Install"]},{"location":"users/install/use-composer/#create-new-project","title":"Create new project","text":"<pre><code>composer init\n</code></pre>","tags":["Install"]},{"location":"users/install/use-composer/#configuration","title":"Configuration","text":"<p>The below options are required. You can see all options here.</p> <p>Allow composer to apply patches to dependencies of OpenMage <pre><code>composer config --json extra.enable-patching true\n</code></pre></p> <p>Configure Magento core composer installer to use OpenMage as the Magento source package <pre><code>composer config extra.magento-core-package-type magento-source\n</code></pre></p> <p>Configure root directory that OpenMage will be installed to, such as <code>pub</code>, <code>htdocs</code>, or <code>www</code> <pre><code>composer config extra.magento-root-dir pub\n</code></pre></p>","tags":["Install"]},{"location":"users/install/use-composer/#specify-php-engine-version","title":"Specify PHP engine version","text":"<p>This is not strictly required, but if you are running composer with a different PHP version than your target environment, specifying the engine version will ensure that the correct dependencies are installed for your target environment, ignoring the PHP engine used to run composer.</p> <pre><code>composer config platform.php 8.4\n</code></pre>","tags":["Install"]},{"location":"users/install/use-composer/#require-magento-core-composer-installer","title":"Require <code>magento-core-composer-installer</code>","text":"PHP 8PHP 7PHP \u215e <p>Only for PHP 8<sup>1</sup> <pre><code>composer require \"aydin-hassan/magento-core-composer-installer\":\"~2.1.0\"\n</code></pre></p> <p>Only for PHP 7<sup>1</sup> <pre><code>composer require \"aydin-hassan/magento-core-composer-installer\":\"^2.0.0\"\n</code></pre></p> <p>For PHP 7 and 8<sup>1</sup> <pre><code>composer require \"aydin-hassan/magento-core-composer-installer\":\"~2.0.0 || ^2.1.0\"\n</code></pre></p>","tags":["Install"]},{"location":"users/install/use-composer/#require-magento-lts","title":"Require <code>magento-lts</code>","text":"<code>v20</code><code>v19</code><code>dev-main</code><code>dev-next</code> <p>Latest tagged <code>v20</code> series release<sup>1</sup> <pre><code>composer require \"openmage/magento-lts\":\"^20.0.0\"\n</code></pre></p> <p>Legacy <code>v19</code> tagged release (Magento 1.9.4.x drop-in replacement supported until April 4, 2025)<sup>1</sup> <pre><code>composer require \"openmage/magento-lts\":\"^19.4.0\"\n</code></pre></p> <p>Latest on <code>main</code> development branch<sup>1</sup> <pre><code>composer require \"openmage/magento-lts\":\"dev-main\"\n</code></pre></p> <p>Latest on <code>next</code> development branch<sup>1</sup> <pre><code>composer require \"openmage/magento-lts\":\"dev-next\"\n</code></pre></p>","tags":["Install"]},{"location":"users/install/use-composer/#optimization","title":"Optimization","text":"<p>When deploying to a production environment, it\u2019s recommended to optimize Composer\u2019s auto-loader to speed up classes lookup time:</p> <pre><code>composer dump-autoload --optimize\n</code></pre> <ol> <li> <p>Select <code>y</code> to trust <code>magento-hackathon/magento-composer-installer</code> or <code>cweagans/composer-patches</code>. \u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>","tags":["Install"]},{"location":"users/install/use-git/","title":"Git (for contributors)","text":"<p>If you want to hack at the core and contribute to the project with a Pull Request, we\u2019re very grateful and hope you find it easy to contribute!</p> <ol> <li>Fork the project so you can push your commits later.</li> <li>Clone your fork to your development host with <code>git clone https://github.com/&lt;YOUR GIT USERNAME&gt;/magento-lts</code></li> <li>Use either the DDEV or the Docker Compose development environment to hack away.</li> <li>Commit and push your code up to your own fork from step 1.</li> <li>Create a Pull Request!</li> </ol>","tags":["Contribute","Install"]},{"location":"users/install/use-tarball/","title":"Manual Install","text":"<p>Download the latest release archive and extract it over your existing install.</p> <p>Important: you must download the ZIP file from a tagged version on the releases page, otherwise there will be missing dependencies.</p>","tags":["Install"]},{"location":"users/modules/","title":"Modules","text":"<p>An overview of some of the 3<sup>rd</sup>-party Modules available in the ecosystem grouped by Topic. You can find additional modules on Github and Packagist.</p>"},{"location":"users/modules/analytics/","title":"Analytics modules","text":"","tags":["Modules"]},{"location":"users/modules/analytics/#vianetzmatomo-magento1","title":"<code>vianetz/matomo-magento1</code>","text":"<p>A Magento 1 extension that allows you to get e-commerce transaction data into Matomo analytics.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require vianetz/matomo-magento1\n</code></pre>","tags":["Modules"]},{"location":"users/modules/backend/","title":"Back-end modules","text":"","tags":["Modules"]},{"location":"users/modules/backend/#empiricompanyopenmage-mm_monacoeditor","title":"<code>empiricompany/openmage-mm_monacoeditor</code>","text":"<p>OpenMage / Magento 1.9 module extension that integrate Monaco Editor with Emmet and Tailwind CSS IntelliSense in CMS Static Blocks / Pages</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require empiricompany/openmage-mm_monacoeditor\n</code></pre>","tags":["Modules"]},{"location":"users/modules/backend/#flagbitmagento-changeattributeset","title":"<code>flagbit/magento-changeattributeset</code>","text":"<p>In Magento every product has a fixed attribute set. This module enables you to switch it.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require firegento/logger\n</code></pre>","tags":["Modules"]},{"location":"users/modules/cache/","title":"Cache modules","text":"","tags":["Modules"]},{"location":"users/modules/cache/#colinmollenhourcm_diehard","title":"<code>colinmollenhour/Cm_Diehard</code>","text":"<p><code>Cm_Diehard</code> FPC</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require colinmollenhour/cm_diehard\n</code></pre>","tags":["Modules"]},{"location":"users/modules/cache/#fballianoopenmage-lesti-fpc","title":"<code>fballiano/openmage-lesti-fpc</code>","text":"<p>Simple Magento FPC.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require fballiano/openmage-lesti-fpc\n</code></pre>","tags":["Modules"]},{"location":"users/modules/cache/#luigifabopenmage-turpentine-varnish","title":"<code>luigifab/openmage-turpentine-varnish</code>","text":"<p>Updated version of Varnish connector for OpenMage.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require luigifab/openmage-turpentine-varnish\n</code></pre>","tags":["Modules"]},{"location":"users/modules/captcha/","title":"Captcha modules","text":"","tags":["Modules"]},{"location":"users/modules/captcha/#fballianoopenmage-cloudflare-turnstile","title":"<code>fballiano/openmage-cloudflare-turnstile</code>","text":"<p>Turnstile is a Cloudflare CAPTCHA alternative.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require fballiano/openmage-cloudflare-turnstile\n</code></pre>","tags":["Modules"]},{"location":"users/modules/captcha/#magento-hackathonhoneyspam","title":"<code>magento-hackathon/HoneySpam</code>","text":"<p>Spam protection module for various forms using honey pots.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require magento-hackathon/honeyspam\n</code></pre>","tags":["Modules"]},{"location":"users/modules/captcha/#empiricompanyrecaptcha","title":"<code>empiricompany/reCaptcha</code>","text":"<p>Clean integration of Google reCaptcha to OpenMage.</p> <p>Attention: This is a maintained fork compatible with the latest versions of OpenMage LTS.</p> <ul> <li>GitHub repository</li> </ul> <p>No composer install via packagist.org available.</p> <p>Add this repository to your composer.json or its forked repository. See https://github.com/ProxiBlue/reCaptcha.</p> <pre><code>composer require proxiblue/recaptcha\n</code></pre>","tags":["Modules"]},{"location":"users/modules/cron/","title":"Cron modules","text":"","tags":["Modules"]},{"location":"users/modules/cron/#aoepeopleaoe_scheduler","title":"<code>AOEpeople/Aoe_Scheduler</code>","text":"<p><code>Aoe_Scheduler</code> sits on top of Magento default Cron functionality allowing you to manage the jobs, to visualize the timeline and to get some deeper insight on what\u2019s going on behind the scenes and to shed some light on what might be going wrong.</p> <p>On top of that <code>Aoe_Scheduler</code> provides some more functionality like a CLI and a web service interface, optimizing Cron execution on your server and giving you everything you need to implement complex background tasks including for your Magento store.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require --dev aoepeople/aoe_scheduler\n</code></pre>","tags":["Modules"]},{"location":"users/modules/email/","title":"Email modules","text":"","tags":["Modules"]},{"location":"users/modules/email/#aschrodermagento-smtp-pro-email-extension","title":"<code>aschroder/Magento-SMTP-Pro-Email-Extension</code>","text":"<p>Magento 1 SMTP Pro Extension by Ashley Schroder</p> <p>Free and open-source email extension for Magento 1.x</p> <ul> <li>Easily send Magento transactional emails via Google Apps, Gmail, Amazon SES or your own SMTP server</li> <li>Test your configuration from the Magento admin</li> <li>View a log of all emails</li> <li>Improve deliverability with an external SMTP server</li> </ul> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require aschroder/smtp_pro\n</code></pre>","tags":["Modules"]},{"location":"users/modules/frontend/","title":"Front-end modules","text":"","tags":["Modules"]},{"location":"users/modules/frontend/#customgentocustomgento_productbadges","title":"<code>customgento/CustomGento_ProductBadges</code>","text":"<p>Product Badges for Magento 1 offers you the possibility to add highly individualized badges to your product images without having any performance impact.</p> <ul> <li>GitHub repository</li> </ul> <p>No composer install available.</p>","tags":["Modules"]},{"location":"users/modules/frontend/#fballianoopenmage-cssjs-versioning","title":"<code>fballiano/openmage-cssjs-versioning</code>","text":"<p>CSS/JS versioning module for OpenMage (and Magento 1.9).</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require fballiano/openmage-cssjs-versioning\n</code></pre>","tags":["Modules"]},{"location":"users/modules/frontend/#fballianoopenmage-defer-javascripts","title":"<code>fballiano/openmage-defer-javascripts</code>","text":"<p>Clean integration of Google reCaptcha to OpenMage.</p> <p>Attention: This is a maintained fork compatible with the latest versions of OpenMage LTS.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require fballiano/openmage-defer-javascripts\n</code></pre>","tags":["Modules"]},{"location":"users/modules/images/","title":"Image modules","text":"","tags":["Modules"]},{"location":"users/modules/images/#anhuy1989html5upload","title":"<code>anhuy1989/html5upload</code>","text":"<p>HTML5 Upload Image product and CMS.</p> <p>This Plugin enable the upload image width HTML5 it\u2019s possible upload multiple image.</p> <ul> <li>GitHub repository</li> </ul> <p>No composer install available.</p>","tags":["Modules"]},{"location":"users/modules/images/#colinmollenhourperfect_watermarks","title":"<code>colinmollenhour/Perfect_Watermarks</code>","text":"<p>Replacement for OpenMage GD2 image adapter with ImageMagick.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require colinmollenhour/perfect_watermarks\n</code></pre>","tags":["Modules"]},{"location":"users/modules/images/#fballianoopenmage-image-cleaner","title":"<code>fballiano/openmage-image-cleaner</code>","text":"<p>Image cleaner module for OpenMage (and Magento 1.9).</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require fballiano/openmage-image-cleaner\n</code></pre>","tags":["Modules"]},{"location":"users/modules/images/#yireomagento1-webp","title":"<code>yireo/magento1-webp</code>","text":"<p>Add WebP image support to your Magento pages.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require yireo/magento1-webp\n</code></pre>","tags":["Modules"]},{"location":"users/modules/log-debug/","title":"Log &amp; Debug modules","text":"","tags":["Modules"]},{"location":"users/modules/log-debug/#empiricompanyopenmage_ignition","title":"<code>empiricompany/openmage_ignition</code>","text":"<p>OpenMage <code>spatie/ignition</code> integration for OpenMage.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require empiricompany/openmage_ignition\n</code></pre>","tags":["Modules"]},{"location":"users/modules/log-debug/#firegentofiregento-adminmonitoring","title":"<code>firegento/firegento-adminmonitoring</code>","text":"<p>The admin monitoring logs nearly every save and delete call in the back-end. The is to generate an overview of the changes in the back-end to know who changed certain things.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require firegento/adminmonitoring\n</code></pre>","tags":["Modules"]},{"location":"users/modules/log-debug/#firegentologger","title":"<code>firegento/logger</code>","text":"<p>FireGento Logger is an advanced alternative to log messages and errors to multiple targets.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require firegento/logger\n</code></pre>","tags":["Modules"]},{"location":"users/modules/log-debug/#madalinopreamagneto-debug","title":"<code>madalinoprea/magneto-debug</code>","text":"<p>Development Debug Toolbar for Magento 1.x.</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require madalinoprea/magneto-debug\n</code></pre>","tags":["Modules"]},{"location":"users/modules/payment/","title":"Payment modules","text":"","tags":["Modules"]},{"location":"users/modules/payment/#empiricompanyopenmage-paypal-pay-later-banner-info","title":"<code>empiricompany/openmage-paypal-pay-later-banner-info</code>","text":"<p>Render PayPal Pay Later Messages in product page and cart page for Magento 1 / OpenMage</p> <ul> <li>GitHub repository</li> </ul> <pre><code>composer require empiricompany/openmage-paypal-pay-later-banner-info\n</code></pre>","tags":["Modules"]},{"location":"users/modules/payment/#justinbeatymodule-gene-braintree","title":"<code>justinbeaty/module-gene-braintree</code>","text":"<p>OpenMage compatible fork of Gene_Braintree module.</p> <p>This module has been updated to use the 6.x.x version of the Braintree PHP library <sup>2</sup>.</p> <p>No composer install via packagist.org available. <sup>1</sup></p> <p>Add this repository to your composer.json.</p>","tags":["Modules"]},{"location":"users/modules/payment/#hipayhipay-fullservice-sdk-magento1","title":"<code>hipay/hipay-fullservice-sdk-magento1</code>","text":"<p>The HiPay Enterprise extension for Magento v1 is a library that allows you to accept payments in your Magento online shop by leveraging the HiPay Enterprise payment platform.  <sup>3</sup></p>","tags":["Modules"]},{"location":"users/modules/payment/#molliemagento","title":"<code>mollie/Magento</code>","text":"<p><code>iDEAL</code>, <code>Creditcard</code>, <code>Bancontact</code>/<code>Mister Cash</code>, <code>SOFORT</code>, <code>Bank transfer</code>, <code>Bitcoin</code>, <code>PayPal</code> &amp; <code>paysafecard</code> for Magento https://www.mollie.com/.</p>","tags":["Modules"]},{"location":"users/modules/payment/#install","title":"Install <sup>4</sup>","text":"<pre><code>composer require mollie/magento\n</code></pre>","tags":["Modules"]},{"location":"users/modules/payment/#rvelhoteopennode-magento","title":"<code>rvelhote/opennode-magento</code>","text":"<p>Magento 1.9 Plugin for OpenNode Bitcoin Payment Gateway</p> <p>The module was only tested with the default theme and one-page checkout.</p> <p>No composer install via packagist.org available. <sup>5</sup></p> <ol> <li> <p>https://github.com/justinbeaty/module-gene-braintree \u21a9</p> </li> <li> <p>https://github.com/braintree/braintree_php \u21a9</p> </li> <li> <p>https://github.com/hipay/hipay-fullservice-sdk-magento1 \u21a9</p> </li> <li> <p>https://github.com/mollie/Magento \u21a9</p> </li> <li> <p>https://github.com/rvelhote/opennode-magento \u21a9</p> </li> </ol>","tags":["Modules"]},{"location":"users/modules/themes/frontend/","title":"Front-end themes","text":"","tags":["Modules"]},{"location":"users/modules/themes/frontend/#degriznetopenmagetheme","title":"<code>DegrizNet/OpenMageTheme</code>","text":"<p>This theme is designed to work seamlessly with OpenMage and includes optimizations for speed, achieving a 100/100 mobile score on Google PageSpeed Insights in 2024.</p> <ul> <li>GitHub repository</li> </ul>","tags":["Modules"]},{"location":"users/modules/themes/frontend/#demo","title":"Demo","text":"<ul> <li>https://demo.degriz.net/en/</li> </ul>","tags":["Modules"]},{"location":"users/modules/user-guides/swatches/","title":"Swatches guides","text":"<p>Find a good description at: Tutorial: Create Configurable Swatches in Magento 1.9.1</p>","tags":["Modules"]},{"location":"users/versioning/","title":"Releases and Versioning","text":""},{"location":"users/versioning/#semantic-versioning","title":"Semantic Versioning","text":"<p>This project more strictly adheres to Semantic Versioning compared to the original Magento version numbering system where the \u201c1\u201d was essentially a fixed number. See the Terminology section of RFC 0002 - Release Schedule for more information on how the terms MAJOR, MINOR and PATCH are defined and applied.</p> <p>The OpenMage team and community maintains OpenMage LTS versions as follows:</p> <ul> <li>The latest <code>MAJOR.MINOR</code> version always receives <code>PATCH</code> updates.</li> <li>The latest <code>MAJOR version</code> always receives <code>MINOR</code> updates.</li> <li>The latest <code>MAJOR.MINOR</code> branch for each <code>MAJOR</code> version receives <code>PATCH</code> updates for at least 2 years from the time of inception of the initial <code>MAJOR</code> version release.</li> </ul>"},{"location":"users/versioning/#in-a-nutshell","title":"In a nutshell","text":"<ul> <li>If you want to stay on the cutting edge with the latest improvements use the latest <code>MAJOR</code> version.</li> <li>If you want maximum backwards compatibility and minimal upgrade hassle use the next-latest <code>MAJOR</code> version so that you can still receive important security/stability/regression fixes.</li> </ul>"},{"location":"users/versioning/maintained/","title":"Currently Maintained","text":"<ul> <li><code>20.x</code> is the latest <code>MAJOR</code> version and will receive <code>PATCH</code> updates until 2 years after the date that 21.x is released.</li> <li><code>19.4.x</code> will receive <code>PATCH</code> updates until April 4, 2025.</li> </ul>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2020/","title":"2020","text":""},{"location":"blog/archive/2019/","title":"2019","text":""},{"location":"blog/category/guides/","title":"Guides","text":""},{"location":"blog/category/releases-v20/","title":"Releases v20","text":""},{"location":"blog/category/security/","title":"Security","text":""},{"location":"blog/category/releases-v19/","title":"Releases v19","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"blog/page/3/","title":"Blog","text":""},{"location":"blog/page/4/","title":"Blog","text":""},{"location":"blog/page/5/","title":"Blog","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""},{"location":"blog/category/releases-v19/page/2/","title":"Releases v19","text":""},{"location":"blog/category/releases-v19/page/3/","title":"Releases v19","text":""},{"location":"blog/category/releases-v20/page/2/","title":"Releases v20","text":""},{"location":"blog/category/releases-v20/page/3/","title":"Releases v20","text":""},{"location":"blog/category/releases-v20/page/4/","title":"Releases v20","text":""}]}