<?php
/**
 * OpenMage
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available at https://opensource.org/license/afl-3-0-php
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (https://www.magento.com)
 * @copyright   Copyright (c) 2021-2022 The OpenMage Contributors (https://www.openmage.org)
 * @license     https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
/**
 * Template for displaying product price at product view page, gift registry and wishlist
 *
 * @var $this Mage_Catalog_Block_Product_Price
 */
?>
<?php
    /** @var $_coreHelper Mage_Core_Helper_Data */
    $_coreHelper = $this->helper('core');
    /** @var $_catalogHelper Mage_Catalog_Helper_Data */
    $_catalogHelper = $this->helper('catalog');

    /** @var $_product Mage_Catalog_Model_Product */
    $_product = $this->getProduct();
    $_id = $_product->getId();
    $_msrpPrice = '';
?>
    <div class="price-box map-info">
    <?php $_price = $this->helper('tax')->getPrice($_product, $_product->getMsrp()) ?>
        <?php if($_product->getMsrp()): ?>
            <?php $_msrpPrice = $_coreHelper->currency($_product->getMsrp(),true,true) ?>
            <span class="old-price" ><?= $_msrpPrice ?></span>
        <?php endif ?>

        <?php if ($_catalogHelper->isShowPriceOnGesture($_product)): ?>
            <?php $priceElementId = 'product-price-' . $_id . $this->getIdSuffix(); ?>
            <span id="<?= $priceElementId ?>" style="display:none"></span>
            <?php $popupId = 'msrp-popup-' . $_id . $_coreHelper->getRandomString(20); ?>
            <a href="#" id="<?php echo($popupId);?>"><?= $this->__('Click for price') ?></a>
            <script type="text/javascript">
                Event.observe(window, 'load', function() {
                    var priceElement = $("<?= $priceElementId ?>"),
                        realPrice = <?= $this->getRealPriceJs($_product) ?>,
                        priceHtml = realPrice.stripScripts();

                    priceElement.innerHTML = priceHtml;
                    realPrice.evalScripts();
                    var originalOptionPriceReload;
                    if (typeof(optionsPrice) != 'undefined' && optionsPrice && optionsPrice.reload) {
                        originalOptionPriceReload = optionsPrice.reload;
                        Product.OptionsPrice.prototype.reload = function() {
                            if (originalOptionPriceReload) {
                                originalOptionPriceReload.call(this);
                            }
                            if ($('<?= $popupId ?>') == Catalog.Map.active) {
                                Element.update(
                                    $('map-popup-price'),
                                    $("<?= $priceElementId ?>").innerHTML
                                );
                            }
                        }
                    }
                });

                Catalog.Map.addHelpLink(
                    $('<?= $popupId ?>'),
                    "<?= $_product->getName() ?>",
                    $("<?= $priceElementId ?>"),
                    '<?= $_msrpPrice ?>',
                    "<?= $_product->isSalable() ? $this->getAddToCartUrlCustom($_product, [], false) : '' ?>"
                );
            </script>
        <?php else: ?>
            <span class="msrp-price-hide-message">
                <?= $_catalogHelper->getMsrpPriceMessage($_product) ?>
            </span>
        <?php endif ?>

        <?php $helpLinkId = 'msrp-help-' . $_id . $_coreHelper->getRandomString(20); ?>
        <a href="#" id="<?php echo($helpLinkId);?>"><?= $this->__("What's this?") ?></a>
        <script type="text/javascript">
            Catalog.Map.addHelpLink(
                $('<?= $helpLinkId ?>'),
                '<?= Mage::helper('core')->jsQuoteEscape($this->__("What's this?")) ?>'
            );
        </script>
    </div>
